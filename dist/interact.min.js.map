{"version":3,"sources":["src/header.js","index.js","interact.js","src/Eventable.js","src/InteractEvent.js","src/Interactable.js","src/Interaction.js","src/actions/drag.js","src/actions/drop.js","src/actions/gesture.js","src/actions/index.js","src/actions/resize.js","src/autoScroll.js","src/autoStart/delay.js","src/autoStart/drag.js","src/autoStart/gesture.js","src/autoStart/index.js","src/autoStart/resize.js","src/defaultOptions.js","src/index.js","src/inertia.js","src/interact.js","src/interactablePreventDefault.js","src/legacyBrowsers.js","src/modifiers/index.js","src/modifiers/restrict.js","src/modifiers/restrictEdges.js","src/modifiers/restrictSize.js","src/modifiers/snap.js","src/pointerEvents/holdRepeat.js","src/pointerEvents/index.js","src/pointerEvents/interactableTargets.js","src/scope.js","src/utils/Signals.js","src/utils/arr.js","src/utils/browser.js","src/utils/domObjects.js","src/utils/domUtils.js","src/utils/events.js","src/utils/extend.js","src/utils/getOriginXY.js","src/utils/hypot.js","src/utils/index.js","src/utils/interactionFinder.js","src/utils/isType.js","src/utils/isWindow.js","src/utils/pointerExtend.js","src/utils/pointerUtils.js","src/utils/raf.js","src/utils/rect.js","src/utils/window.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","interact","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","init","./src/index","./src/utils/window","2","_classCallCheck","instance","Constructor","TypeError","fireUntilImmediateStopped","event","listeners","len","immediatePropagationStopped","_require","indexOf","extend","Eventable","options","prototype","fire","undefined","onEvent","type","propagationStopped","on","eventType","listener","push","off","eventList","index","splice","./utils/arr","./utils/extend.js","3","getOriginXY","defaults","signals","InteractEvent","interaction","action","phase","element","related","target","deltaSource","origin","starting","ending","coords","startCoords","curCoords","prevEvent","page","client","x","y","ctrlKey","altKey","shiftKey","metaKey","button","buttons","currentTarget","relatedTarget","interactable","t0","downTimes","signalArg","iEvent","pageX","pageY","clientX","clientY","x0","y0","clientX0","clientY0","timeStamp","dt","pointerDelta","duration","speed","velocityX","vx","velocityY","vy","swipe","getSwipe","angle","Math","atan2","PI","overlap","left","up","right","down","velocity","preventDefault","stopImmediatePropagation","stopPropagation","_ref","dx","dy","./defaultOptions","./utils/Signals","./utils/extend","./utils/getOriginXY","4","isType","events","domUtils","actions","scope","getElementRect","nodeContains","_require2","contains","_require3","wheelEvent","interactables","Interactable","_context","context","document","_win","getWindow","trySelector","_doc","win","addDocument","set","setOnEvents","phases","onAction","isFunction","onstart","onmove","onend","oninertiastart","setPerAction","option","isObject","perAction","enabled","isBool","getRect","isString","isElement","querySelector","rectChecker","checker","_backCompatOption","optionName","newValue","_iterator","names","_isArray","Array","isArray","_i","Symbol","iterator","next","done","value","inContext","ownerDocument","ignoreFrom","allowFrom","testIgnore","interactableElement","matchesUpTo","testAllow","testIgnoreAllow","_onOffMultiple","method","useCapture","search","trim","split","prop","eventTypes","addDelegate","add","removeDelegate","remove","base","perActions","actionName","methodDict","methodName","_iterator2","settingsMethods","_isArray2","_i2","_ref2","setting","unset","delegatedEvents","delegated","selectors","contexts","delegateListener","delegateUseCapture","_iterator3","interactions","_isArray3","_i3","_ref3","interacting","stop","indexOfElement","get","dontCheckInContext","ret","forEachSelector","callback","./Eventable","./actions","./scope","./utils/browser","./utils/domUtils","./utils/events","./utils/isType","5","doOnInteractions","eventTarget","utils","getActualElement","path","curEventTarget","matches","browser","supportsTouch","test","prevTouchTime","Date","getTime","changedTouches","pointer","finder","Interaction","invalidPointer","supportsPointerEvent","mouse","pointerIsDown","pointerType","_updateEventTargets","endAll","end","onDocSignal","signalName","doc","eventMethod","docEvents","methodNames","prepared","name","axis","edges","pointers","pointerIds","downTargets","holdTimers","prevCoords","downEvent","downPointer","_eventTarget","_curEventTarget","pointerWasMoved","_interacting","pointerDown","pointerIndex","updatePointer","setCoords","copyCoords","pointerExtend","start","copyAction","pointerMove","simulation","duplicateMove","hypot","pointerMoveTolerance","getPointerIndex","duplicate","interactingBeforeMove","setCoordDeltas","doMove","_dontFireMove","pointerUp","removePointer","currentAction","getPointerId","id","pEventTypes","PointerEvent","move","cancel","mousedown","mousemove","mouseup","touchstart","touchmove","touchend","touchcancel","blur","endAllInteractions","./utils","./utils/interactionFinder","6","defaultOptions","drag","mouseButtons","snap","restrict","inertia","autoScroll","startAxis","lockAxis","dragOptions","getCursor","dragEvent","abs","_ref4","draggable","ondragstart","ondragend","merge","../InteractEvent","../Interactable","../Interaction","../defaultOptions","../utils","./index","7","collectDrops","drops","elements","current","drop","accept","matchesSelector","dropElements","querySelectorAll","currentElement","dropzones","fireActiveDrops","prevElement","activeDrops","setActiveDrops","dragElement","possibleDrops","rects","getDrop","validDrops","dynamicDrop","j","rect","dropCheck","dropIndex","indexOfDeepestElement","dropzone","getDropEvents","pointerEvent","dropEvents","enter","leave","activate","deactivate","tmpl","dropElement","dropTarget","prevDropElement","prevDropTarget","dragLeave","prevDropzone","dragEnter","dragmove","fireDropEvents","draggableElement","dropResult","_ref5","_ref6","ondrop","ondropactivate","ondropdeactivate","ondragenter","ondragleave","ondropmove","isNumber","max","min","dropped","dropOverlap","getPageXY","horizontal","vertical","top","bottom","dragRect","cx","width","cy","height","overlapArea","overlapRatio","_ref7","_ref8","../interact","../scope","8","gesture","gestureEvent","ds","startDistance","prevDistance","distance","startAngle","prevAngle","scale","Infinity","isNaN","gesturable","ongesturestart","ongestureend","touches","touchDistance","box","touchBBox","touchAngle","da","prevScale","9","10","checkResizeEdge","margin","defaultMargin","resize","square","preserveAspectRatio","NaN","invert","resizeOptions","resizeEdges","edge","axes","cursors","isIe9OrOlder","xy","topleft","bottomright","topright","bottomleft","cursorKey","edgeNames","resizeEvent","startRect","linkedEdges","_linkedEdges","resizeStartAspectRatio","resizeRects","inverted","previous","delta","deltaRect","invertible","originalEdges","startAspectRatio","swap","resizable","onresizestart","onresizeend","resizeAxes","../utils/browser","11","raf","isWindow","container","isScrolling","prevTime","request","scroll","now","scrollBy","scrollLeft","scrollTop","check","onInteractionMove","innerWidth","innerHeight","getElementClientRect","./Interaction","./utils/raf","./utils/window","12","autoStart","delayTimer","delay","setTimeout","clearTimeout","13","checkStartAxis","thisAxis","parentNode","setActionDefaults","absX","absY","currentAxis","getDraggable","selector","useMatchesSelectorPolyfill","manualStart","_action","getAction","validateAction","elementInteractable","selectorInteractable","../actions/drag","../utils/domUtils","../utils/isType","14","../actions/gesture","15","withinInteractionLimit","validateSelector","matchElements","match","matchElement","getActionInfo","pushMatches","actionInfo","prepare","styleCursor","documentElement","style","cursor","maxActions","maxPerElement","activeInteractions","targetCount","targetElementCount","maxInteractions","otherAction","perActionDefaults","arg","defaultActionChecker","actionChecker","0","../actions","../utils/Signals","16","../actions/resize","17","resistance","minSpeed","endSpeed","allowResume","smoothEndDuration","18","./actions/drag","./actions/drop","./actions/gesture","./actions/resize","./autoScroll","./autoStart/delay","./autoStart/drag","./autoStart/gesture","./autoStart/resize","./inertia","./interact","./interactablePreventDefault.js","./legacyBrowsers","./modifiers/restrict","./modifiers/restrictEdges","./modifiers/restrictSize","./modifiers/snap","./pointerEvents","./pointerEvents/holdRepeat","./pointerEvents/interactableTargets","19","calcInertia","status","inertiaOptions","lambda","inertiaDur","log","v0","startEvent","sx","sy","modifiedXe","xe","vx0","modifiedYe","ye","vy0","te","lambda_v0","one_ve_v0","inertiaFrame","updateInertiaCoords","inertiaStatus","progress","exp","quadPoint","getQuadraticCurvePoint","animationFrame","boundInertiaFrame","active","smoothEndFrame","easeOutQuad","boundSmoothEndFrame","smoothEnd","pageUp","upCoords","clientUp","modifiers","vys","apply","resumeEvent","resetStatuses","modifierStatuses","statuses","pointerSpeed","inertiaPossible","modifierResult","setAll","shouldMove","locked","./InteractEvent","./modifiers","20","globalEvents","isSet","debug","getPointerAverage","pointerAverage","getTouchBBox","getTouchDistance","getTouchAngle","closest","removeDocument","./Interactable","21","onInteractionEvent","checkAndPreventDefault","_arr","eventSignal","dragstart","22","onIE8Dblclick","iFinder","prevTap","pointerEvents","collectEventTargets","toString","Object","obj","String","replace","isIE8","selectFix","onDocIE8","23","shouldDo","preEnd","requireEndOnly","endOnly","setOffsets","startOffset","setModifierOffsets","modifierOffsets","offsets","modifierName","setOffset","coordsArg","result","changed","currentStatus","modifier","modifierOptions","reset","modifyCoords","../utils/extend","24","restriction","elementRect","offset","pageCoords","restrictOptions","useStatusXY","modifiedX","modifiedY","25","getRestrictionRect","getStringOptionResult","rectUtils","noMin","noMax","restrictEdges","xywhToTlbr","../utils/rect","26","restrictSize","minSize","tlbrToXywh","maxSize","./restrictEdges","27","range","targets","relativePoints","snapOptions","snapOffset","relativeX","relativeY","realX","realY","offsetX","offsetY","snapTarget","inRange","snapChanged","snappedX","snappedY","createSnapGrid","grid","limits","gridx","round","gridy","newX","newY","28","endHoldRepeat","holdIntervalHandle","clearInterval","count","interval","eventable","holdRepeatInterval","signal","types","./index.js","29","preventOriginalDefault","originalEvent","firePointers","createNewDoubleTap","pointerId","tapTime","props","_utils$getOriginXY","originX","originY","doubleTap","getPath","filter","holdDuration","createSignalListener","simpleSignals","simpleEvents","timeout","eventCopy","timers","timer","minDuration","forEach","../utils/arr","30","collectSelectors","els","__backCompatOption","31","documents","onWindowUnload","./utils/domObjects","32","Signals","targetListeners","./arr","33","array","source","34","domObjects","DocumentTouch","isOperaMobile","navigator","appName","userAgent","isIOS7","platform","appVersion","prefixedMatchesSelector","Element","MSPointerEvent","over","out","./domObjects","./isType","./window","35","blank","DocumentFragment","SVGElement","SVGSVGElement","SVGElementInstance","HTMLElement","Event","Touch","36","parent","child","node","isDocFrag","host","matchesSelectorPolyfill","elems","nodeList","realWindow","deepestZoneParents","dropzoneParents","deepestZone","unshift","ownerSVGElement","parents","lastChild","previousSibling","limit","correspondingUseElement","getScrollXY","relevantWindow","scrollX","scrollY","clientRect","getBoundingClientRect","getClientRects","_scroll","./browser","37","elementIndex","typeCount","attachedListeners","useAttachEvent","supplied","wrapped","useCount","_attachedListeners$elementIndex","listenerIndex","wrappedListener","srcElement","preventDef","stopProp","stopImmProp","addEvent","removeEvent","hasOwnProperty","matchFound","fn","useCap","fakeEvent","pExtend","returnValue","cancelBubble","arr","_elements","_targets","_attachedListeners","./domUtils","./pointerExtend","38","dest","39","40","sqrt","41","warnOnce","message","warned","console","warn","arguments","_getQBezierValue","p1","p2","p3","iT","startX","startY","cpX","cpY","endX","endY","position","b","c","d","src","./extend","./getOriginXY","./hypot","./pointerUtils","42","methodOrder","mouseEvent","details","simulationResume","firstNonActive","_iterator4","_isArray4","_i4","hasPointer","_ref9","_iterator5","_isArray5","_i5","idle","_ref10","_iterator6","_isArray6","_i6","43","_window","nodeType","nodeName","thing","./isWindow","44","Window","45","prefixedPropREs","deprecated","vendor","webkit","46","dom","pointerUtils","targetObj","prev","cur","isNativePointer","getXY","getClientXY","identifier","tmpXY","getTouchPair","average","screenX","screenY","minX","minY","maxX","maxY","sourceX","sourceY","47","vendors","lastTime","requestAnimationFrame","currTime","timeToCall","48","49","el","createTextNode","wrap","rootNode","defaultView","parentWindow"],"mappings":"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","file":"interact.min.js","sourcesContent":["/**\n * interact.js 1.3.0\n *\n * Copyright (c) 2012-2016 Taye Adeyemi <dev@taye.me>\n * Open source under the MIT License.\n * https://raw.github.com/taye/interact.js/master/LICENSE\n */\n","/*\n * In a (windowless) server environment this file exports a factory function\n * that takes the window to use.\n *\n *     var interact = require('interact.js')(windowObject);\n *\n * See https://github.com/taye/interact.js/issues/187\n */\nif (typeof window === 'undefined') {\n  module.exports = function (window) {\n    require('./src/utils/window').init(window);\n\n    return require('./src/index');\n  };\n}\nelse {\n  module.exports = require('./src/index');\n}\n","/**\n * interact.js 1.3.0\n *\n * Copyright (c) 2012-2016 Taye Adeyemi <dev@taye.me>\n * Open source under the MIT License.\n * https://raw.github.com/taye/interact.js/master/LICENSE\n */\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.interact = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n/*\n * In a (windowless) server environment this file exports a factory function\n * that takes the window to use.\n *\n *     var interact = require('interact.js')(windowObject);\n *\n * See https://github.com/taye/interact.js/issues/187\n */\nif (typeof window === 'undefined') {\n  module.exports = function (window) {\n    require('./src/utils/window').init(window);\n\n    return require('./src/index');\n  };\n} else {\n  module.exports = require('./src/index');\n}\n\n},{\"./src/index\":18,\"./src/utils/window\":49}],2:[function(require,module,exports){\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _require = require('./utils/arr');\n\nvar indexOf = _require.indexOf;\n\nvar extend = require('./utils/extend.js');\n\nfunction fireUntilImmediateStopped(event, listeners) {\n  for (var i = 0, len = listeners.length; i < len && !event.immediatePropagationStopped; i++) {\n    listeners[i](event);\n  }\n}\n\nvar Eventable = (function () {\n  function Eventable(options) {\n    _classCallCheck(this, Eventable);\n\n    this.options = extend({}, options || {});\n  }\n\n  Eventable.prototype.fire = function fire(event) {\n    var listeners = undefined;\n    var onEvent = 'on' + event.type;\n    var global = this.global;\n\n    // Interactable#on() listeners\n    if (listeners = this[event.type]) {\n      fireUntilImmediateStopped(event, listeners);\n    }\n\n    // interactable.onevent listener\n    if (this[onEvent]) {\n      this[onEvent](event);\n    }\n\n    // interact.on() listeners\n    if (!event.propagationStopped && global && (listeners = global[event.type])) {\n      fireUntilImmediateStopped(event, listeners);\n    }\n  };\n\n  Eventable.prototype.on = function on(eventType, listener) {\n    // if this type of event was never bound\n    if (!(eventType in this)) {\n      this[eventType] = [listener];\n    } else {\n      this[eventType].push(listener);\n    }\n  };\n\n  Eventable.prototype.off = function off(eventType, listener) {\n    // if it is an action event type\n    var eventList = this[eventType];\n    var index = eventList ? indexOf(eventList, listener) : -1;\n\n    if (index !== -1) {\n      this[eventType].splice(index, 1);\n    }\n  };\n\n  return Eventable;\n})();\n\nmodule.exports = Eventable;\n\n},{\"./utils/arr\":33,\"./utils/extend.js\":38}],3:[function(require,module,exports){\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar extend = require('./utils/extend');\nvar getOriginXY = require('./utils/getOriginXY');\nvar defaults = require('./defaultOptions');\nvar signals = require('./utils/Signals')['new']();\n\nvar InteractEvent = (function () {\n  function InteractEvent(interaction, event, action, phase, element, related) {\n    _classCallCheck(this, InteractEvent);\n\n    var target = interaction.target;\n    var deltaSource = (target && target.options || defaults).deltaSource;\n    var origin = getOriginXY(target, element, action);\n    var starting = phase === 'start';\n    var ending = phase === 'end';\n    var coords = starting ? interaction.startCoords : interaction.curCoords;\n    var prevEvent = interaction.prevEvent;\n\n    element = element || interaction.element;\n\n    var page = extend({}, coords.page);\n    var client = extend({}, coords.client);\n\n    page.x -= origin.x;\n    page.y -= origin.y;\n\n    client.x -= origin.x;\n    client.y -= origin.y;\n\n    this.ctrlKey = event.ctrlKey;\n    this.altKey = event.altKey;\n    this.shiftKey = event.shiftKey;\n    this.metaKey = event.metaKey;\n    this.button = event.button;\n    this.buttons = event.buttons;\n    this.target = element;\n    this.currentTarget = element;\n    this.relatedTarget = related || null;\n    this.type = action + (phase || '');\n    this.interaction = interaction;\n    this.interactable = target;\n\n    this.t0 = starting ? interaction.downTimes[interaction.downTimes.length - 1] : prevEvent.t0;\n\n    var signalArg = {\n      interaction: interaction,\n      event: event,\n      action: action,\n      phase: phase,\n      element: element,\n      related: related,\n      page: page,\n      client: client,\n      coords: coords,\n      starting: starting,\n      ending: ending,\n      deltaSource: deltaSource,\n      iEvent: this\n    };\n\n    signals.fire('set-xy', signalArg);\n\n    if (ending) {\n      // use previous coords when ending\n      this.pageX = prevEvent.pageX;\n      this.pageY = prevEvent.pageY;\n      this.clientX = prevEvent.clientX;\n      this.clientY = prevEvent.clientY;\n    } else {\n      this.pageX = page.x;\n      this.pageY = page.y;\n      this.clientX = client.x;\n      this.clientY = client.y;\n    }\n\n    this.x0 = interaction.startCoords.page.x - origin.x;\n    this.y0 = interaction.startCoords.page.y - origin.y;\n    this.clientX0 = interaction.startCoords.client.x - origin.x;\n    this.clientY0 = interaction.startCoords.client.y - origin.y;\n\n    signals.fire('set-delta', signalArg);\n\n    this.timeStamp = coords.timeStamp;\n    this.dt = interaction.pointerDelta.timeStamp;\n    this.duration = this.timeStamp - this.t0;\n\n    // speed and velocity in pixels per second\n    this.speed = interaction.pointerDelta[deltaSource].speed;\n    this.velocityX = interaction.pointerDelta[deltaSource].vx;\n    this.velocityY = interaction.pointerDelta[deltaSource].vy;\n\n    this.swipe = ending || phase === 'inertiastart' ? this.getSwipe() : null;\n\n    signals.fire('new', signalArg);\n  }\n\n  InteractEvent.prototype.getSwipe = function getSwipe() {\n    var interaction = this.interaction;\n\n    if (interaction.prevEvent.speed < 600 || this.timeStamp - interaction.prevEvent.timeStamp > 150) {\n      return null;\n    }\n\n    var angle = 180 * Math.atan2(interaction.prevEvent.velocityY, interaction.prevEvent.velocityX) / Math.PI;\n    var overlap = 22.5;\n\n    if (angle < 0) {\n      angle += 360;\n    }\n\n    var left = 135 - overlap <= angle && angle < 225 + overlap;\n    var up = 225 - overlap <= angle && angle < 315 + overlap;\n\n    var right = !left && (315 - overlap <= angle || angle < 45 + overlap);\n    var down = !up && 45 - overlap <= angle && angle < 135 + overlap;\n\n    return {\n      up: up,\n      down: down,\n      left: left,\n      right: right,\n      angle: angle,\n      speed: interaction.prevEvent.speed,\n      velocity: {\n        x: interaction.prevEvent.velocityX,\n        y: interaction.prevEvent.velocityY\n      }\n    };\n  };\n\n  InteractEvent.prototype.preventDefault = function preventDefault() {};\n\n  InteractEvent.prototype.stopImmediatePropagation = function stopImmediatePropagation() {\n    this.immediatePropagationStopped = this.propagationStopped = true;\n  };\n\n  InteractEvent.prototype.stopPropagation = function stopPropagation() {\n    this.propagationStopped = true;\n  };\n\n  return InteractEvent;\n})();\n\nsignals.on('set-delta', function (_ref) {\n  var iEvent = _ref.iEvent;\n  var interaction = _ref.interaction;\n  var starting = _ref.starting;\n  var deltaSource = _ref.deltaSource;\n\n  var prevEvent = starting ? iEvent : interaction.prevEvent;\n\n  if (deltaSource === 'client') {\n    iEvent.dx = iEvent.clientX - prevEvent.clientX;\n    iEvent.dy = iEvent.clientY - prevEvent.clientY;\n  } else {\n    iEvent.dx = iEvent.pageX - prevEvent.pageX;\n    iEvent.dy = iEvent.pageY - prevEvent.pageY;\n  }\n});\n\nInteractEvent.signals = signals;\n\nmodule.exports = InteractEvent;\n\n},{\"./defaultOptions\":17,\"./utils/Signals\":32,\"./utils/extend\":38,\"./utils/getOriginXY\":39}],4:[function(require,module,exports){\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar isType = require('./utils/isType');\nvar events = require('./utils/events');\nvar extend = require('./utils/extend');\nvar domUtils = require('./utils/domUtils');\nvar actions = require('./actions');\nvar scope = require('./scope');\nvar Eventable = require('./Eventable');\nvar defaults = require('./defaultOptions');\nvar signals = require('./utils/Signals')['new']();\n\nvar _require = require('./utils/domUtils');\n\nvar getElementRect = _require.getElementRect;\nvar nodeContains = _require.nodeContains;\n\nvar _require2 = require('./utils/arr');\n\nvar indexOf = _require2.indexOf;\nvar contains = _require2.contains;\n\nvar _require3 = require('./utils/browser');\n\nvar wheelEvent = _require3.wheelEvent;\n\n// all set interactables\nscope.interactables = [];\n\n/*\\\n * Interactable\n [ property ]\n **\n * Object type returned by @interact\n\\*/\n\nvar Interactable = (function () {\n  function Interactable(target, options) {\n    _classCallCheck(this, Interactable);\n\n    options = options || {};\n\n    this.target = target;\n    this.events = new Eventable();\n    this._context = options.context || scope.document;\n    this._win = scope.getWindow(isType.trySelector(target) ? this._context : target);\n    this._doc = this._win.document;\n\n    signals.fire('new', {\n      target: target,\n      options: options,\n      interactable: this,\n      win: this._win\n    });\n\n    scope.addDocument(this._doc, this._win);\n\n    scope.interactables.push(this);\n\n    this.set(options);\n  }\n\n  Interactable.prototype.setOnEvents = function setOnEvents(action, phases) {\n    var onAction = 'on' + action;\n\n    if (isType.isFunction(phases.onstart)) {\n      this.events[onAction + 'start'] = phases.onstart;\n    }\n    if (isType.isFunction(phases.onmove)) {\n      this.events[onAction + 'move'] = phases.onmove;\n    }\n    if (isType.isFunction(phases.onend)) {\n      this.events[onAction + 'end'] = phases.onend;\n    }\n    if (isType.isFunction(phases.oninertiastart)) {\n      this.events[onAction + 'inertiastart'] = phases.oninertiastart;\n    }\n\n    return this;\n  };\n\n  Interactable.prototype.setPerAction = function setPerAction(action, options) {\n    // for all the default per-action options\n    for (var option in options) {\n      // if this option exists for this action\n      if (option in defaults[action]) {\n        // if the option in the options arg is an object value\n        if (isType.isObject(options[option])) {\n          // duplicate the object\n          this.options[action][option] = extend(this.options[action][option] || {}, options[option]);\n\n          if (isType.isObject(defaults.perAction[option]) && 'enabled' in defaults.perAction[option]) {\n            this.options[action][option].enabled = options[option].enabled === false ? false : true;\n          }\n        } else if (isType.isBool(options[option]) && isType.isObject(defaults.perAction[option])) {\n          this.options[action][option].enabled = options[option];\n        } else if (options[option] !== undefined) {\n          // or if it's not undefined, do a plain assignment\n          this.options[action][option] = options[option];\n        }\n      }\n    }\n  };\n\n  /*\\\n   * Interactable.getRect\n   [ method ]\n   *\n   * The default function to get an Interactables bounding rect. Can be\n   * overridden using @Interactable.rectChecker.\n   *\n   - element (Element) #optional The element to measure.\n   = (object) The object's bounding rectangle.\n   o {\n   o     top   : 0,\n   o     left  : 0,\n   o     bottom: 0,\n   o     right : 0,\n   o     width : 0,\n   o     height: 0\n   o }\n  \\*/\n\n  Interactable.prototype.getRect = function getRect(element) {\n    element = element || this.target;\n\n    if (isType.isString(this.target) && !isType.isElement(element)) {\n      element = this._context.querySelector(this.target);\n    }\n\n    return getElementRect(element);\n  };\n\n  /*\\\n   * Interactable.rectChecker\n   [ method ]\n   *\n   * Returns or sets the function used to calculate the interactable's\n   * element's rectangle\n   *\n   - checker (function) #optional A function which returns this Interactable's bounding rectangle. See @Interactable.getRect\n   = (function | object) The checker function or this Interactable\n  \\*/\n\n  Interactable.prototype.rectChecker = function rectChecker(checker) {\n    if (isType.isFunction(checker)) {\n      this.getRect = checker;\n\n      return this;\n    }\n\n    if (checker === null) {\n      delete this.options.getRect;\n\n      return this;\n    }\n\n    return this.getRect;\n  };\n\n  Interactable.prototype._backCompatOption = function _backCompatOption(optionName, newValue) {\n    if (isType.trySelector(newValue) || isType.isObject(newValue)) {\n      this.options[optionName] = newValue;\n\n      for (var _iterator = actions.names, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var action = _ref;\n\n        this.options[action][optionName] = newValue;\n      }\n\n      return this;\n    }\n\n    return this.options[optionName];\n  };\n\n  /*\\\n   * Interactable.origin\n   [ method ]\n   *\n   * Gets or sets the origin of the Interactable's element.  The x and y\n   * of the origin will be subtracted from action event coordinates.\n   *\n   - origin (object | string) #optional An object eg. { x: 0, y: 0 } or string 'parent', 'self' or any CSS selector\n   * OR\n   - origin (Element) #optional An HTML or SVG Element whose rect will be used\n   **\n   = (object) The current origin or this Interactable\n  \\*/\n\n  Interactable.prototype.origin = function origin(newValue) {\n    return this._backCompatOption('origin', newValue);\n  };\n\n  /*\\\n   * Interactable.deltaSource\n   [ method ]\n   *\n   * Returns or sets the mouse coordinate types used to calculate the\n   * movement of the pointer.\n   *\n   - newValue (string) #optional Use 'client' if you will be scrolling while interacting; Use 'page' if you want autoScroll to work\n   = (string | object) The current deltaSource or this Interactable\n  \\*/\n\n  Interactable.prototype.deltaSource = function deltaSource(newValue) {\n    if (newValue === 'page' || newValue === 'client') {\n      this.options.deltaSource = newValue;\n\n      return this;\n    }\n\n    return this.options.deltaSource;\n  };\n\n  /*\\\n   * Interactable.context\n   [ method ]\n   *\n   * Gets the selector context Node of the Interactable. The default is `window.document`.\n   *\n   = (Node) The context Node of this Interactable\n   **\n  \\*/\n\n  Interactable.prototype.context = function context() {\n    return this._context;\n  };\n\n  Interactable.prototype.inContext = function inContext(element) {\n    return this._context === element.ownerDocument || nodeContains(this._context, element);\n  };\n\n  /*\\\n   * Interactable.ignoreFrom\n   [ method ]\n   *\n   * If the target of the `mousedown`, `pointerdown` or `touchstart`\n   * event or any of it's parents match the given CSS selector or\n   * Element, no drag/resize/gesture is started.\n   *\n   - newValue (string | Element | null) #optional a CSS selector string, an Element or `null` to not ignore any elements\n   = (string | Element | object) The current ignoreFrom value or this Interactable\n   **\n   | interact(element, { ignoreFrom: document.getElementById('no-action') });\n   | // or\n   | interact(element).ignoreFrom('input, textarea, a');\n  \\*/\n\n  Interactable.prototype.ignoreFrom = function ignoreFrom(newValue) {\n    return this._backCompatOption('ignoreFrom', newValue);\n  };\n\n  /*\\\n   * Interactable.allowFrom\n   [ method ]\n   *\n   * A drag/resize/gesture is started only If the target of the\n   * `mousedown`, `pointerdown` or `touchstart` event or any of it's\n   * parents match the given CSS selector or Element.\n   *\n   - newValue (string | Element | null) #optional a CSS selector string, an Element or `null` to allow from any element\n   = (string | Element | object) The current allowFrom value or this Interactable\n   **\n   | interact(element, { allowFrom: document.getElementById('drag-handle') });\n   | // or\n   | interact(element).allowFrom('.handle');\n  \\*/\n\n  Interactable.prototype.allowFrom = function allowFrom(newValue) {\n    return this._backCompatOption('allowFrom', newValue);\n  };\n\n  Interactable.prototype.testIgnore = function testIgnore(ignoreFrom, interactableElement, element) {\n    if (!ignoreFrom || !isType.isElement(element)) {\n      return false;\n    }\n\n    if (isType.isString(ignoreFrom)) {\n      return domUtils.matchesUpTo(element, ignoreFrom, interactableElement);\n    } else if (isType.isElement(ignoreFrom)) {\n      return domUtils.nodeContains(ignoreFrom, element);\n    }\n\n    return false;\n  };\n\n  Interactable.prototype.testAllow = function testAllow(allowFrom, interactableElement, element) {\n    if (!allowFrom) {\n      return true;\n    }\n\n    if (!isType.isElement(element)) {\n      return false;\n    }\n\n    if (isType.isString(allowFrom)) {\n      return domUtils.matchesUpTo(element, allowFrom, interactableElement);\n    } else if (isType.isElement(allowFrom)) {\n      return domUtils.nodeContains(allowFrom, element);\n    }\n\n    return false;\n  };\n\n  Interactable.prototype.testIgnoreAllow = function testIgnoreAllow(options, interactableElement, element) {\n    return !this.testIgnore(options.ignoreFrom, interactableElement, element) && this.testAllow(options.allowFrom, interactableElement, element);\n  };\n\n  /*\\\n   * Interactable.fire\n   [ method ]\n   *\n   * Calls listeners for the given InteractEvent type bound globally\n   * and directly to this Interactable\n   *\n   - iEvent (InteractEvent) The InteractEvent object to be fired on this Interactable\n   = (Interactable) this Interactable\n  \\*/\n\n  Interactable.prototype.fire = function fire(iEvent) {\n    this.events.fire(iEvent);\n\n    return this;\n  };\n\n  Interactable.prototype._onOffMultiple = function _onOffMultiple(method, eventType, listener, useCapture) {\n    if (isType.isString(eventType) && eventType.search(' ') !== -1) {\n      eventType = eventType.trim().split(/ +/);\n    }\n\n    if (isType.isArray(eventType)) {\n      for (var i = 0; i < eventType.length; i++) {\n        this[method](eventType[i], listener, useCapture);\n      }\n\n      return true;\n    }\n\n    if (isType.isObject(eventType)) {\n      for (var prop in eventType) {\n        this[method](prop, eventType[prop], listener);\n      }\n\n      return true;\n    }\n  };\n\n  /*\\\n   * Interactable.on\n   [ method ]\n   *\n   * Binds a listener for an InteractEvent, pointerEvent or DOM event.\n   *\n   - eventType  (string | array | object) The types of events to listen for\n   - listener   (function) The function event (s)\n   - useCapture (boolean) #optional useCapture flag for addEventListener\n   = (object) This Interactable\n  \\*/\n\n  Interactable.prototype.on = function on(eventType, listener, useCapture) {\n    // convert to boolean\n    useCapture = !!useCapture;\n\n    if (this._onOffMultiple('on', eventType, listener, useCapture)) {\n      return this;\n    }\n\n    if (eventType === 'wheel') {\n      eventType = wheelEvent;\n    }\n\n    if (contains(Interactable.eventTypes, eventType)) {\n      this.events.on(eventType, listener);\n    }\n    // delegated event for selector\n    else if (isType.isString(this.target)) {\n        events.addDelegate(this.target, this._context, eventType, listener, useCapture);\n      } else {\n        events.add(this.target, eventType, listener, useCapture);\n      }\n\n    return this;\n  };\n\n  /*\\\n   * Interactable.off\n   [ method ]\n   *\n   * Removes an InteractEvent, pointerEvent or DOM event listener\n   *\n   - eventType  (string | array | object) The types of events that were listened for\n   - listener   (function) The listener function to be removed\n   - useCapture (boolean) #optional useCapture flag for removeEventListener\n   = (object) This Interactable\n  \\*/\n\n  Interactable.prototype.off = function off(eventType, listener, useCapture) {\n    // convert to boolean\n    useCapture = !!useCapture;\n\n    if (this._onOffMultiple('off', eventType, listener, useCapture)) {\n      return this;\n    }\n\n    if (eventType === 'wheel') {\n      eventType = wheelEvent;\n    }\n\n    // if it is an action event type\n    if (contains(Interactable.eventTypes, eventType)) {\n      this.events.on(eventType, listener);\n    }\n    // delegated event\n    else if (isType.isString(this.target)) {\n        events.removeDelegate(this.target, this._context, eventType, listener, useCapture);\n      }\n      // remove listener from this Interatable's element\n      else {\n          events.remove(this.target, eventType, listener, useCapture);\n        }\n\n    return this;\n  };\n\n  /*\\\n   * Interactable.set\n   [ method ]\n   *\n   * Reset the options of this Interactable\n   - options (object) The new settings to apply\n   = (object) This Interactable\n  \\*/\n\n  Interactable.prototype.set = function set(options) {\n    if (!isType.isObject(options)) {\n      options = {};\n    }\n\n    this.options = extend({}, defaults.base);\n\n    var perActions = extend({}, defaults.perAction);\n\n    for (var actionName in actions.methodDict) {\n      var methodName = actions.methodDict[actionName];\n\n      this.options[actionName] = extend({}, defaults[actionName]);\n\n      this.setPerAction(actionName, perActions);\n\n      this[methodName](options[actionName]);\n    }\n\n    for (var _iterator2 = Interactable.settingsMethods, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var setting = _ref2;\n\n      this.options[setting] = defaults.base[setting];\n\n      if (setting in options) {\n        this[setting](options[setting]);\n      }\n    }\n\n    signals.fire('set', {\n      options: options,\n      interactable: this\n    });\n\n    return this;\n  };\n\n  /*\\\n   * Interactable.unset\n   [ method ]\n   *\n   * Remove this interactable from the list of interactables and remove\n   * it's action capabilities and event listeners\n   *\n   = (object) @interact\n  \\*/\n\n  Interactable.prototype.unset = function unset() {\n    events.remove(this.target, 'all');\n\n    if (isType.isString(this.target)) {\n      // remove delegated events\n      for (var type in events.delegatedEvents) {\n        var delegated = events.delegatedEvents[type];\n\n        if (delegated.selectors[0] === this.target && delegated.contexts[0] === this._context) {\n\n          delegated.selectors.splice(0, 1);\n          delegated.contexts.splice(0, 1);\n          delegated.listeners.splice(0, 1);\n\n          // remove the arrays if they are empty\n          if (!delegated.selectors.length) {\n            delegated[type] = null;\n          }\n        }\n\n        events.remove(this._context, type, events.delegateListener);\n        events.remove(this._context, type, events.delegateUseCapture, true);\n      }\n    } else {\n      events.remove(this, 'all');\n    }\n\n    signals.fire('unset', { interactable: this });\n\n    scope.interactables.splice(indexOf(scope.interactables, this), 1);\n\n    // Stop related interactions when an Interactable is unset\n    for (var _iterator3 = scope.interactions || [], _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n      var _ref3;\n\n      if (_isArray3) {\n        if (_i3 >= _iterator3.length) break;\n        _ref3 = _iterator3[_i3++];\n      } else {\n        _i3 = _iterator3.next();\n        if (_i3.done) break;\n        _ref3 = _i3.value;\n      }\n\n      var interaction = _ref3;\n\n      if (interaction.target === this && interaction.interacting()) {\n        interaction.stop();\n      }\n    }\n\n    return scope.interact;\n  };\n\n  return Interactable;\n})();\n\nscope.interactables.indexOfElement = function indexOfElement(target, context) {\n  context = context || scope.document;\n\n  for (var i = 0; i < this.length; i++) {\n    var interactable = this[i];\n\n    if (interactable.target === target && (!isType.isString(target) || interactable._context === context)) {\n      return i;\n    }\n  }\n  return -1;\n};\n\nscope.interactables.get = function interactableGet(element, options, dontCheckInContext) {\n  var ret = this[this.indexOfElement(element, options && options.context)];\n\n  return ret && (dontCheckInContext || ret.inContext(element)) ? ret : null;\n};\n\nscope.interactables.forEachSelector = function (callback, element) {\n  for (var i = 0; i < this.length; i++) {\n    var interactable = this[i];\n\n    // skip non CSS selector targets and out of context elements\n    if (!isType.isString(interactable.target) || element && !interactable.inContext(element)) {\n      continue;\n    }\n\n    var ret = callback(interactable, interactable.target, interactable._context, i, this);\n\n    if (ret !== undefined) {\n      return ret;\n    }\n  }\n};\n\n// all interact.js eventTypes\nInteractable.eventTypes = scope.eventTypes = [];\n\nInteractable.signals = signals;\n\nInteractable.settingsMethods = ['deltaSource', 'origin', 'preventDefault', 'rectChecker'];\n\nmodule.exports = Interactable;\n\n},{\"./Eventable\":2,\"./actions\":9,\"./defaultOptions\":17,\"./scope\":31,\"./utils/Signals\":32,\"./utils/arr\":33,\"./utils/browser\":34,\"./utils/domUtils\":36,\"./utils/events\":37,\"./utils/extend\":38,\"./utils/isType\":43}],5:[function(require,module,exports){\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar scope = require('./scope');\nvar utils = require('./utils');\nvar events = require('./utils/events');\nvar browser = require('./utils/browser');\nvar finder = require('./utils/interactionFinder');\nvar signals = require('./utils/Signals')['new']();\n\nvar listeners = {};\nvar methodNames = ['pointerDown', 'pointerMove', 'pointerUp', 'updatePointer', 'removePointer'];\n\n// for ignoring browser's simulated mouse events\nvar prevTouchTime = 0;\n\n// all active and idle interactions\nscope.interactions = [];\n\nvar Interaction = (function () {\n  function Interaction() {\n    _classCallCheck(this, Interaction);\n\n    this.target = null; // current interactable being interacted with\n    this.element = null; // the target element of the interactable\n\n    this.prepared = { // action that's ready to be fired on next move event\n      name: null,\n      axis: null,\n      edges: null\n    };\n\n    // keep track of added pointers\n    this.pointers = [];\n    this.pointerIds = [];\n    this.downTargets = [];\n    this.downTimes = [];\n    this.holdTimers = [];\n\n    // Previous native pointer move event coordinates\n    this.prevCoords = {\n      page: { x: 0, y: 0 },\n      client: { x: 0, y: 0 },\n      timeStamp: 0\n    };\n    // current native pointer move event coordinates\n    this.curCoords = {\n      page: { x: 0, y: 0 },\n      client: { x: 0, y: 0 },\n      timeStamp: 0\n    };\n\n    // Starting InteractEvent pointer coordinates\n    this.startCoords = {\n      page: { x: 0, y: 0 },\n      client: { x: 0, y: 0 },\n      timeStamp: 0\n    };\n\n    // Change in coordinates and time of the pointer\n    this.pointerDelta = {\n      page: { x: 0, y: 0, vx: 0, vy: 0, speed: 0 },\n      client: { x: 0, y: 0, vx: 0, vy: 0, speed: 0 },\n      timeStamp: 0\n    };\n\n    this.downEvent = null; // pointerdown/mousedown/touchstart event\n    this.downPointer = {};\n\n    this._eventTarget = null;\n    this._curEventTarget = null;\n\n    this.prevEvent = null; // previous action event\n\n    this.pointerIsDown = false;\n    this.pointerWasMoved = false;\n    this._interacting = false;\n\n    this.mouse = false;\n\n    signals.fire('new', this);\n\n    scope.interactions.push(this);\n  }\n\n  Interaction.prototype.pointerDown = function pointerDown(pointer, event, eventTarget) {\n    var pointerIndex = this.updatePointer(pointer);\n\n    this.pointerIsDown = true;\n\n    if (!this.interacting()) {\n      utils.setCoords(this.startCoords, this.pointers);\n\n      utils.copyCoords(this.curCoords, this.startCoords);\n      utils.copyCoords(this.prevCoords, this.startCoords);\n\n      this.downEvent = event;\n\n      this.downTimes[pointerIndex] = this.curCoords.timeStamp;\n      this.downTargets[pointerIndex] = eventTarget;\n\n      this.pointerWasMoved = false;\n\n      utils.pointerExtend(this.downPointer, pointer);\n    }\n\n    signals.fire('down', {\n      pointer: pointer,\n      event: event,\n      eventTarget: eventTarget,\n      pointerIndex: pointerIndex,\n      interaction: this\n    });\n  };\n\n  /*\\\n   * Interaction.start\n   [ method ]\n   *\n   * Start an action with the given Interactable and Element as tartgets. The\n   * action must be enabled for the target Interactable and an appropriate number\n   * of pointers must be held down - 1 for drag/resize, 2 for gesture.\n   *\n   * Use it with `interactable.<action>able({ manualStart: false })` to always\n   * [start actions manually](https://github.com/taye/interact.js/issues/114)\n   *\n   - action  (object)  The action to be performed - drag, resize, etc.\n   - target  (Interactable) The Interactable to target\n   - element (Element) The DOM Element to target\n   = (object) interact\n   **\n   | interact(target)\n   |   .draggable({\n   |     // disable the default drag start by down->move\n   |     manualStart: true\n   |   })\n   |   // start dragging after the user holds the pointer down\n   |   .on('hold', function (event) {\n   |     var interaction = event.interaction;\n   |\n   |     if (!interaction.interacting()) {\n   |       interaction.start({ name: 'drag' },\n   |                         event.interactable,\n   |                         event.currentTarget);\n   |     }\n   | });\n   \\*/\n\n  Interaction.prototype.start = function start(action, target, element) {\n    if (this.interacting() || !this.pointerIsDown || this.pointerIds.length < (action.name === 'gesture' ? 2 : 1)) {\n      return;\n    }\n\n    // if this interaction had been removed after stopping\n    // add it back\n    if (utils.indexOf(scope.interactions, this) === -1) {\n      scope.interactions.push(this);\n    }\n\n    utils.copyAction(this.prepared, action);\n    this.target = target;\n    this.element = element;\n\n    signals.fire('action-start', {\n      interaction: this,\n      event: this.downEvent\n    });\n  };\n\n  Interaction.prototype.pointerMove = function pointerMove(pointer, event, eventTarget) {\n    if (!this.simulation) {\n      this.updatePointer(pointer);\n      utils.setCoords(this.curCoords, this.pointers);\n    }\n\n    var duplicateMove = this.curCoords.page.x === this.prevCoords.page.x && this.curCoords.page.y === this.prevCoords.page.y && this.curCoords.client.x === this.prevCoords.client.x && this.curCoords.client.y === this.prevCoords.client.y;\n\n    var dx = undefined;\n    var dy = undefined;\n\n    // register movement greater than pointerMoveTolerance\n    if (this.pointerIsDown && !this.pointerWasMoved) {\n      dx = this.curCoords.client.x - this.startCoords.client.x;\n      dy = this.curCoords.client.y - this.startCoords.client.y;\n\n      this.pointerWasMoved = utils.hypot(dx, dy) > Interaction.pointerMoveTolerance;\n    }\n\n    var signalArg = {\n      pointer: pointer,\n      pointerIndex: this.getPointerIndex(pointer),\n      event: event,\n      eventTarget: eventTarget,\n      dx: dx,\n      dy: dy,\n      duplicate: duplicateMove,\n      interaction: this,\n      interactingBeforeMove: this.interacting()\n    };\n\n    if (!duplicateMove) {\n      // set pointer coordinate, time changes and speeds\n      utils.setCoordDeltas(this.pointerDelta, this.prevCoords, this.curCoords);\n    }\n\n    signals.fire('move', signalArg);\n\n    if (!duplicateMove) {\n      // if interacting, fire an 'action-move' signal etc\n      if (this.interacting()) {\n        this.doMove(signalArg);\n      }\n\n      if (this.pointerWasMoved) {\n        utils.copyCoords(this.prevCoords, this.curCoords);\n      }\n    }\n  };\n\n  /*\\\n   * Interaction.doMove\n   [ method ]\n   *\n   * Force a move of the current action at the same coordinates. Useful if\n   * snap/restrict has been changed and you want a movement with the new\n   * settings.\n   *\n   **\n   | interact(target)\n   |   .draggable(true)\n   |   .on('dragmove', function (event) {\n   |     if (someCondition) {\n   |       // change the snap settings\n   |       event.interactable.draggable({ snap: { targets: [] }});\n   |       // fire another move event with re-calculated snap\n   |       event.interaction.doMove();\n   |     }\n   |   });\n   \\*/\n\n  Interaction.prototype.doMove = function doMove(signalArg) {\n    signalArg = utils.extend({\n      pointer: this.pointers[0],\n      event: this.prevEvent,\n      eventTarget: this._eventTarget,\n      interaction: this\n    }, signalArg || {});\n\n    signals.fire('before-action-move', signalArg);\n\n    if (!this._dontFireMove) {\n      signals.fire('action-move', signalArg);\n    }\n\n    this._dontFireMove = false;\n  };\n\n  // End interact move events and stop auto-scroll unless simulation is running\n\n  Interaction.prototype.pointerUp = function pointerUp(pointer, event, eventTarget, curEventTarget) {\n    var pointerIndex = this.getPointerIndex(pointer);\n\n    signals.fire(/cancel$/i.test(event.type) ? 'cancel' : 'up', {\n      pointer: pointer,\n      pointerIndex: pointerIndex,\n      event: event,\n      eventTarget: eventTarget,\n      curEventTarget: curEventTarget,\n      interaction: this\n    });\n\n    if (!this.simulation) {\n      this.end(event);\n    }\n\n    this.pointerIsDown = false;\n    this.removePointer(pointer);\n  };\n\n  /*\\\n   * Interaction.end\n   [ method ]\n   *\n   * Stop the current action and fire an end event. Inertial movement does\n   * not happen.\n   *\n   - event (PointerEvent) #optional\n   **\n   | interact(target)\n   |   .draggable(true)\n   |   .on('move', function (event) {\n   |     if (event.pageX > 1000) {\n   |       // end the current action\n   |       event.interaction.end();\n   |       // stop all further listeners from being called\n   |       event.stopImmediatePropagation();\n   |     }\n   |   });\n   \\*/\n\n  Interaction.prototype.end = function end(event) {\n    event = event || this.prevEvent;\n\n    if (this.interacting()) {\n      signals.fire('action-end', {\n        event: event,\n        interaction: this\n      });\n    }\n\n    this.stop();\n  };\n\n  Interaction.prototype.currentAction = function currentAction() {\n    return this._interacting ? this.prepared.name : null;\n  };\n\n  Interaction.prototype.interacting = function interacting() {\n    return this._interacting;\n  };\n\n  Interaction.prototype.stop = function stop() {\n    signals.fire('stop', { interaction: this });\n\n    if (this._interacting) {\n      signals.fire('stop-active', { interaction: this });\n      signals.fire('stop-' + this.prepared.name, { interaction: this });\n    }\n\n    this.target = this.element = null;\n\n    this.pointerIsDown = this._interacting = false;\n    this.prepared.name = this.prevEvent = null;\n  };\n\n  Interaction.prototype.getPointerIndex = function getPointerIndex(pointer) {\n    return this.mouse ? 0 : utils.indexOf(this.pointerIds, utils.getPointerId(pointer));\n  };\n\n  Interaction.prototype.updatePointer = function updatePointer(pointer) {\n    var id = utils.getPointerId(pointer);\n    var index = this.getPointerIndex(pointer);\n\n    if (index === -1) {\n      index = this.pointerIds.length;\n    }\n\n    this.pointerIds[index] = id;\n    this.pointers[index] = pointer;\n\n    return index;\n  };\n\n  Interaction.prototype.removePointer = function removePointer(pointer) {\n    var id = utils.getPointerId(pointer);\n    var index = this.mouse ? 0 : utils.indexOf(this.pointerIds, id);\n\n    if (index === -1) {\n      return;\n    }\n\n    this.pointers.splice(index, 1);\n    this.pointerIds.splice(index, 1);\n    this.downTargets.splice(index, 1);\n    this.downTimes.splice(index, 1);\n    this.holdTimers.splice(index, 1);\n  };\n\n  Interaction.prototype._updateEventTargets = function _updateEventTargets(target, currentTarget) {\n    this._eventTarget = target;\n    this._curEventTarget = currentTarget;\n  };\n\n  return Interaction;\n})();\n\nfor (var i = 0, len = methodNames.length; i < len; i++) {\n  var method = methodNames[i];\n\n  listeners[method] = doOnInteractions(method);\n}\n\nfunction doOnInteractions(method) {\n  return function (event) {\n    var eventTarget = utils.getActualElement(event.path ? event.path[0] : event.target);\n    var curEventTarget = utils.getActualElement(event.currentTarget);\n    var matches = []; // [ [pointer, interaction], ...]\n\n    if (browser.supportsTouch && /touch/.test(event.type)) {\n      prevTouchTime = new Date().getTime();\n\n      for (var i = 0; i < event.changedTouches.length; i++) {\n        var pointer = event.changedTouches[i];\n        var interaction = finder.search(pointer, event.type, eventTarget);\n\n        matches.push([pointer, interaction || new Interaction()]);\n      }\n    } else {\n      var invalidPointer = false;\n\n      if (!browser.supportsPointerEvent && /mouse/.test(event.type)) {\n        // ignore mouse events while touch interactions are active\n        for (var i = 0; i < scope.interactions.length && !invalidPointer; i++) {\n          invalidPointer = !scope.interactions[i].mouse && scope.interactions[i].pointerIsDown;\n        }\n\n        // try to ignore mouse events that are simulated by the browser\n        // after a touch event\n        invalidPointer = invalidPointer || new Date().getTime() - prevTouchTime < 500;\n      }\n\n      if (!invalidPointer) {\n        var interaction = finder.search(event, event.type, eventTarget);\n\n        if (!interaction) {\n\n          interaction = new Interaction();\n          interaction.mouse = /mouse/i.test(event.pointerType || event.type)\n          // MSPointerEvent.MSPOINTER_TYPE_MOUSE\n           || event.pointerType === 4;\n        }\n\n        matches.push([event, interaction]);\n      }\n    }\n\n    for (var _iterator = matches, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var pointer = _ref[0];\n      var interaction = _ref[1];\n\n      interaction._updateEventTargets(eventTarget, curEventTarget);\n      interaction[method](pointer, event, eventTarget, curEventTarget);\n    }\n  };\n}\n\nfunction endAll(event) {\n  for (var i = 0; i < scope.interactions.length; i++) {\n    var interaction = scope.interactions[i];\n\n    interaction.end(event);\n    signals.fire('endall', { event: event, interaction: interaction });\n  }\n}\n\nvar docEvents = {/* 'eventType': listenerFunc */};\nvar pEventTypes = browser.pEventTypes;\n\nif (scope.PointerEvent) {\n  docEvents[pEventTypes.down] = listeners.pointerDown;\n  docEvents[pEventTypes.move] = listeners.pointerMove;\n  docEvents[pEventTypes.up] = listeners.pointerUp;\n  docEvents[pEventTypes.cancel] = listeners.pointerUp;\n} else {\n  docEvents.mousedown = listeners.pointerDown;\n  docEvents.mousemove = listeners.pointerMove;\n  docEvents.mouseup = listeners.pointerUp;\n\n  docEvents.touchstart = listeners.pointerDown;\n  docEvents.touchmove = listeners.pointerMove;\n  docEvents.touchend = listeners.pointerUp;\n  docEvents.touchcancel = listeners.pointerUp;\n}\n\ndocEvents.blur = endAll;\n\nfunction onDocSignal(_ref2, signalName) {\n  var doc = _ref2.doc;\n\n  var eventMethod = signalName.indexOf('add') === 0 ? events.add : events.remove;\n\n  // delegate event listener\n  for (var eventType in scope.delegatedEvents) {\n    eventMethod(doc, eventType, events.delegateListener);\n    eventMethod(doc, eventType, events.delegateUseCapture, true);\n  }\n\n  for (var eventType in docEvents) {\n    eventMethod(doc, eventType, docEvents[eventType]);\n  }\n}\n\nscope.signals.on('add-document', onDocSignal);\nscope.signals.on('remove-document', onDocSignal);\n\nInteraction.pointerMoveTolerance = 1;\nInteraction.doOnInteractions = doOnInteractions;\nInteraction.endAll = endAll;\nInteraction.signals = signals;\nInteraction.docEvents = docEvents;\n\nscope.endAllInteractions = endAll;\n\nmodule.exports = Interaction;\n\n},{\"./scope\":31,\"./utils\":41,\"./utils/Signals\":32,\"./utils/browser\":34,\"./utils/events\":37,\"./utils/interactionFinder\":42}],6:[function(require,module,exports){\nvar actions = require('./index');\nvar utils = require('../utils');\nvar InteractEvent = require('../InteractEvent');\nvar Interactable = require('../Interactable');\nvar Interaction = require('../Interaction');\nvar defaultOptions = require('../defaultOptions');\n\nvar drag = {\n  defaults: {\n    enabled: false,\n    mouseButtons: null,\n\n    origin: null,\n    snap: null,\n    restrict: null,\n    inertia: null,\n    autoScroll: null,\n\n    startAxis: 'xy',\n    lockAxis: 'xy'\n  },\n\n  checker: function (pointer, event, interactable) {\n    var dragOptions = interactable.options.drag;\n\n    return dragOptions.enabled ? { name: 'drag', axis: dragOptions.lockAxis === 'start' ? dragOptions.startAxis : dragOptions.lockAxis } : null;\n  },\n\n  getCursor: function () {\n    return 'move';\n  }\n};\n\nInteraction.signals.on('action-start', function (_ref) {\n  var interaction = _ref.interaction;\n  var event = _ref.event;\n\n  if (interaction.prepared.name !== 'drag') {\n    return;\n  }\n\n  var dragEvent = new InteractEvent(interaction, event, 'drag', 'start', interaction.element);\n\n  interaction._interacting = true;\n  interaction.target.fire(dragEvent);\n  interaction.prevEvent = dragEvent;\n});\n\nInteraction.signals.on('before-action-move', function (_ref2) {\n  var interaction = _ref2.interaction;\n\n  if (interaction.prepared.name !== 'drag') {\n    return;\n  }\n\n  var axis = interaction.prepared.axis;\n\n  if (axis === 'x') {\n    interaction.curCoords.page.y = interaction.startCoords.page.y;\n    interaction.curCoords.client.y = interaction.startCoords.client.y;\n\n    interaction.pointerDelta.page.speed = Math.abs(interaction.pointerDelta.page.vx);\n    interaction.pointerDelta.client.speed = Math.abs(interaction.pointerDelta.client.vx);\n    interaction.pointerDelta.client.vy = 0;\n    interaction.pointerDelta.page.vy = 0;\n  } else if (axis === 'y') {\n    interaction.curCoords.page.x = interaction.startCoords.page.x;\n    interaction.curCoords.client.x = interaction.startCoords.client.x;\n\n    interaction.pointerDelta.page.speed = Math.abs(interaction.pointerDelta.page.vy);\n    interaction.pointerDelta.client.speed = Math.abs(interaction.pointerDelta.client.vy);\n    interaction.pointerDelta.client.vx = 0;\n    interaction.pointerDelta.page.vx = 0;\n  }\n});\n\nInteraction.signals.on('action-move', function (_ref3) {\n  var interaction = _ref3.interaction;\n  var event = _ref3.event;\n\n  if (interaction.prepared.name !== 'drag') {\n    return;\n  }\n\n  var dragEvent = new InteractEvent(interaction, event, 'drag', 'move', interaction.element);\n\n  var axis = interaction.prepared.axis;\n\n  if (axis === 'x') {\n    dragEvent.pageY = interaction.startCoords.page.y;\n    dragEvent.clientY = interaction.startCoords.client.y;\n    dragEvent.dy = 0;\n  } else if (axis === 'y') {\n    dragEvent.pageX = interaction.startCoords.page.x;\n    dragEvent.clientX = interaction.startCoords.client.x;\n    dragEvent.dx = 0;\n  }\n\n  interaction.target.fire(dragEvent);\n  interaction.prevEvent = dragEvent;\n\n  // if the action was ended in a dragmove listener\n  if (!interaction.interacting()) {\n    return false;\n  }\n});\n\nInteraction.signals.on('action-end', function (_ref4) {\n  var interaction = _ref4.interaction;\n  var event = _ref4.event;\n\n  if (interaction.prepared.name !== 'drag') {\n    return;\n  }\n\n  var dragEvent = new InteractEvent(interaction, event, 'drag', 'end', interaction.element);\n\n  interaction.target.fire(dragEvent);\n  interaction.prevEvent = dragEvent;\n});\n\n/*\\\n * Interactable.draggable\n [ method ]\n *\n * Gets or sets whether drag actions can be performed on the\n * Interactable\n *\n = (boolean) Indicates if this can be the target of drag events\n | var isDraggable = interact('ul li').draggable();\n * or\n - options (boolean | object) #optional true/false or An object with event listeners to be fired on drag events (object makes the Interactable draggable)\n = (object) This Interactable\n | interact(element).draggable({\n |     onstart: function (event) {},\n |     onmove : function (event) {},\n |     onend  : function (event) {},\n |\n |     // the axis in which the first movement must be\n |     // for the drag sequence to start\n |     // 'xy' by default - any direction\n |     startAxis: 'x' || 'y' || 'xy',\n |\n |     // 'xy' by default - don't restrict to one axis (move in any direction)\n |     // 'x' or 'y' to restrict movement to either axis\n |     // 'start' to restrict movement to the axis the drag started in\n |     lockAxis: 'x' || 'y' || 'xy' || 'start',\n |\n |     // max number of drags that can happen concurrently\n |     // with elements of this Interactable. Infinity by default\n |     max: Infinity,\n |\n |     // max number of drags that can target the same element+Interactable\n |     // 1 by default\n |     maxPerElement: 2\n | });\n\\*/\nInteractable.prototype.draggable = function (options) {\n  if (utils.isObject(options)) {\n    this.options.drag.enabled = options.enabled === false ? false : true;\n    this.setPerAction('drag', options);\n    this.setOnEvents('drag', options);\n\n    if (/^(xy|x|y|start)$/.test(options.lockAxis)) {\n      this.options.drag.lockAxis = options.lockAxis;\n    }\n    if (/^(xy|x|y)$/.test(options.startAxis)) {\n      this.options.drag.startAxis = options.startAxis;\n    }\n\n    return this;\n  }\n\n  if (utils.isBool(options)) {\n    this.options.drag.enabled = options;\n\n    if (!options) {\n      this.ondragstart = this.ondragstart = this.ondragend = null;\n    }\n\n    return this;\n  }\n\n  return this.options.drag;\n};\n\nactions.drag = drag;\nactions.names.push('drag');\nutils.merge(Interactable.eventTypes, ['dragstart', 'dragmove', 'draginertiastart', 'draginertiaresume', 'dragend']);\nactions.methodDict.drag = 'draggable';\n\ndefaultOptions.drag = drag.defaults;\n\nmodule.exports = drag;\n\n},{\"../InteractEvent\":3,\"../Interactable\":4,\"../Interaction\":5,\"../defaultOptions\":17,\"../utils\":41,\"./index\":9}],7:[function(require,module,exports){\nvar actions = require('./index');\nvar utils = require('../utils');\nvar scope = require('../scope');\nvar interact = require('../interact');\nvar InteractEvent = require('../InteractEvent');\nvar Interactable = require('../Interactable');\nvar Interaction = require('../Interaction');\nvar defaultOptions = require('../defaultOptions');\n\nvar drop = {\n  defaults: {\n    enabled: false,\n    accept: null,\n    overlap: 'pointer'\n  }\n};\n\nvar dynamicDrop = false;\n\nInteraction.signals.on('action-start', function (_ref2) {\n  var interaction = _ref2.interaction;\n  var event = _ref2.event;\n\n  if (interaction.prepared.name !== 'drag') {\n    return;\n  }\n\n  // reset active dropzones\n  interaction.activeDrops.dropzones = [];\n  interaction.activeDrops.elements = [];\n  interaction.activeDrops.rects = [];\n\n  interaction.dropEvents = null;\n\n  if (!interaction.dynamicDrop) {\n    setActiveDrops(interaction, interaction.element);\n  }\n\n  var dragEvent = interaction.prevEvent;\n  var dropEvents = getDropEvents(interaction, event, dragEvent);\n\n  if (dropEvents.activate) {\n    fireActiveDrops(interaction, dropEvents.activate);\n  }\n});\n\nInteractEvent.signals.on('new', function (_ref3) {\n  var interaction = _ref3.interaction;\n  var iEvent = _ref3.iEvent;\n  var event = _ref3.event;\n\n  if (iEvent.type !== 'dragmove' && iEvent.type !== 'dragend') {\n    return;\n  }\n\n  var draggableElement = interaction.element;\n  var dragEvent = iEvent;\n  var dropResult = getDrop(dragEvent, event, draggableElement);\n\n  interaction.dropTarget = dropResult.dropzone;\n  interaction.dropElement = dropResult.element;\n\n  interaction.dropEvents = getDropEvents(interaction, event, dragEvent);\n});\n\nInteraction.signals.on('action-move', function (_ref4) {\n  var interaction = _ref4.interaction;\n\n  if (interaction.prepared.name !== 'drag') {\n    return;\n  }\n\n  fireDropEvents(interaction, interaction.dropEvents);\n});\n\nInteraction.signals.on('action-end', function (_ref5) {\n  var interaction = _ref5.interaction;\n\n  if (interaction.prepared.name === 'drag') {\n    fireDropEvents(interaction, interaction.dropEvents);\n  }\n});\n\nInteraction.signals.on('stop-drag', function (_ref6) {\n  var interaction = _ref6.interaction;\n\n  interaction.activeDrops.dropzones = interaction.activeDrops.elements = interaction.activeDrops.rects = interaction.dropEvents = null;\n});\n\nfunction collectDrops(interaction, element) {\n  var drops = [];\n  var elements = [];\n\n  element = element || interaction.element;\n\n  // collect all dropzones and their elements which qualify for a drop\n  for (var _iterator = scope.interactables, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var current = _ref;\n\n    if (!current.options.drop.enabled) {\n      continue;\n    }\n\n    var accept = current.options.drop.accept;\n\n    // test the draggable element against the dropzone's accept setting\n    if (utils.isElement(accept) && accept !== element || utils.isString(accept) && !utils.matchesSelector(element, accept)) {\n\n      continue;\n    }\n\n    // query for new elements if necessary\n    var dropElements = utils.isString(current.target) ? current._context.querySelectorAll(current.target) : [current.target];\n\n    for (var i = 0; i < dropElements.length; i++) {\n      var currentElement = dropElements[i];\n\n      if (currentElement !== element) {\n        drops.push(current);\n        elements.push(currentElement);\n      }\n    }\n  }\n\n  return {\n    elements: elements,\n    dropzones: drops\n  };\n}\n\nfunction fireActiveDrops(interaction, event) {\n  var prevElement = undefined;\n\n  // loop through all active dropzones and trigger event\n  for (var i = 0; i < interaction.activeDrops.dropzones.length; i++) {\n    var current = interaction.activeDrops.dropzones[i];\n    var currentElement = interaction.activeDrops.elements[i];\n\n    // prevent trigger of duplicate events on same element\n    if (currentElement !== prevElement) {\n      // set current element as event target\n      event.target = currentElement;\n      current.fire(event);\n    }\n    prevElement = currentElement;\n  }\n}\n\n// Collect a new set of possible drops and save them in activeDrops.\n// setActiveDrops should always be called when a drag has just started or a\n// drag event happens while dynamicDrop is true\nfunction setActiveDrops(interaction, dragElement) {\n  // get dropzones and their elements that could receive the draggable\n  var possibleDrops = collectDrops(interaction, dragElement, true);\n\n  interaction.activeDrops.dropzones = possibleDrops.dropzones;\n  interaction.activeDrops.elements = possibleDrops.elements;\n  interaction.activeDrops.rects = [];\n\n  for (var i = 0; i < interaction.activeDrops.dropzones.length; i++) {\n    interaction.activeDrops.rects[i] = interaction.activeDrops.dropzones[i].getRect(interaction.activeDrops.elements[i]);\n  }\n}\n\nfunction getDrop(dragEvent, event, dragElement) {\n  var interaction = dragEvent.interaction;\n  var validDrops = [];\n\n  if (dynamicDrop) {\n    setActiveDrops(interaction, dragElement);\n  }\n\n  // collect all dropzones and their elements which qualify for a drop\n  for (var j = 0; j < interaction.activeDrops.dropzones.length; j++) {\n    var current = interaction.activeDrops.dropzones[j];\n    var currentElement = interaction.activeDrops.elements[j];\n    var rect = interaction.activeDrops.rects[j];\n\n    validDrops.push(current.dropCheck(dragEvent, event, interaction.target, dragElement, currentElement, rect) ? currentElement : null);\n  }\n\n  // get the most appropriate dropzone based on DOM depth and order\n  var dropIndex = utils.indexOfDeepestElement(validDrops);\n\n  return {\n    dropzone: interaction.activeDrops.dropzones[dropIndex] || null,\n    element: interaction.activeDrops.elements[dropIndex] || null\n  };\n}\n\nfunction getDropEvents(interaction, pointerEvent, dragEvent) {\n  var dropEvents = {\n    enter: null,\n    leave: null,\n    activate: null,\n    deactivate: null,\n    move: null,\n    drop: null\n  };\n\n  var tmpl = {\n    dragEvent: dragEvent,\n    interaction: interaction,\n    target: interaction.dropElement,\n    dropzone: interaction.dropTarget,\n    relatedTarget: dragEvent.target,\n    draggable: dragEvent.interactable,\n    timeStamp: dragEvent.timeStamp\n  };\n\n  if (interaction.dropElement !== interaction.prevDropElement) {\n    // if there was a prevDropTarget, create a dragleave event\n    if (interaction.prevDropTarget) {\n      dropEvents.leave = utils.extend({ type: 'dragleave' }, tmpl);\n\n      dragEvent.dragLeave = dropEvents.leave.target = interaction.prevDropElement;\n      dragEvent.prevDropzone = dropEvents.leave.dropzone = interaction.prevDropTarget;\n    }\n    // if the dropTarget is not null, create a dragenter event\n    if (interaction.dropTarget) {\n      dropEvents.enter = {\n        dragEvent: dragEvent,\n        interaction: interaction,\n        target: interaction.dropElement,\n        dropzone: interaction.dropTarget,\n        relatedTarget: dragEvent.target,\n        draggable: dragEvent.interactable,\n        timeStamp: dragEvent.timeStamp,\n        type: 'dragenter'\n      };\n\n      dragEvent.dragEnter = interaction.dropElement;\n      dragEvent.dropzone = interaction.dropTarget;\n    }\n  }\n\n  if (dragEvent.type === 'dragend' && interaction.dropTarget) {\n    dropEvents.drop = utils.extend({ type: 'drop' }, tmpl);\n\n    dragEvent.dropzone = interaction.dropTarget;\n    dragEvent.relatedTarget = interaction.dropElement;\n  }\n  if (dragEvent.type === 'dragstart') {\n    dropEvents.activate = utils.extend({ type: 'dropactivate' }, tmpl);\n\n    dropEvents.activate.target = null;\n    dropEvents.activate.dropzone = null;\n  }\n  if (dragEvent.type === 'dragend') {\n    dropEvents.deactivate = utils.extend({ type: 'dropdeactivate' }, tmpl);\n\n    dropEvents.deactivate.target = null;\n    dropEvents.deactivate.dropzone = null;\n  }\n  if (dragEvent.type === 'dragmove' && interaction.dropTarget) {\n    dropEvents.move = utils.extend({\n      dragmove: dragEvent,\n      type: 'dropmove'\n    }, tmpl);\n\n    dragEvent.dropzone = interaction.dropTarget;\n  }\n\n  return dropEvents;\n}\n\nfunction fireDropEvents(interaction, dropEvents) {\n  if (dropEvents.leave) {\n    interaction.prevDropTarget.fire(dropEvents.leave);\n  }\n  if (dropEvents.move) {\n    interaction.dropTarget.fire(dropEvents.move);\n  }\n  if (dropEvents.enter) {\n    interaction.dropTarget.fire(dropEvents.enter);\n  }\n  if (dropEvents.drop) {\n    interaction.dropTarget.fire(dropEvents.drop);\n  }\n  if (dropEvents.move) {\n    interaction.dropTarget.fire(dropEvents.move);\n  }\n  if (dropEvents.deactivate) {\n    fireActiveDrops(interaction, dropEvents.deactivate);\n  }\n\n  interaction.prevDropTarget = interaction.dropTarget;\n  interaction.prevDropElement = interaction.dropElement;\n}\n\n/*\\\n * Interactable.dropzone\n [ method ]\n *\n * Returns or sets whether elements can be dropped onto this\n * Interactable to trigger drop events\n *\n * Dropzones can receive the following events:\n *  - `dropactivate` and `dropdeactivate` when an acceptable drag starts and ends\n *  - `dragenter` and `dragleave` when a draggable enters and leaves the dropzone\n *  - `dragmove` when a draggable that has entered the dropzone is moved\n *  - `drop` when a draggable is dropped into this dropzone\n *\n * Use the `accept` option to allow only elements that match the given CSS\n * selector or element. The value can be:\n *\n *  - **an Element** - only that element can be dropped into this dropzone.\n *  - **a string**, - the element being dragged must match it as a CSS selector.\n *  - **`null`** - accept options is cleared - it accepts any element.\n *\n * Use the `overlap` option to set how drops are checked for. The allowed\n * values are:\n *\n *   - `'pointer'`, the pointer must be over the dropzone (default)\n *   - `'center'`, the draggable element's center must be over the dropzone\n *   - a number from 0-1 which is the `(intersection area) / (draggable area)`.\n *   e.g. `0.5` for drop to happen when half of the area of the draggable is\n *   over the dropzone\n *\n * Use the `checker` option to specify a function to check if a dragged\n * element is over this Interactable.\n *\n | interact(target)\n | .dropChecker(function(dragEvent,         // related dragmove or dragend event\n |                       event,             // TouchEvent/PointerEvent/MouseEvent\n |                       dropped,           // bool result of the default checker\n |                       dropzone,          // dropzone Interactable\n |                       dropElement,       // dropzone elemnt\n |                       draggable,         // draggable Interactable\n |                       draggableElement) {// draggable element\n |\n |   return dropped && event.target.hasAttribute('allow-drop');\n | }\n *\n *\n - options (boolean | object | null) #optional The new value to be set.\n | interact('.drop').dropzone({\n |   accept: '.can-drop' || document.getElementById('single-drop'),\n |   overlap: 'pointer' || 'center' || zeroToOne\n | }\n = (boolean | object) The current setting or this Interactable\n\\*/\nInteractable.prototype.dropzone = function (options) {\n  if (utils.isObject(options)) {\n    this.options.drop.enabled = options.enabled === false ? false : true;\n\n    if (utils.isFunction(options.ondrop)) {\n      this.events.ondrop = options.ondrop;\n    }\n    if (utils.isFunction(options.ondropactivate)) {\n      this.events.ondropactivate = options.ondropactivate;\n    }\n    if (utils.isFunction(options.ondropdeactivate)) {\n      this.events.ondropdeactivate = options.ondropdeactivate;\n    }\n    if (utils.isFunction(options.ondragenter)) {\n      this.events.ondragenter = options.ondragenter;\n    }\n    if (utils.isFunction(options.ondragleave)) {\n      this.events.ondragleave = options.ondragleave;\n    }\n    if (utils.isFunction(options.ondropmove)) {\n      this.events.ondropmove = options.ondropmove;\n    }\n\n    if (/^(pointer|center)$/.test(options.overlap)) {\n      this.options.drop.overlap = options.overlap;\n    } else if (utils.isNumber(options.overlap)) {\n      this.options.drop.overlap = Math.max(Math.min(1, options.overlap), 0);\n    }\n    if ('accept' in options) {\n      this.options.drop.accept = options.accept;\n    }\n    if ('checker' in options) {\n      this.options.drop.checker = options.checker;\n    }\n\n    return this;\n  }\n\n  if (utils.isBool(options)) {\n    this.options.drop.enabled = options;\n\n    if (!options) {\n      this.ondragenter = this.ondragleave = this.ondrop = this.ondropactivate = this.ondropdeactivate = null;\n    }\n\n    return this;\n  }\n\n  return this.options.drop;\n};\n\nInteractable.prototype.dropCheck = function (dragEvent, event, draggable, draggableElement, dropElement, rect) {\n  var dropped = false;\n\n  // if the dropzone has no rect (eg. display: none)\n  // call the custom dropChecker or just return false\n  if (!(rect = rect || this.getRect(dropElement))) {\n    return this.options.drop.checker ? this.options.drop.checker(dragEvent, event, dropped, this, dropElement, draggable, draggableElement) : false;\n  }\n\n  var dropOverlap = this.options.drop.overlap;\n\n  if (dropOverlap === 'pointer') {\n    var origin = utils.getOriginXY(draggable, draggableElement, 'drag');\n    var page = utils.getPageXY(dragEvent);\n\n    page.x += origin.x;\n    page.y += origin.y;\n\n    var horizontal = page.x > rect.left && page.x < rect.right;\n    var vertical = page.y > rect.top && page.y < rect.bottom;\n\n    dropped = horizontal && vertical;\n  }\n\n  var dragRect = draggable.getRect(draggableElement);\n\n  if (dragRect && dropOverlap === 'center') {\n    var cx = dragRect.left + dragRect.width / 2;\n    var cy = dragRect.top + dragRect.height / 2;\n\n    dropped = cx >= rect.left && cx <= rect.right && cy >= rect.top && cy <= rect.bottom;\n  }\n\n  if (dragRect && utils.isNumber(dropOverlap)) {\n    var overlapArea = Math.max(0, Math.min(rect.right, dragRect.right) - Math.max(rect.left, dragRect.left)) * Math.max(0, Math.min(rect.bottom, dragRect.bottom) - Math.max(rect.top, dragRect.top));\n\n    var overlapRatio = overlapArea / (dragRect.width * dragRect.height);\n\n    dropped = overlapRatio >= dropOverlap;\n  }\n\n  if (this.options.drop.checker) {\n    dropped = this.options.drop.checker(dragEvent, event, dropped, this, dropElement, draggable, draggableElement);\n  }\n\n  return dropped;\n};\n\nInteractable.signals.on('unset', function (_ref7) {\n  var interactable = _ref7.interactable;\n\n  interactable.dropzone(false);\n});\n\nInteractable.settingsMethods.push('dropChecker');\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.dropTarget = null; // the dropzone a drag target might be dropped into\n  interaction.dropElement = null; // the element at the time of checking\n  interaction.prevDropTarget = null; // the dropzone that was recently dragged away from\n  interaction.prevDropElement = null; // the element at the time of checking\n  interaction.dropEvents = null; // the dropEvents related to the current drag event\n\n  interaction.activeDrops = {\n    dropzones: [], // the dropzones that are mentioned below\n    elements: [], // elements of dropzones that accept the target draggable\n    rects: [] };\n});\n\n// the rects of the elements mentioned above\nInteraction.signals.on('stop', function (_ref8) {\n  var interaction = _ref8.interaction;\n\n  interaction.dropTarget = interaction.dropElement = interaction.prevDropTarget = interaction.prevDropElement = null;\n});\n\n/*\\\n * interact.dynamicDrop\n [ method ]\n *\n * Returns or sets whether the dimensions of dropzone elements are\n * calculated on every dragmove or only on dragstart for the default\n * dropChecker\n *\n - newValue (boolean) #optional True to check on each move. False to check only before start\n = (boolean | interact) The current setting or interact\n\\*/\ninteract.dynamicDrop = function (newValue) {\n  if (utils.isBool(newValue)) {\n    //if (dragging && dynamicDrop !== newValue && !newValue) {\n    //calcRects(dropzones);\n    //}\n\n    dynamicDrop = newValue;\n\n    return interact;\n  }\n  return dynamicDrop;\n};\n\nutils.merge(Interactable.eventTypes, ['dragenter', 'dragleave', 'dropactivate', 'dropdeactivate', 'dropmove', 'drop']);\nactions.methodDict.drop = 'dropzone';\n\ndefaultOptions.drop = drop.defaults;\n\nmodule.exports = drop;\n\n},{\"../InteractEvent\":3,\"../Interactable\":4,\"../Interaction\":5,\"../defaultOptions\":17,\"../interact\":20,\"../scope\":31,\"../utils\":41,\"./index\":9}],8:[function(require,module,exports){\nvar actions = require('./index');\nvar utils = require('../utils');\nvar InteractEvent = require('../InteractEvent');\nvar Interactable = require('../Interactable');\nvar Interaction = require('../Interaction');\nvar defaultOptions = require('../defaultOptions');\n\nvar gesture = {\n  defaults: {\n    enabled: false,\n    origin: null,\n    restrict: null\n  },\n\n  checker: function (pointer, event, interactable, element, interaction) {\n    if (interaction.pointerIds.length >= 2) {\n      return { name: 'gesture' };\n    }\n\n    return null;\n  },\n\n  getCursor: function () {\n    return '';\n  }\n};\n\nInteraction.signals.on('action-start', function (_ref) {\n  var interaction = _ref.interaction;\n  var event = _ref.event;\n\n  if (interaction.prepared.name !== 'gesture') {\n    return;\n  }\n\n  var gestureEvent = new InteractEvent(interaction, event, 'gesture', 'start', interaction.element);\n\n  gestureEvent.ds = 0;\n\n  interaction.gesture.startDistance = interaction.gesture.prevDistance = gestureEvent.distance;\n  interaction.gesture.startAngle = interaction.gesture.prevAngle = gestureEvent.angle;\n  interaction.gesture.scale = 1;\n\n  interaction._interacting = true;\n\n  interaction.target.fire(gestureEvent);\n  interaction.prevEvent = gestureEvent;\n});\n\nInteraction.signals.on('action-move', function (_ref2) {\n  var interaction = _ref2.interaction;\n  var event = _ref2.event;\n\n  if (interaction.prepared.name !== 'gesture') {\n    return;\n  }\n\n  var gestureEvent = new InteractEvent(interaction, event, 'gesture', 'move', interaction.element);\n\n  gestureEvent.ds = gestureEvent.scale - interaction.gesture.scale;\n\n  interaction.target.fire(gestureEvent);\n\n  interaction.gesture.prevAngle = gestureEvent.angle;\n  interaction.gesture.prevDistance = gestureEvent.distance;\n\n  if (gestureEvent.scale !== Infinity && gestureEvent.scale !== null && gestureEvent.scale !== undefined && !isNaN(gestureEvent.scale)) {\n\n    interaction.gesture.scale = gestureEvent.scale;\n  }\n\n  interaction.prevEvent = gestureEvent;\n\n  // if the action was ended in a gesturemove listener\n  if (!interaction.interacting()) {\n    return false;\n  }\n});\n\nInteraction.signals.on('action-end', function (_ref3) {\n  var interaction = _ref3.interaction;\n  var event = _ref3.event;\n\n  if (interaction.prepared.name !== 'gesture') {\n    return;\n  }\n\n  var gestureEvent = new InteractEvent(interaction, event, 'gesture', 'end', interaction.element);\n\n  interaction.target.fire(gestureEvent);\n  interaction.prevEvent = gestureEvent;\n});\n\n/*\\\n * Interactable.gesturable\n [ method ]\n *\n * Gets or sets whether multitouch gestures can be performed on the\n * Interactable's element\n *\n = (boolean) Indicates if this can be the target of gesture events\n   | var isGestureable = interact(element).gesturable();\n * or\n - options (boolean | object) #optional true/false or An object with event listeners to be fired on gesture events (makes the Interactable gesturable)\n = (object) this Interactable\n | interact(element).gesturable({\n |     onstart: function (event) {},\n |     onmove : function (event) {},\n |     onend  : function (event) {},\n |\n |     // limit multiple gestures.\n |     // See the explanation in @Interactable.draggable example\n |     max: Infinity,\n |     maxPerElement: 1,\n | });\n\\*/\nInteractable.prototype.gesturable = function (options) {\n  if (utils.isObject(options)) {\n    this.options.gesture.enabled = options.enabled === false ? false : true;\n    this.setPerAction('gesture', options);\n    this.setOnEvents('gesture', options);\n\n    return this;\n  }\n\n  if (utils.isBool(options)) {\n    this.options.gesture.enabled = options;\n\n    if (!options) {\n      this.ongesturestart = this.ongesturestart = this.ongestureend = null;\n    }\n\n    return this;\n  }\n\n  return this.options.gesture;\n};\n\nInteractEvent.signals.on('set-delta', function (_ref4) {\n  var interaction = _ref4.interaction;\n  var iEvent = _ref4.iEvent;\n  var action = _ref4.action;\n  var event = _ref4.event;\n  var starting = _ref4.starting;\n  var ending = _ref4.ending;\n  var deltaSource = _ref4.deltaSource;\n\n  if (action !== 'gesture') {\n    return;\n  }\n\n  var pointers = interaction.pointers;\n\n  iEvent.touches = [pointers[0], pointers[1]];\n\n  if (starting) {\n    iEvent.distance = utils.touchDistance(pointers, deltaSource);\n    iEvent.box = utils.touchBBox(pointers);\n    iEvent.scale = 1;\n    iEvent.ds = 0;\n    iEvent.angle = utils.touchAngle(pointers, undefined, deltaSource);\n    iEvent.da = 0;\n  } else if (ending || event instanceof InteractEvent) {\n    iEvent.distance = interaction.prevEvent.distance;\n    iEvent.box = interaction.prevEvent.box;\n    iEvent.scale = interaction.prevEvent.scale;\n    iEvent.ds = iEvent.scale - 1;\n    iEvent.angle = interaction.prevEvent.angle;\n    iEvent.da = iEvent.angle - interaction.gesture.startAngle;\n  } else {\n    iEvent.distance = utils.touchDistance(pointers, deltaSource);\n    iEvent.box = utils.touchBBox(pointers);\n    iEvent.scale = iEvent.distance / interaction.gesture.startDistance;\n    iEvent.angle = utils.touchAngle(pointers, interaction.gesture.prevAngle, deltaSource);\n\n    iEvent.ds = iEvent.scale - interaction.gesture.prevScale;\n    iEvent.da = iEvent.angle - interaction.gesture.prevAngle;\n  }\n});\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.gesture = {\n    start: { x: 0, y: 0 },\n\n    startDistance: 0, // distance between two touches of touchStart\n    prevDistance: 0,\n    distance: 0,\n\n    scale: 1, // gesture.distance / gesture.startDistance\n\n    startAngle: 0, // angle of line joining two touches\n    prevAngle: 0 };\n});\n\n// angle of the previous gesture event\nactions.gesture = gesture;\nactions.names.push('gesture');\nutils.merge(Interactable.eventTypes, ['gesturestart', 'gesturemove', 'gestureend']);\nactions.methodDict.gesture = 'gesturable';\n\ndefaultOptions.gesture = gesture.defaults;\n\nmodule.exports = gesture;\n\n},{\"../InteractEvent\":3,\"../Interactable\":4,\"../Interaction\":5,\"../defaultOptions\":17,\"../utils\":41,\"./index\":9}],9:[function(require,module,exports){\nvar actions = {\n  names: [],\n  methodDict: {}\n};\n\nmodule.exports = actions;\n\n},{}],10:[function(require,module,exports){\nvar actions = require('./index');\nvar utils = require('../utils');\nvar browser = require('../utils/browser');\nvar InteractEvent = require('../InteractEvent');\nvar Interactable = require('../Interactable');\nvar Interaction = require('../Interaction');\nvar defaultOptions = require('../defaultOptions');\n\n// Less Precision with touch input\nvar defaultMargin = browser.supportsTouch || browser.supportsPointerEvent ? 20 : 10;\n\nvar resize = {\n  defaults: {\n    enabled: false,\n    mouseButtons: null,\n\n    origin: null,\n    snap: null,\n    restrict: null,\n    inertia: null,\n    autoScroll: null,\n\n    square: false,\n    preserveAspectRatio: false,\n    axis: 'xy',\n\n    // use default margin\n    margin: NaN,\n\n    // object with props left, right, top, bottom which are\n    // true/false values to resize when the pointer is over that edge,\n    // CSS selectors to match the handles for each direction\n    // or the Elements for each handle\n    edges: null,\n\n    // a value of 'none' will limit the resize rect to a minimum of 0x0\n    // 'negate' will alow the rect to have negative width/height\n    // 'reposition' will keep the width/height positive by swapping\n    // the top and bottom edges and/or swapping the left and right edges\n    invert: 'none'\n  },\n\n  checker: function (pointer, event, interactable, element, interaction, rect) {\n    if (!rect) {\n      return null;\n    }\n\n    var page = utils.extend({}, interaction.curCoords.page);\n    var options = interactable.options;\n\n    if (options.resize.enabled) {\n      var resizeOptions = options.resize;\n      var resizeEdges = { left: false, right: false, top: false, bottom: false };\n\n      // if using resize.edges\n      if (utils.isObject(resizeOptions.edges)) {\n        for (var edge in resizeEdges) {\n          resizeEdges[edge] = checkResizeEdge(edge, resizeOptions.edges[edge], page, interaction._eventTarget, element, rect, resizeOptions.margin || defaultMargin);\n        }\n\n        resizeEdges.left = resizeEdges.left && !resizeEdges.right;\n        resizeEdges.top = resizeEdges.top && !resizeEdges.bottom;\n\n        if (resizeEdges.left || resizeEdges.right || resizeEdges.top || resizeEdges.bottom) {\n          return {\n            name: 'resize',\n            edges: resizeEdges\n          };\n        }\n      } else {\n        var right = options.resize.axis !== 'y' && page.x > rect.right - defaultMargin;\n        var bottom = options.resize.axis !== 'x' && page.y > rect.bottom - defaultMargin;\n\n        if (right || bottom) {\n          return {\n            name: 'resize',\n            axes: (right ? 'x' : '') + (bottom ? 'y' : '')\n          };\n        }\n      }\n    }\n\n    return null;\n  },\n\n  cursors: browser.isIe9OrOlder ? {\n    x: 'e-resize',\n    y: 's-resize',\n    xy: 'se-resize',\n\n    top: 'n-resize',\n    left: 'w-resize',\n    bottom: 's-resize',\n    right: 'e-resize',\n    topleft: 'se-resize',\n    bottomright: 'se-resize',\n    topright: 'ne-resize',\n    bottomleft: 'ne-resize'\n  } : {\n    x: 'ew-resize',\n    y: 'ns-resize',\n    xy: 'nwse-resize',\n\n    top: 'ns-resize',\n    left: 'ew-resize',\n    bottom: 'ns-resize',\n    right: 'ew-resize',\n    topleft: 'nwse-resize',\n    bottomright: 'nwse-resize',\n    topright: 'nesw-resize',\n    bottomleft: 'nesw-resize'\n  },\n\n  getCursor: function (action) {\n    if (action.axis) {\n      return resize.cursors[action.name + action.axis];\n    } else if (action.edges) {\n      var cursorKey = '';\n      var edgeNames = ['top', 'bottom', 'left', 'right'];\n\n      for (var i = 0; i < 4; i++) {\n        if (action.edges[edgeNames[i]]) {\n          cursorKey += edgeNames[i];\n        }\n      }\n\n      return resize.cursors[cursorKey];\n    }\n  }\n};\n\nInteraction.signals.on('action-start', function (_ref) {\n  var interaction = _ref.interaction;\n  var event = _ref.event;\n\n  if (interaction.prepared.name !== 'resize') {\n    return;\n  }\n\n  var resizeEvent = new InteractEvent(interaction, event, 'resize', 'start', interaction.element);\n\n  if (interaction.prepared.edges) {\n    var startRect = interaction.target.getRect(interaction.element);\n    var resizeOptions = interaction.target.options.resize;\n\n    /*\n     * When using the `resizable.square` or `resizable.preserveAspectRatio` options, resizing from one edge\n     * will affect another. E.g. with `resizable.square`, resizing to make the right edge larger will make\n     * the bottom edge larger by the same amount. We call these 'linked' edges. Any linked edges will depend\n     * on the active edges and the edge being interacted with.\n     */\n    if (resizeOptions.square || resizeOptions.preserveAspectRatio) {\n      var linkedEdges = utils.extend({}, interaction.prepared.edges);\n\n      linkedEdges.top = linkedEdges.top || linkedEdges.left && !linkedEdges.bottom;\n      linkedEdges.left = linkedEdges.left || linkedEdges.top && !linkedEdges.right;\n      linkedEdges.bottom = linkedEdges.bottom || linkedEdges.right && !linkedEdges.top;\n      linkedEdges.right = linkedEdges.right || linkedEdges.bottom && !linkedEdges.left;\n\n      interaction.prepared._linkedEdges = linkedEdges;\n    } else {\n      interaction.prepared._linkedEdges = null;\n    }\n\n    // if using `resizable.preserveAspectRatio` option, record aspect ratio at the start of the resize\n    if (resizeOptions.preserveAspectRatio) {\n      interaction.resizeStartAspectRatio = startRect.width / startRect.height;\n    }\n\n    interaction.resizeRects = {\n      start: startRect,\n      current: utils.extend({}, startRect),\n      inverted: utils.extend({}, startRect),\n      previous: utils.extend({}, startRect),\n      delta: {\n        left: 0, right: 0, width: 0,\n        top: 0, bottom: 0, height: 0\n      }\n    };\n\n    resizeEvent.rect = interaction.resizeRects.inverted;\n    resizeEvent.deltaRect = interaction.resizeRects.delta;\n  }\n\n  interaction.target.fire(resizeEvent);\n\n  interaction._interacting = true;\n\n  interaction.prevEvent = resizeEvent;\n});\n\nInteraction.signals.on('action-move', function (_ref2) {\n  var interaction = _ref2.interaction;\n  var event = _ref2.event;\n\n  if (interaction.prepared.name !== 'resize') {\n    return;\n  }\n\n  var resizeEvent = new InteractEvent(interaction, event, 'resize', 'move', interaction.element);\n  var resizeOptions = interaction.target.options.resize;\n  var invert = resizeOptions.invert;\n  var invertible = invert === 'reposition' || invert === 'negate';\n\n  var edges = interaction.prepared.edges;\n\n  if (edges) {\n    var start = interaction.resizeRects.start;\n    var current = interaction.resizeRects.current;\n    var inverted = interaction.resizeRects.inverted;\n    var delta = interaction.resizeRects.delta;\n    var previous = utils.extend(interaction.resizeRects.previous, inverted);\n    var originalEdges = edges;\n\n    var dx = resizeEvent.dx;\n    var dy = resizeEvent.dy;\n\n    if (resizeOptions.preserveAspectRatio || resizeOptions.square) {\n      // `resize.preserveAspectRatio` takes precedence over `resize.square`\n      var startAspectRatio = resizeOptions.preserveAspectRatio ? interaction.resizeStartAspectRatio : 1;\n\n      edges = interaction.prepared._linkedEdges;\n\n      if (originalEdges.left && originalEdges.bottom || originalEdges.right && originalEdges.top) {\n        dy = -dx / startAspectRatio;\n      } else if (originalEdges.left || originalEdges.right) {\n        dy = dx / startAspectRatio;\n      } else if (originalEdges.top || originalEdges.bottom) {\n        dx = dy * startAspectRatio;\n      }\n    }\n\n    // update the 'current' rect without modifications\n    if (edges.top) {\n      current.top += dy;\n    }\n    if (edges.bottom) {\n      current.bottom += dy;\n    }\n    if (edges.left) {\n      current.left += dx;\n    }\n    if (edges.right) {\n      current.right += dx;\n    }\n\n    if (invertible) {\n      // if invertible, copy the current rect\n      utils.extend(inverted, current);\n\n      if (invert === 'reposition') {\n        // swap edge values if necessary to keep width/height positive\n        var swap = undefined;\n\n        if (inverted.top > inverted.bottom) {\n          swap = inverted.top;\n\n          inverted.top = inverted.bottom;\n          inverted.bottom = swap;\n        }\n        if (inverted.left > inverted.right) {\n          swap = inverted.left;\n\n          inverted.left = inverted.right;\n          inverted.right = swap;\n        }\n      }\n    } else {\n      // if not invertible, restrict to minimum of 0x0 rect\n      inverted.top = Math.min(current.top, start.bottom);\n      inverted.bottom = Math.max(current.bottom, start.top);\n      inverted.left = Math.min(current.left, start.right);\n      inverted.right = Math.max(current.right, start.left);\n    }\n\n    inverted.width = inverted.right - inverted.left;\n    inverted.height = inverted.bottom - inverted.top;\n\n    for (var edge in inverted) {\n      delta[edge] = inverted[edge] - previous[edge];\n    }\n\n    resizeEvent.edges = interaction.prepared.edges;\n    resizeEvent.rect = inverted;\n    resizeEvent.deltaRect = delta;\n  }\n\n  interaction.target.fire(resizeEvent);\n\n  interaction.prevEvent = resizeEvent;\n\n  // if the action was ended in a resizemove listener\n  if (!interaction.interacting()) {\n    return false;\n  }\n});\n\nInteraction.signals.on('action-end', function (_ref3) {\n  var interaction = _ref3.interaction;\n  var event = _ref3.event;\n\n  if (interaction.prepared.name !== 'resize') {\n    return;\n  }\n\n  var resizeEvent = new InteractEvent(interaction, event, 'resize', 'end', interaction.element);\n\n  interaction.target.fire(resizeEvent);\n  interaction.prevEvent = resizeEvent;\n});\n\n/*\\\n * Interactable.resizable\n [ method ]\n *\n * Gets or sets whether resize actions can be performed on the\n * Interactable\n *\n = (boolean) Indicates if this can be the target of resize elements\n   | var isResizeable = interact('input[type=text]').resizable();\n * or\n - options (boolean | object) #optional true/false or An object with event listeners to be fired on resize events (object makes the Interactable resizable)\n = (object) This Interactable\n   | interact(element).resizable({\n   |   onstart: function (event) {},\n   |   onmove : function (event) {},\n   |   onend  : function (event) {},\n   |\n   |   edges: {\n   |     top   : true,       // Use pointer coords to check for resize.\n   |     left  : false,      // Disable resizing from left edge.\n   |     bottom: '.resize-s',// Resize if pointer target matches selector\n   |     right : handleEl    // Resize if pointer target is the given Element\n   |   },\n   |\n   |     // Width and height can be adjusted independently. When `true`, width and\n   |     // height are adjusted at a 1:1 ratio.\n   |     square: false,\n   |\n   |     // Width and height can be adjusted independently. When `true`, width and\n   |     // height maintain the aspect ratio they had when resizing started.\n   |     preserveAspectRatio: false,\n   |\n   |   // a value of 'none' will limit the resize rect to a minimum of 0x0\n   |   // 'negate' will allow the rect to have negative width/height\n   |   // 'reposition' will keep the width/height positive by swapping\n   |   // the top and bottom edges and/or swapping the left and right edges\n   |   invert: 'none' || 'negate' || 'reposition'\n   |\n   |   // limit multiple resizes.\n   |   // See the explanation in the @Interactable.draggable example\n   |   max: Infinity,\n   |   maxPerElement: 1,\n   | });\n  \\*/\nInteractable.prototype.resizable = function (options) {\n  if (utils.isObject(options)) {\n    this.options.resize.enabled = options.enabled === false ? false : true;\n    this.setPerAction('resize', options);\n    this.setOnEvents('resize', options);\n\n    if (/^x$|^y$|^xy$/.test(options.axis)) {\n      this.options.resize.axis = options.axis;\n    } else if (options.axis === null) {\n      this.options.resize.axis = defaultOptions.resize.axis;\n    }\n\n    if (utils.isBool(options.preserveAspectRatio)) {\n      this.options.resize.preserveAspectRatio = options.preserveAspectRatio;\n    } else if (utils.isBool(options.square)) {\n      this.options.resize.square = options.square;\n    }\n\n    return this;\n  }\n  if (utils.isBool(options)) {\n    this.options.resize.enabled = options;\n\n    if (!options) {\n      this.onresizestart = this.onresizestart = this.onresizeend = null;\n    }\n\n    return this;\n  }\n  return this.options.resize;\n};\n\nfunction checkResizeEdge(name, value, page, element, interactableElement, rect, margin) {\n  // false, '', undefined, null\n  if (!value) {\n    return false;\n  }\n\n  // true value, use pointer coords and element rect\n  if (value === true) {\n    // if dimensions are negative, \"switch\" edges\n    var width = utils.isNumber(rect.width) ? rect.width : rect.right - rect.left;\n    var height = utils.isNumber(rect.height) ? rect.height : rect.bottom - rect.top;\n\n    if (width < 0) {\n      if (name === 'left') {\n        name = 'right';\n      } else if (name === 'right') {\n        name = 'left';\n      }\n    }\n    if (height < 0) {\n      if (name === 'top') {\n        name = 'bottom';\n      } else if (name === 'bottom') {\n        name = 'top';\n      }\n    }\n\n    if (name === 'left') {\n      return page.x < (width >= 0 ? rect.left : rect.right) + margin;\n    }\n    if (name === 'top') {\n      return page.y < (height >= 0 ? rect.top : rect.bottom) + margin;\n    }\n\n    if (name === 'right') {\n      return page.x > (width >= 0 ? rect.right : rect.left) - margin;\n    }\n    if (name === 'bottom') {\n      return page.y > (height >= 0 ? rect.bottom : rect.top) - margin;\n    }\n  }\n\n  // the remaining checks require an element\n  if (!utils.isElement(element)) {\n    return false;\n  }\n\n  return utils.isElement(value)\n  // the value is an element to use as a resize handle\n  ? value === element\n  // otherwise check if element matches value as selector\n  : utils.matchesUpTo(element, value, interactableElement);\n}\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.resizeAxes = 'xy';\n});\n\nInteractEvent.signals.on('set-delta', function (_ref4) {\n  var interaction = _ref4.interaction;\n  var iEvent = _ref4.iEvent;\n  var action = _ref4.action;\n\n  if (action !== 'resize' || !interaction.resizeAxes) {\n    return;\n  }\n\n  var options = interaction.target.options;\n\n  if (options.resize.square) {\n    if (interaction.resizeAxes === 'y') {\n      iEvent.dx = iEvent.dy;\n    } else {\n      iEvent.dy = iEvent.dx;\n    }\n    iEvent.axes = 'xy';\n  } else {\n    iEvent.axes = interaction.resizeAxes;\n\n    if (interaction.resizeAxes === 'x') {\n      iEvent.dy = 0;\n    } else if (interaction.resizeAxes === 'y') {\n      iEvent.dx = 0;\n    }\n  }\n});\n\nactions.resize = resize;\nactions.names.push('resize');\nutils.merge(Interactable.eventTypes, ['resizestart', 'resizemove', 'resizeinertiastart', 'resizeinertiaresume', 'resizeend']);\nactions.methodDict.resize = 'resizable';\n\ndefaultOptions.resize = resize.defaults;\n\nmodule.exports = resize;\n\n},{\"../InteractEvent\":3,\"../Interactable\":4,\"../Interaction\":5,\"../defaultOptions\":17,\"../utils\":41,\"../utils/browser\":34,\"./index\":9}],11:[function(require,module,exports){\nvar raf = require('./utils/raf');\nvar getWindow = require('./utils/window').getWindow;\nvar isWindow = require('./utils/isType').isWindow;\nvar domUtils = require('./utils/domUtils');\nvar Interaction = require('./Interaction');\nvar defaultOptions = require('./defaultOptions');\n\nvar autoScroll = {\n  defaults: {\n    enabled: false,\n    container: null, // the item that is scrolled (Window or HTMLElement)\n    margin: 60,\n    speed: 300 },\n\n  // the scroll speed in pixels per second\n  interaction: null,\n  i: null, // the handle returned by window.setInterval\n  x: 0, y: 0, // Direction each pulse is to scroll in\n\n  isScrolling: false,\n  prevTime: 0,\n\n  start: function (interaction) {\n    autoScroll.isScrolling = true;\n    raf.cancel(autoScroll.i);\n\n    autoScroll.interaction = interaction;\n    autoScroll.prevTime = new Date().getTime();\n    autoScroll.i = raf.request(autoScroll.scroll);\n  },\n\n  stop: function () {\n    autoScroll.isScrolling = false;\n    raf.cancel(autoScroll.i);\n  },\n\n  // scroll the window by the values in scroll.x/y\n  scroll: function () {\n    var options = autoScroll.interaction.target.options[autoScroll.interaction.prepared.name].autoScroll;\n    var container = options.container || getWindow(autoScroll.interaction.element);\n    var now = new Date().getTime();\n    // change in time in seconds\n    var dt = (now - autoScroll.prevTime) / 1000;\n    // displacement\n    var s = options.speed * dt;\n\n    if (s >= 1) {\n      if (isWindow(container)) {\n        container.scrollBy(autoScroll.x * s, autoScroll.y * s);\n      } else if (container) {\n        container.scrollLeft += autoScroll.x * s;\n        container.scrollTop += autoScroll.y * s;\n      }\n\n      autoScroll.prevTime = now;\n    }\n\n    if (autoScroll.isScrolling) {\n      raf.cancel(autoScroll.i);\n      autoScroll.i = raf.request(autoScroll.scroll);\n    }\n  },\n  check: function (interactable, actionName) {\n    var options = interactable.options;\n\n    return options[actionName].autoScroll && options[actionName].autoScroll.enabled;\n  },\n  onInteractionMove: function (_ref) {\n    var interaction = _ref.interaction;\n    var pointer = _ref.pointer;\n\n    if (!(interaction.interacting() && autoScroll.check(interaction.target, interaction.prepared.name))) {\n      return;\n    }\n\n    if (interaction.simulation) {\n      autoScroll.x = autoScroll.y = 0;\n      return;\n    }\n\n    var top = undefined;\n    var right = undefined;\n    var bottom = undefined;\n    var left = undefined;\n\n    var options = interaction.target.options[interaction.prepared.name].autoScroll;\n    var container = options.container || getWindow(interaction.element);\n\n    if (isWindow(container)) {\n      left = pointer.clientX < autoScroll.margin;\n      top = pointer.clientY < autoScroll.margin;\n      right = pointer.clientX > container.innerWidth - autoScroll.margin;\n      bottom = pointer.clientY > container.innerHeight - autoScroll.margin;\n    } else {\n      var rect = domUtils.getElementClientRect(container);\n\n      left = pointer.clientX < rect.left + autoScroll.margin;\n      top = pointer.clientY < rect.top + autoScroll.margin;\n      right = pointer.clientX > rect.right - autoScroll.margin;\n      bottom = pointer.clientY > rect.bottom - autoScroll.margin;\n    }\n\n    autoScroll.x = right ? 1 : left ? -1 : 0;\n    autoScroll.y = bottom ? 1 : top ? -1 : 0;\n\n    if (!autoScroll.isScrolling) {\n      // set the autoScroll properties to those of the target\n      autoScroll.margin = options.margin;\n      autoScroll.speed = options.speed;\n\n      autoScroll.start(interaction);\n    }\n  }\n};\n\nInteraction.signals.on('stop-active', function () {\n  autoScroll.stop();\n});\n\nInteraction.signals.on('action-move', autoScroll.onInteractionMove);\n\ndefaultOptions.perAction.autoScroll = autoScroll.defaults;\n\nmodule.exports = autoScroll;\n\n},{\"./Interaction\":5,\"./defaultOptions\":17,\"./utils/domUtils\":36,\"./utils/isType\":43,\"./utils/raf\":47,\"./utils/window\":49}],12:[function(require,module,exports){\nvar autoStart = require('./index');\nvar Interaction = require('../Interaction');\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.delayTimer = null;\n});\n\nautoStart.signals.on('prepared', function (_ref) {\n  var interaction = _ref.interaction;\n\n  var actionName = interaction.prepared.name;\n\n  if (!actionName) {\n    return;\n  }\n\n  var delay = interaction.target.options[actionName].delay;\n\n  if (delay > 0) {\n    interaction.delayTimer = setTimeout(function () {\n      interaction.start(interaction.prepared, interaction.target, interaction.element);\n    }, delay);\n  }\n});\n\nInteraction.signals.on('move', function (_ref2) {\n  var interaction = _ref2.interaction;\n  var duplicate = _ref2.duplicate;\n\n  if (interaction.pointerWasMoved && !duplicate) {\n    clearTimeout(interaction.delayTimer);\n  }\n});\n\n// prevent regular down->move autoStart\nautoStart.signals.on('before-start', function (_ref3) {\n  var interaction = _ref3.interaction;\n\n  var actionName = interaction.prepared.name;\n\n  if (!actionName) {\n    return;\n  }\n\n  var delay = interaction.target.options[actionName].delay;\n\n  if (delay > 0) {\n    interaction.prepared.name = null;\n  }\n});\n\n},{\"../Interaction\":5,\"./index\":15}],13:[function(require,module,exports){\nvar autoStart = require('./index');\nvar scope = require('../scope');\nvar browser = require('../utils/browser');\n\nvar _require = require('../utils/isType');\n\nvar isElement = _require.isElement;\n\nvar _require2 = require('../utils/domUtils');\n\nvar matchesSelector = _require2.matchesSelector;\nvar parentNode = _require2.parentNode;\n\nrequire('./index').setActionDefaults(require('../actions/drag'));\n\nautoStart.signals.on('before-start', function (_ref) {\n  var interaction = _ref.interaction;\n  var eventTarget = _ref.eventTarget;\n  var dx = _ref.dx;\n  var dy = _ref.dy;\n\n  if (interaction.prepared.name !== 'drag') {\n    return;\n  }\n\n  // check if a drag is in the correct axis\n  var absX = Math.abs(dx);\n  var absY = Math.abs(dy);\n  var dragOptions = interaction.target.options.drag;\n  var startAxis = dragOptions.startAxis;\n  var currentAxis = absX > absY ? 'x' : absX < absY ? 'y' : 'xy';\n\n  interaction.prepared.axis = dragOptions.lockAxis === 'start' ? currentAxis[0] // always lock to one axis even if currentAxis === 'xy'\n  : dragOptions.lockAxis;\n\n  // if the movement isn't in the startAxis of the interactable\n  if (currentAxis !== 'xy' && startAxis !== 'xy' && startAxis !== currentAxis) {\n    // cancel the prepared action\n    interaction.prepared.name = null;\n\n    // then try to get a drag from another ineractable\n\n    if (!interaction.prepared.name) {\n      (function () {\n\n        var element = eventTarget;\n\n        var getDraggable = function (interactable, selector, context) {\n          var elements = browser.useMatchesSelectorPolyfill ? context.querySelectorAll(selector) : undefined;\n\n          if (interactable === interaction.target) {\n            return;\n          }\n\n          var options = interactable.options;\n\n          if (!options.drag.manualStart && !interactable.testIgnoreAllow(options, element, eventTarget) && matchesSelector(element, selector, elements)) {\n\n            var _action = interactable.getAction(interaction.downPointer, interaction.downEvent, interaction, element);\n\n            if (_action && _action.name === 'drag' && checkStartAxis(currentAxis, interactable) && autoStart.validateAction(_action, interactable, element)) {\n\n              return interactable;\n            }\n          }\n        };\n\n        var action = null;\n\n        // check all interactables\n        while (isElement(element)) {\n          var elementInteractable = scope.interactables.get(element);\n\n          if (elementInteractable && elementInteractable !== interaction.target && !elementInteractable.options.drag.manualStart) {\n\n            action = elementInteractable.getAction(interaction.downPointer, interaction.downEvent, interaction, element);\n          }\n          if (action && action.name === 'drag' && checkStartAxis(currentAxis, elementInteractable)) {\n\n            interaction.prepared.name = 'drag';\n            interaction.target = elementInteractable;\n            interaction.element = element;\n            break;\n          }\n\n          var selectorInteractable = scope.interactables.forEachSelector(getDraggable, element);\n\n          if (selectorInteractable) {\n            interaction.prepared.name = 'drag';\n            interaction.target = selectorInteractable;\n            interaction.element = element;\n            break;\n          }\n\n          element = parentNode(element);\n        }\n      })();\n    }\n  }\n});\n\nfunction checkStartAxis(startAxis, interactable) {\n  if (!interactable) {\n    return false;\n  }\n\n  var thisAxis = interactable.options.drag.startAxis;\n\n  return startAxis === 'xy' || thisAxis === 'xy' || thisAxis === startAxis;\n}\n\n},{\"../actions/drag\":6,\"../scope\":31,\"../utils/browser\":34,\"../utils/domUtils\":36,\"../utils/isType\":43,\"./index\":15}],14:[function(require,module,exports){\nrequire('./index').setActionDefaults(require('../actions/gesture'));\n\n},{\"../actions/gesture\":8,\"./index\":15}],15:[function(require,module,exports){\nvar interact = require('../interact');\nvar Interactable = require('../Interactable');\nvar Interaction = require('../Interaction');\nvar actions = require('../actions');\nvar defaultOptions = require('../defaultOptions');\nvar browser = require('../utils/browser');\nvar scope = require('../scope');\nvar utils = require('../utils');\nvar signals = require('../utils/Signals')['new']();\n\nvar autoStart = {\n  signals: signals,\n  withinInteractionLimit: withinInteractionLimit,\n  // Allow this many interactions to happen simultaneously\n  maxInteractions: Infinity,\n  perActionDefaults: {\n    manualStart: false,\n    max: Infinity,\n    maxPerElement: 1\n  },\n  setActionDefaults: function (action) {\n    utils.extend(action.defaults, autoStart.perActionDefaults);\n  }\n};\n\n// set cursor style on mousedown\nInteraction.signals.on('down', function (_ref2) {\n  var interaction = _ref2.interaction;\n  var pointer = _ref2.pointer;\n  var event = _ref2.event;\n  var eventTarget = _ref2.eventTarget;\n\n  if (interaction.interacting()) {\n    return;\n  }\n\n  var actionInfo = getActionInfo(interaction, pointer, event, eventTarget);\n  prepare(interaction, actionInfo);\n});\n\n// set cursor style on mousemove\nInteraction.signals.on('move', function (_ref3) {\n  var interaction = _ref3.interaction;\n  var pointer = _ref3.pointer;\n  var event = _ref3.event;\n  var eventTarget = _ref3.eventTarget;\n\n  if (!interaction.mouse || interaction.pointerIsDown || interaction.interacting()) {\n    return;\n  }\n\n  var actionInfo = getActionInfo(interaction, pointer, event, eventTarget);\n  prepare(interaction, actionInfo);\n});\n\nInteraction.signals.on('move', function (arg) {\n  var interaction = arg.interaction;\n  var event = arg.event;\n\n  if (!interaction.pointerIsDown || interaction.interacting() || !interaction.pointerWasMoved || !interaction.prepared.name) {\n    return;\n  }\n\n  signals.fire('before-start', arg);\n\n  var target = interaction.target;\n\n  if (interaction.prepared.name && target) {\n    // check manualStart and interaction limit\n    if (target.options[interaction.prepared.name].manualStart || !withinInteractionLimit(target, interaction.element, interaction.prepared)) {\n      interaction.stop(event);\n    } else {\n      interaction.start(interaction.prepared, target, interaction.element);\n    }\n  }\n});\n\n// Check if the current target supports the action.\n// If so, return the validated action. Otherwise, return null\nfunction validateAction(action, interactable, element) {\n  if (utils.isObject(action) && interactable.options[action.name].enabled && withinInteractionLimit(interactable, element, action)) {\n    return action;\n  }\n\n  return null;\n}\n\nfunction validateSelector(interaction, pointer, event, matches, matchElements) {\n  for (var i = 0, len = matches.length; i < len; i++) {\n    var match = matches[i];\n    var matchElement = matchElements[i];\n    var action = validateAction(match.getAction(pointer, event, interaction, matchElement), match, matchElement);\n\n    if (action) {\n      return {\n        action: action,\n        target: match,\n        element: matchElement\n      };\n    }\n  }\n\n  return {};\n}\n\nfunction getActionInfo(interaction, pointer, event, eventTarget) {\n  var matches = [];\n  var matchElements = [];\n\n  var element = eventTarget;\n  var action = null;\n\n  function pushMatches(interactable, selector, context) {\n    var elements = browser.useMatchesSelectorPolyfill ? context.querySelectorAll(selector) : undefined;\n    var options = interactable.options;\n\n    if (interactable.testIgnoreAllow(options, element, eventTarget) && utils.matchesSelector(element, selector, elements)) {\n\n      matches.push(interactable);\n      matchElements.push(element);\n    }\n  }\n\n  while (utils.isElement(element)) {\n    matches = [];\n    matchElements = [];\n\n    var elementInteractable = scope.interactables.get(element);\n\n    if (elementInteractable && (action = validateAction(elementInteractable.getAction(pointer, event, interaction, element), elementInteractable, element)) && !elementInteractable.options[action.name].manualStart) {\n      return {\n        element: element,\n        action: action,\n        target: elementInteractable\n      };\n    } else {\n      scope.interactables.forEachSelector(pushMatches, element);\n\n      var actionInfo = validateSelector(interaction, pointer, event, matches, matchElements);\n\n      if (actionInfo.action && !actionInfo.target.options[actionInfo.action.name].manualStart) {\n        return actionInfo;\n      }\n    }\n\n    element = utils.parentNode(element);\n  }\n\n  return {};\n}\n\nfunction prepare(interaction, _ref4) {\n  var action = _ref4.action;\n  var target = _ref4.target;\n  var element = _ref4.element;\n\n  action = action || {};\n\n  if (interaction.target && interaction.target.options.styleCursor) {\n    interaction.target._doc.documentElement.style.cursor = '';\n  }\n\n  interaction.target = target;\n  interaction.element = element;\n  utils.copyAction(interaction.prepared, action);\n\n  if (target && target.options.styleCursor) {\n    var cursor = action ? actions[action.name].getCursor(action) : '';\n    interaction.target._doc.documentElement.style.cursor = cursor;\n  }\n\n  signals.fire('prepared', { interaction: interaction });\n}\n\nInteraction.signals.on('stop', function (_ref5) {\n  var interaction = _ref5.interaction;\n\n  var target = interaction.target;\n\n  if (target && target.options.styleCursor) {\n    target._doc.documentElement.style.cursor = '';\n  }\n});\n\nInteractable.prototype.getAction = function (pointer, event, interaction, element) {\n  var action = this.defaultActionChecker(pointer, event, interaction, element);\n\n  if (this.options.actionChecker) {\n    return this.options.actionChecker(pointer, event, action, this, element, interaction);\n  }\n\n  return action;\n};\n\n/*\\\n * Interactable.actionChecker\n [ method ]\n *\n * Gets or sets the function used to check action to be performed on\n * pointerDown\n *\n - checker (function | null) #optional A function which takes a pointer event, defaultAction string, interactable, element and interaction as parameters and returns an object with name property 'drag' 'resize' or 'gesture' and optionally an `edges` object with boolean 'top', 'left', 'bottom' and right props.\n = (Function | Interactable) The checker function or this Interactable\n *\n | interact('.resize-drag')\n |   .resizable(true)\n |   .draggable(true)\n |   .actionChecker(function (pointer, event, action, interactable, element, interaction) {\n |\n |   if (interact.matchesSelector(event.target, '.drag-handle') {\n |     // force drag with handle target\n |     action.name = drag;\n |   }\n |   else {\n |     // resize from the top and right edges\n |     action.name  = 'resize';\n |     action.edges = { top: true, right: true };\n |   }\n |\n |   return action;\n | });\n\\*/\nInteractable.prototype.actionChecker = function (checker) {\n  if (utils.isFunction(checker)) {\n    this.options.actionChecker = checker;\n\n    return this;\n  }\n\n  if (checker === null) {\n    delete this.options.actionChecker;\n\n    return this;\n  }\n\n  return this.options.actionChecker;\n};\n\n/*\\\n * Interactable.styleCursor\n [ method ]\n *\n * Returns or sets whether the the cursor should be changed depending on the\n * action that would be performed if the mouse were pressed and dragged.\n *\n - newValue (boolean) #optional\n = (boolean | Interactable) The current setting or this Interactable\n\\*/\nInteractable.prototype.styleCursor = function (newValue) {\n  if (utils.isBool(newValue)) {\n    this.options.styleCursor = newValue;\n\n    return this;\n  }\n\n  if (newValue === null) {\n    delete this.options.styleCursor;\n\n    return this;\n  }\n\n  return this.options.styleCursor;\n};\n\nInteractable.prototype.defaultActionChecker = function (pointer, event, interaction, element) {\n  var rect = this.getRect(element);\n  var buttons = event.buttons || ({\n    0: 1,\n    1: 4,\n    3: 8,\n    4: 16\n  })[event.button];\n  var action = null;\n\n  for (var _iterator = actions.names, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var actionName = _ref;\n\n    // check mouseButton setting if the pointer is down\n    if (interaction.pointerIsDown && interaction.mouse && (buttons & this.options[actionName].mouseButtons) === 0) {\n      continue;\n    }\n\n    action = actions[actionName].checker(pointer, event, this, element, interaction, rect);\n\n    if (action) {\n      return action;\n    }\n  }\n};\n\nfunction withinInteractionLimit(interactable, element, action) {\n  var options = interactable.options;\n  var maxActions = options[action.name].max;\n  var maxPerElement = options[action.name].maxPerElement;\n  var activeInteractions = 0;\n  var targetCount = 0;\n  var targetElementCount = 0;\n\n  // no actions if any of these values == 0\n  if (!(maxActions && maxPerElement && autoStart.maxInteractions)) {\n    return;\n  }\n\n  for (var i = 0, len = scope.interactions.length; i < len; i++) {\n    var interaction = scope.interactions[i];\n    var otherAction = interaction.prepared.name;\n\n    if (!interaction.interacting()) {\n      continue;\n    }\n\n    activeInteractions++;\n\n    if (activeInteractions >= autoStart.maxInteractions) {\n      return false;\n    }\n\n    if (interaction.target !== interactable) {\n      continue;\n    }\n\n    targetCount += otherAction === action.name | 0;\n\n    if (targetCount >= maxActions) {\n      return false;\n    }\n\n    if (interaction.element === element) {\n      targetElementCount++;\n\n      if (otherAction !== action.name || targetElementCount >= maxPerElement) {\n        return false;\n      }\n    }\n  }\n\n  return autoStart.maxInteractions > 0;\n}\n\n/*\\\n * interact.maxInteractions\n [ method ]\n **\n * Returns or sets the maximum number of concurrent interactions allowed.\n * By default only 1 interaction is allowed at a time (for backwards\n * compatibility). To allow multiple interactions on the same Interactables\n * and elements, you need to enable it in the draggable, resizable and\n * gesturable `'max'` and `'maxPerElement'` options.\n **\n - newValue (number) #optional Any number. newValue <= 0 means no interactions.\n\\*/\ninteract.maxInteractions = function (newValue) {\n  if (utils.isNumber(newValue)) {\n    autoStart.maxInteractions = newValue;\n\n    return this;\n  }\n\n  return autoStart.maxInteractions;\n};\n\nInteractable.settingsMethods.push('styleCursor');\nInteractable.settingsMethods.push('actionChecker');\nInteractable.settingsMethods.push('ignoreFrom');\nInteractable.settingsMethods.push('allowFrom');\n\ndefaultOptions.base.actionChecker = null;\ndefaultOptions.base.ignoreFrom = null;\ndefaultOptions.base.allowFrom = null;\ndefaultOptions.base.styleCursor = true;\n\nutils.extend(defaultOptions.perAction, autoStart.perActionDefaults);\n\nmodule.exports = autoStart;\n\n},{\"../Interactable\":4,\"../Interaction\":5,\"../actions\":9,\"../defaultOptions\":17,\"../interact\":20,\"../scope\":31,\"../utils\":41,\"../utils/Signals\":32,\"../utils/browser\":34}],16:[function(require,module,exports){\nrequire('./index').setActionDefaults(require('../actions/resize'));\n\n},{\"../actions/resize\":10,\"./index\":15}],17:[function(require,module,exports){\nmodule.exports = {\n  base: {\n    accept: null,\n    preventDefault: 'auto',\n    deltaSource: 'page',\n    allowFrom: null\n  },\n\n  perAction: {\n    origin: { x: 0, y: 0 },\n\n    // only allow left button by default\n    // see https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons#Return_value\n    mouseButtons: 1,\n\n    inertia: {\n      enabled: false,\n      resistance: 10, // the lambda in exponential decay\n      minSpeed: 100, // target speed must be above this for inertia to start\n      endSpeed: 10, // the speed at which inertia is slow enough to stop\n      allowResume: true, // allow resuming an action in inertia phase\n      smoothEndDuration: 300 }\n  }\n};\n// animate to snap/restrict endOnly if there's no inertia\n\n},{}],18:[function(require,module,exports){\n/* browser entry point */\n\n// Legacy browser support\nrequire('./legacyBrowsers');\n\n// pointerEvents\nrequire('./pointerEvents');\nrequire('./pointerEvents/holdRepeat');\nrequire('./pointerEvents/interactableTargets');\n\n// inertia\nrequire('./inertia');\n\n// modifiers\nrequire('./modifiers/snap');\nrequire('./modifiers/restrict');\n\n// delay\nrequire('./autoStart/delay');\n\n// actions\nrequire('./actions/gesture');\nrequire('./actions/resize');\nrequire('./actions/drag');\nrequire('./actions/drop');\n\n// load these modifiers after resize is loaded\nrequire('./modifiers/restrictEdges');\nrequire('./modifiers/restrictSize');\n\n// autoStart actions\nrequire('./autoStart/gesture');\nrequire('./autoStart/resize');\nrequire('./autoStart/drag');\n\n// Interactable preventDefault setting\nrequire('./interactablePreventDefault.js');\n\n// autoScroll\nrequire('./autoScroll');\n\n// export interact\nmodule.exports = require('./interact');\n\n},{\"./actions/drag\":6,\"./actions/drop\":7,\"./actions/gesture\":8,\"./actions/resize\":10,\"./autoScroll\":11,\"./autoStart/delay\":12,\"./autoStart/drag\":13,\"./autoStart/gesture\":14,\"./autoStart/resize\":16,\"./inertia\":19,\"./interact\":20,\"./interactablePreventDefault.js\":21,\"./legacyBrowsers\":22,\"./modifiers/restrict\":24,\"./modifiers/restrictEdges\":25,\"./modifiers/restrictSize\":26,\"./modifiers/snap\":27,\"./pointerEvents\":29,\"./pointerEvents/holdRepeat\":28,\"./pointerEvents/interactableTargets\":30}],19:[function(require,module,exports){\nvar InteractEvent = require('./InteractEvent');\nvar Interaction = require('./Interaction');\nvar modifiers = require('./modifiers');\nvar utils = require('./utils');\nvar animationFrame = require('./utils/raf');\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.inertiaStatus = {\n    active: false,\n    smoothEnd: false,\n    allowResume: false,\n\n    startEvent: null,\n    upCoords: {},\n\n    xe: 0, ye: 0,\n    sx: 0, sy: 0,\n\n    t0: 0,\n    vx0: 0, vys: 0,\n    duration: 0,\n\n    lambda_v0: 0,\n    one_ve_v0: 0,\n    i: null\n  };\n\n  interaction.boundInertiaFrame = function () {\n    return inertiaFrame.apply(interaction);\n  };\n  interaction.boundSmoothEndFrame = function () {\n    return smoothEndFrame.apply(interaction);\n  };\n});\n\nInteraction.signals.on('down', function (_ref) {\n  var interaction = _ref.interaction;\n  var event = _ref.event;\n  var pointer = _ref.pointer;\n  var eventTarget = _ref.eventTarget;\n\n  var status = interaction.inertiaStatus;\n\n  // Check if the down event hits the current inertia target\n  if (status.active) {\n    var element = eventTarget;\n\n    // climb up the DOM tree from the event target\n    while (utils.isElement(element)) {\n\n      // if interaction element is the current inertia target element\n      if (element === interaction.element) {\n        // stop inertia\n        animationFrame.cancel(status.i);\n        status.active = false;\n        interaction.simulation = null;\n\n        // update pointers to the down event's coordinates\n        interaction.updatePointer(pointer);\n        utils.setCoords(interaction.curCoords, interaction.pointers);\n\n        // fire appropriate signals\n        var signalArg = { interaction: interaction };\n        Interaction.signals.fire('before-action-move', signalArg);\n        Interaction.signals.fire('action-resume', signalArg);\n\n        // fire a reume event\n        var resumeEvent = new InteractEvent(interaction, event, interaction.prepared.name, 'inertiaresume', interaction.element);\n\n        interaction.target.fire(resumeEvent);\n        interaction.prevEvent = resumeEvent;\n        modifiers.resetStatuses(interaction.modifierStatuses);\n\n        utils.copyCoords(interaction.prevCoords, interaction.curCoords);\n        break;\n      }\n\n      element = utils.parentNode(element);\n    }\n  }\n});\n\nInteraction.signals.on('up', function (_ref2) {\n  var interaction = _ref2.interaction;\n  var event = _ref2.event;\n\n  var status = interaction.inertiaStatus;\n\n  if (!interaction.interacting() || status.active) {\n    return;\n  }\n\n  var target = interaction.target;\n  var options = target && target.options;\n  var inertiaOptions = options && interaction.prepared.name && options[interaction.prepared.name].inertia;\n\n  var now = new Date().getTime();\n  var statuses = {};\n  var page = utils.extend({}, interaction.curCoords.page);\n  var pointerSpeed = interaction.pointerDelta.client.speed;\n  var inertiaPossible = false;\n  var inertia = false;\n  var smoothEnd = false;\n  var modifierResult = undefined;\n\n  // check if inertia should be started\n  inertiaPossible = inertiaOptions && inertiaOptions.enabled && interaction.prepared.name !== 'gesture' && event !== status.startEvent;\n\n  inertia = inertiaPossible && now - interaction.curCoords.timeStamp < 50 && pointerSpeed > inertiaOptions.minSpeed && pointerSpeed > inertiaOptions.endSpeed;\n\n  // smoothEnd\n  if (inertiaPossible && !inertia) {\n    modifiers.resetStatuses(statuses);\n\n    modifierResult = modifiers.setAll(interaction, page, statuses, true, true);\n\n    if (modifierResult.shouldMove && modifierResult.locked) {\n      smoothEnd = true;\n    }\n  }\n\n  if (!(inertia || smoothEnd)) {\n    return;\n  }\n\n  utils.copyCoords(status.upCoords, interaction.curCoords);\n\n  interaction.pointers[0] = status.startEvent = new InteractEvent(interaction, event, interaction.prepared.name, 'inertiastart', interaction.element);\n\n  status.t0 = now;\n\n  status.active = true;\n  status.allowResume = inertiaOptions.allowResume;\n  interaction.simulation = status;\n\n  target.fire(status.startEvent);\n\n  if (inertia) {\n    status.vx0 = interaction.pointerDelta.client.vx;\n    status.vy0 = interaction.pointerDelta.client.vy;\n    status.v0 = pointerSpeed;\n\n    calcInertia(interaction, status);\n\n    utils.extend(page, interaction.curCoords.page);\n\n    page.x += status.xe;\n    page.y += status.ye;\n\n    modifiers.resetStatuses(statuses);\n\n    modifierResult = modifiers.setAll(interaction, page, statuses, true, true);\n\n    status.modifiedXe += modifierResult.dx;\n    status.modifiedYe += modifierResult.dy;\n\n    status.i = animationFrame.request(interaction.boundInertiaFrame);\n  } else {\n    status.smoothEnd = true;\n    status.xe = modifierResult.dx;\n    status.ye = modifierResult.dy;\n\n    status.sx = status.sy = 0;\n\n    status.i = animationFrame.request(interaction.boundSmoothEndFrame);\n  }\n});\n\nInteraction.signals.on('stop-active', function (_ref3) {\n  var interaction = _ref3.interaction;\n\n  var status = interaction.inertiaStatus;\n\n  if (status.active) {\n    animationFrame.cancel(status.i);\n    status.active = false;\n    interaction.simulation = null;\n  }\n});\n\nfunction calcInertia(interaction, status) {\n  var inertiaOptions = interaction.target.options[interaction.prepared.name].inertia;\n  var lambda = inertiaOptions.resistance;\n  var inertiaDur = -Math.log(inertiaOptions.endSpeed / status.v0) / lambda;\n\n  status.x0 = interaction.prevEvent.pageX;\n  status.y0 = interaction.prevEvent.pageY;\n  status.t0 = status.startEvent.timeStamp / 1000;\n  status.sx = status.sy = 0;\n\n  status.modifiedXe = status.xe = (status.vx0 - inertiaDur) / lambda;\n  status.modifiedYe = status.ye = (status.vy0 - inertiaDur) / lambda;\n  status.te = inertiaDur;\n\n  status.lambda_v0 = lambda / status.v0;\n  status.one_ve_v0 = 1 - inertiaOptions.endSpeed / status.v0;\n}\n\nfunction inertiaFrame() {\n  updateInertiaCoords(this);\n  utils.setCoordDeltas(this.pointerDelta, this.prevCoords, this.curCoords);\n\n  var status = this.inertiaStatus;\n  var options = this.target.options[this.prepared.name].inertia;\n  var lambda = options.resistance;\n  var t = new Date().getTime() / 1000 - status.t0;\n\n  if (t < status.te) {\n\n    var progress = 1 - (Math.exp(-lambda * t) - status.lambda_v0) / status.one_ve_v0;\n\n    if (status.modifiedXe === status.xe && status.modifiedYe === status.ye) {\n      status.sx = status.xe * progress;\n      status.sy = status.ye * progress;\n    } else {\n      var quadPoint = utils.getQuadraticCurvePoint(0, 0, status.xe, status.ye, status.modifiedXe, status.modifiedYe, progress);\n\n      status.sx = quadPoint.x;\n      status.sy = quadPoint.y;\n    }\n\n    this.doMove();\n\n    status.i = animationFrame.request(this.boundInertiaFrame);\n  } else {\n    status.sx = status.modifiedXe;\n    status.sy = status.modifiedYe;\n\n    this.doMove();\n    this.end(status.startEvent);\n    status.active = false;\n    this.simulation = null;\n  }\n\n  utils.copyCoords(this.prevCoords, this.curCoords);\n}\n\nfunction smoothEndFrame() {\n  updateInertiaCoords(this);\n\n  var status = this.inertiaStatus;\n  var t = new Date().getTime() - status.t0;\n  var duration = this.target.options[this.prepared.name].inertia.smoothEndDuration;\n\n  if (t < duration) {\n    status.sx = utils.easeOutQuad(t, 0, status.xe, duration);\n    status.sy = utils.easeOutQuad(t, 0, status.ye, duration);\n\n    this.pointerMove(status.startEvent, status.startEvent);\n\n    status.i = animationFrame.request(this.boundSmoothEndFrame);\n  } else {\n    status.sx = status.xe;\n    status.sy = status.ye;\n\n    this.pointerMove(status.startEvent, status.startEvent);\n    this.end(status.startEvent);\n\n    status.smoothEnd = status.active = false;\n    this.simulation = null;\n  }\n}\n\nfunction updateInertiaCoords(interaction) {\n  var status = interaction.inertiaStatus;\n\n  // return if inertia isn't running\n  if (!status.active) {\n    return;\n  }\n\n  var pageUp = status.upCoords.page;\n  var clientUp = status.upCoords.client;\n\n  utils.setCoords(interaction.curCoords, [{\n    pageX: pageUp.x + status.sx,\n    pageY: pageUp.y + status.sy,\n    clientX: clientUp.x + status.sx,\n    clientY: clientUp.y + status.sy\n  }]);\n}\n\n},{\"./InteractEvent\":3,\"./Interaction\":5,\"./modifiers\":23,\"./utils\":41,\"./utils/raf\":47}],20:[function(require,module,exports){\nvar browser = require('./utils/browser');\nvar events = require('./utils/events');\nvar utils = require('./utils');\nvar scope = require('./scope');\nvar Interactable = require('./Interactable');\nvar Interaction = require('./Interaction');\n\nvar globalEvents = {};\n\n/*\\\n * interact\n [ method ]\n *\n * The methods of this variable can be used to set elements as\n * interactables and also to change various default settings.\n *\n * Calling it as a function and passing an element or a valid CSS selector\n * string returns an Interactable object which has various methods to\n * configure it.\n *\n - element (Element | string) The HTML or SVG Element to interact with or CSS selector\n = (object) An @Interactable\n *\n > Usage\n | interact('#draggable').draggable(true);\n |\n | var rectables = interact('rect');\n | rectables\n |     .gesturable(true)\n |     .on('gesturemove', function (event) {\n |         // ...\n |     });\n\\*/\nfunction interact(element, options) {\n  var interactable = scope.interactables.get(element, options);\n\n  if (!interactable) {\n    interactable = new Interactable(element, options);\n    interactable.events.global = globalEvents;\n  }\n\n  return interactable;\n}\n\n/*\\\n * interact.isSet\n [ method ]\n *\n * Check if an element has been set\n - element (Element) The Element being searched for\n = (boolean) Indicates if the element or CSS selector was previously passed to interact\n\\*/\ninteract.isSet = function (element, options) {\n  return scope.interactables.indexOfElement(element, options && options.context) !== -1;\n};\n\n/*\\\n * interact.on\n [ method ]\n *\n * Adds a global listener for an InteractEvent or adds a DOM event to\n * `document`\n *\n - type       (string | array | object) The types of events to listen for\n - listener   (function) The function event (s)\n - useCapture (boolean) #optional useCapture flag for addEventListener\n = (object) interact\n\\*/\ninteract.on = function (type, listener, useCapture) {\n  if (utils.isString(type) && type.search(' ') !== -1) {\n    type = type.trim().split(/ +/);\n  }\n\n  if (utils.isArray(type)) {\n    for (var _iterator = type, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var eventType = _ref;\n\n      interact.on(eventType, listener, useCapture);\n    }\n\n    return interact;\n  }\n\n  if (utils.isObject(type)) {\n    for (var prop in type) {\n      interact.on(prop, type[prop], listener);\n    }\n\n    return interact;\n  }\n\n  // if it is an InteractEvent type, add listener to globalEvents\n  if (utils.contains(Interactable.eventTypes, type)) {\n    // if this type of event was never bound\n    if (!globalEvents[type]) {\n      globalEvents[type] = [listener];\n    } else {\n      globalEvents[type].push(listener);\n    }\n  }\n  // If non InteractEvent type, addEventListener to document\n  else {\n      events.add(scope.document, type, listener, useCapture);\n    }\n\n  return interact;\n};\n\n/*\\\n * interact.off\n [ method ]\n *\n * Removes a global InteractEvent listener or DOM event from `document`\n *\n - type       (string | array | object) The types of events that were listened for\n - listener   (function) The listener function to be removed\n - useCapture (boolean) #optional useCapture flag for removeEventListener\n = (object) interact\n \\*/\ninteract.off = function (type, listener, useCapture) {\n  if (utils.isString(type) && type.search(' ') !== -1) {\n    type = type.trim().split(/ +/);\n  }\n\n  if (utils.isArray(type)) {\n    for (var _iterator2 = type, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var eventType = _ref2;\n\n      interact.off(eventType, listener, useCapture);\n    }\n\n    return interact;\n  }\n\n  if (utils.isObject(type)) {\n    for (var prop in type) {\n      interact.off(prop, type[prop], listener);\n    }\n\n    return interact;\n  }\n\n  if (!utils.contains(Interactable.eventTypes, type)) {\n    events.remove(scope.document, type, listener, useCapture);\n  } else {\n    var index = undefined;\n\n    if (type in globalEvents && (index = utils.indexOf(globalEvents[type], listener)) !== -1) {\n      globalEvents[type].splice(index, 1);\n    }\n  }\n\n  return interact;\n};\n\n/*\\\n * interact.debug\n [ method ]\n *\n * Returns an object which exposes internal data\n = (object) An object with properties that outline the current state and expose internal functions and variables\n\\*/\ninteract.debug = function () {\n  return scope;\n};\n\n// expose the functions used to calculate multi-touch properties\ninteract.getPointerAverage = utils.pointerAverage;\ninteract.getTouchBBox = utils.touchBBox;\ninteract.getTouchDistance = utils.touchDistance;\ninteract.getTouchAngle = utils.touchAngle;\n\ninteract.getElementRect = utils.getElementRect;\ninteract.getElementClientRect = utils.getElementClientRect;\ninteract.matchesSelector = utils.matchesSelector;\ninteract.closest = utils.closest;\n\n/*\\\n * interact.supportsTouch\n [ method ]\n *\n = (boolean) Whether or not the browser supports touch input\n\\*/\ninteract.supportsTouch = function () {\n  return browser.supportsTouch;\n};\n\n/*\\\n * interact.supportsPointerEvent\n [ method ]\n *\n = (boolean) Whether or not the browser supports PointerEvents\n\\*/\ninteract.supportsPointerEvent = function () {\n  return browser.supportsPointerEvent;\n};\n\n/*\\\n * interact.stop\n [ method ]\n *\n * Cancels all interactions (end events are not fired)\n *\n - event (Event) An event on which to call preventDefault()\n = (object) interact\n\\*/\ninteract.stop = function (event) {\n  for (var i = scope.interactions.length - 1; i >= 0; i--) {\n    scope.interactions[i].stop(event);\n  }\n\n  return interact;\n};\n\n/*\\\n * interact.pointerMoveTolerance\n [ method ]\n * Returns or sets the distance the pointer must be moved before an action\n * sequence occurs. This also affects tolerance for tap events.\n *\n - newValue (number) #optional The movement from the start position must be greater than this value\n = (number | Interactable) The current setting or interact\n\\*/\ninteract.pointerMoveTolerance = function (newValue) {\n  if (utils.isNumber(newValue)) {\n    Interaction.pointerMoveTolerance = newValue;\n\n    return this;\n  }\n\n  return Interaction.pointerMoveTolerance;\n};\n\ninteract.addDocument = scope.addDocument;\ninteract.removeDocument = scope.removeDocument;\n\nscope.interact = interact;\n\nmodule.exports = interact;\n\n},{\"./Interactable\":4,\"./Interaction\":5,\"./scope\":31,\"./utils\":41,\"./utils/browser\":34,\"./utils/events\":37}],21:[function(require,module,exports){\nvar Interactable = require('./Interactable');\nvar Interaction = require('./Interaction');\nvar scope = require('./scope');\nvar isType = require('./utils/isType');\n\nvar _require = require('./utils/domUtils');\n\nvar nodeContains = _require.nodeContains;\nvar matchesSelector = _require.matchesSelector;\n\n/*\\\n * Interactable.preventDefault\n [ method ]\n *\n * Returns or sets whether to prevent the browser's default behaviour\n * in response to pointer events. Can be set to:\n *  - `'always'` to always prevent\n *  - `'never'` to never prevent\n *  - `'auto'` to let interact.js try to determine what would be best\n *\n - newValue (string) #optional `true`, `false` or `'auto'`\n = (string | Interactable) The current setting or this Interactable\n\\*/\nInteractable.prototype.preventDefault = function (newValue) {\n  if (/^(always|never|auto)$/.test(newValue)) {\n    this.options.preventDefault = newValue;\n    return this;\n  }\n\n  if (isType.isBool(newValue)) {\n    this.options.preventDefault = newValue ? 'always' : 'never';\n    return this;\n  }\n\n  return this.options.preventDefault;\n};\n\nInteractable.prototype.checkAndPreventDefault = function (event) {\n  var setting = this.options.preventDefault;\n\n  if (setting === 'never') {\n    return;\n  }\n\n  if (setting === 'always') {\n    event.preventDefault();\n    return;\n  }\n\n  // setting === 'auto'\n\n  // don't preventDefault of pointerdown events\n  if (/^(mouse|pointer|touch)*(down|start)/i.test(event.type)) {\n    return;\n  }\n\n  // don't preventDefault on editable elements\n  if (matchesSelector(event.target, 'input,select,textarea,[contenteditable=true],[contenteditable=true] *')) {\n    return;\n  }\n\n  event.preventDefault();\n};\n\nfunction onInteractionEvent(_ref2) {\n  var interaction = _ref2.interaction;\n  var event = _ref2.event;\n\n  if (interaction.target) {\n    interaction.target.checkAndPreventDefault(event);\n  }\n}\n\nvar _arr = ['down', 'move', 'up', 'cancel'];\nfor (var _i = 0; _i < _arr.length; _i++) {\n  var eventSignal = _arr[_i];\n  Interaction.signals.on(eventSignal, onInteractionEvent);\n}\n\n// prevent native HTML5 drag on interact.js target elements\nInteraction.docEvents.dragstart = function preventNativeDrag(event) {\n  for (var _iterator = scope.interactions, _isArray = Array.isArray(_iterator), _i2 = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i2 >= _iterator.length) break;\n      _ref = _iterator[_i2++];\n    } else {\n      _i2 = _iterator.next();\n      if (_i2.done) break;\n      _ref = _i2.value;\n    }\n\n    var interaction = _ref;\n\n    if (interaction.element && (interaction.element === event.target || nodeContains(interaction.element, event.target))) {\n\n      interaction.target.checkAndPreventDefault(event);\n      return;\n    }\n  }\n};\n\n},{\"./Interactable\":4,\"./Interaction\":5,\"./scope\":31,\"./utils/domUtils\":36,\"./utils/isType\":43}],22:[function(require,module,exports){\nvar scope = require('./scope');\nvar events = require('./utils/events');\nvar browser = require('./utils/browser');\nvar iFinder = require('./utils/interactionFinder');\n\nvar toString = Object.prototype.toString;\n\nif (!window.Array.isArray) {\n  window.Array.isArray = function (obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n}\n\nif (!String.prototype.trim) {\n  String.prototype.trim = function () {\n    return this.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n  };\n}\n\n// http://www.quirksmode.org/dom/events/click.html\n// >Events leading to dblclick\n//\n// IE8 doesn't fire down event before dblclick.\n// This workaround tries to fire a tap and doubletap after dblclick\nfunction onIE8Dblclick(event) {\n  var interaction = iFinder.search(event, event.type, event.target);\n\n  if (!interaction) {\n    return;\n  }\n\n  if (interaction.prevTap && event.clientX === interaction.prevTap.clientX && event.clientY === interaction.prevTap.clientY && event.target === interaction.prevTap.target) {\n\n    interaction.downTargets[0] = event.target;\n    interaction.downTimes[0] = new Date().getTime();\n\n    scope.pointerEvents.collectEventTargets(interaction, event, event, event.target, 'tap');\n  }\n}\n\nif (browser.isIE8) {\n  (function () {\n    var selectFix = function (event) {\n      for (var _iterator = scope.interactions, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var interaction = _ref;\n\n        if (interaction.interacting()) {\n          interaction.target.checkAndPreventDefault(event);\n        }\n      }\n    };\n\n    var onDocIE8 = function onDocIE8(_ref2, signalName) {\n      var doc = _ref2.doc;\n      var win = _ref2.win;\n\n      var eventMethod = signalName.indexOf('listen') === 0 ? events.add : events.remove;\n\n      // For IE's lack of Event#preventDefault\n      eventMethod(doc, 'selectstart', selectFix);\n\n      if (scope.pointerEvents) {\n        eventMethod(doc, 'dblclick', onIE8Dblclick);\n      }\n    };\n\n    scope.signals.on('add-document', onDocIE8);\n    scope.signals.on('remove-document', onDocIE8);\n  })();\n}\n\nmodule.exports = null;\n\n},{\"./scope\":31,\"./utils/browser\":34,\"./utils/events\":37,\"./utils/interactionFinder\":42}],23:[function(require,module,exports){\nvar InteractEvent = require('../InteractEvent');\nvar Interaction = require('../Interaction');\nvar extend = require('../utils/extend');\n\nvar modifiers = {\n  names: [],\n\n  setOffsets: function (interaction, coords) {\n    var target = interaction.target;\n    var element = interaction.element;\n\n    var rect = target.getRect(element);\n\n    if (rect) {\n      interaction.startOffset.left = coords.page.x - rect.left;\n      interaction.startOffset.top = coords.page.y - rect.top;\n\n      interaction.startOffset.right = rect.right - coords.page.x;\n      interaction.startOffset.bottom = rect.bottom - coords.page.y;\n\n      if (!('width' in rect)) {\n        rect.width = rect.right - rect.left;\n      }\n      if (!('height' in rect)) {\n        rect.height = rect.bottom - rect.top;\n      }\n    } else {\n      interaction.startOffset.left = interaction.startOffset.top = interaction.startOffset.right = interaction.startOffset.bottom = 0;\n    }\n\n    modifiers.setModifierOffsets(interaction, target, element, rect, interaction.modifierOffsets);\n  },\n\n  setModifierOffsets: function (interaction, interactable, element, rect, offsets) {\n    for (var i = 0; i < modifiers.names.length; i++) {\n      var modifierName = modifiers.names[i];\n\n      offsets[modifierName] = modifiers[modifiers.names[i]].setOffset(interaction, interactable, element, rect, interaction.startOffset);\n    }\n  },\n\n  setAll: function (interaction, coordsArg, statuses, preEnd, requireEndOnly) {\n    var result = {\n      dx: 0,\n      dy: 0,\n      changed: false,\n      locked: false,\n      shouldMove: true\n    };\n    var target = interaction.target;\n    var coords = extend({}, coordsArg);\n\n    var currentStatus = undefined;\n\n    for (var _iterator = modifiers.names, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var modifierName = _ref;\n\n      var modifier = modifiers[modifierName];\n      var modifierOptions = target.options[interaction.prepared.name][modifierName];\n\n      if (!shouldDo(modifierOptions, preEnd, requireEndOnly)) {\n        continue;\n      }\n\n      currentStatus = modifier.set(coords, interaction, statuses[modifierName]);\n\n      if (currentStatus.locked) {\n        coords.x += currentStatus.dx;\n        coords.y += currentStatus.dy;\n\n        result.dx += currentStatus.dx;\n        result.dy += currentStatus.dy;\n\n        result.locked = true;\n      }\n    }\n\n    // a move should be fired if the modified coords of\n    // the last modifier status that was calculated changes\n    result.shouldMove = !currentStatus || currentStatus.changed;\n\n    return result;\n  },\n\n  resetStatuses: function (statuses) {\n    for (var _iterator2 = modifiers.names, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var modifierName = _ref2;\n\n      statuses[modifierName] = modifiers[modifierName].reset(statuses[modifierName] || {});\n    }\n\n    return statuses;\n  },\n\n  start: function (_ref3, signalName) {\n    var interaction = _ref3.interaction;\n\n    modifiers.setOffsets(interaction, signalName === 'action-resume' ? interaction.curCoords : interaction.startCoords);\n\n    modifiers.resetStatuses(interaction.modifierStatuses);\n    modifiers.setAll(interaction, interaction.startCoords.page, interaction.modifierStatuses);\n  }\n};\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.startOffset = { left: 0, right: 0, top: 0, bottom: 0 };\n  interaction.modifierOffsets = {};\n  interaction.modifierStatuses = modifiers.resetStatuses({});\n});\n\nInteraction.signals.on('action-start', modifiers.start);\nInteraction.signals.on('action-resume', modifiers.start);\n\nInteraction.signals.on('before-action-move', function (_ref4) {\n  var interaction = _ref4.interaction;\n  var preEnd = _ref4.preEnd;\n  var interactingBeforeMove = _ref4.interactingBeforeMove;\n\n  var modifierResult = modifiers.setAll(interaction, interaction.curCoords.page, interaction.modifierStatuses, preEnd);\n\n  // don't fire an action move if a modifier would keep the event in the same\n  // cordinates as before\n  if (!modifierResult.shouldMove && interactingBeforeMove) {\n    interaction._dontFireMove = true;\n  }\n});\n\nInteraction.signals.on('action-end', function (_ref5) {\n  var interaction = _ref5.interaction;\n  var event = _ref5.event;\n\n  for (var i = 0; i < modifiers.names.length; i++) {\n    var modifierOptions = interaction.target.options[interaction.prepared.name][modifiers.names[i]];\n\n    // if the endOnly option is true for any modifier\n    if (shouldDo(modifierOptions, true, true)) {\n      // fire a move event at the modified coordinates\n      interaction.doMove({ event: event, preEnd: true });\n      break;\n    }\n  }\n});\n\nInteractEvent.signals.on('set-xy', function (_ref6) {\n  var iEvent = _ref6.iEvent;\n  var interaction = _ref6.interaction;\n  var page = _ref6.page;\n  var client = _ref6.client;\n  var phase = _ref6.phase;\n  var actionName = _ref6.action;\n\n  var target = interaction.target;\n\n  for (var i = 0; i < modifiers.names.length; i++) {\n    var modifierName = modifiers.names[i];\n    var modifier = modifiers[modifierName];\n\n    iEvent[modifierName] = modifier.modifyCoords(page, client, target, interaction.modifierStatuses[modifierName], actionName, phase);\n  }\n});\n\nfunction shouldDo(options, preEnd, requireEndOnly) {\n  return options && options.enabled && (preEnd || !options.endOnly) && (!requireEndOnly || options.endOnly);\n}\n\nmodule.exports = modifiers;\n\n},{\"../InteractEvent\":3,\"../Interaction\":5,\"../utils/extend\":38}],24:[function(require,module,exports){\nvar modifiers = require('./index');\nvar utils = require('../utils');\nvar defaultOptions = require('../defaultOptions');\n\nvar restrict = {\n  defaults: {\n    enabled: false,\n    endOnly: false,\n    restriction: null,\n    elementRect: null\n  },\n\n  setOffset: function (interaction, interactable, element, rect, startOffset) {\n    var elementRect = interactable.options[interaction.prepared.name].restrict.elementRect;\n    var offset = {};\n\n    if (rect && elementRect) {\n      offset.left = startOffset.left - rect.width * elementRect.left;\n      offset.top = startOffset.top - rect.height * elementRect.top;\n\n      offset.right = startOffset.right - rect.width * (1 - elementRect.right);\n      offset.bottom = startOffset.bottom - rect.height * (1 - elementRect.bottom);\n    } else {\n      offset.left = offset.top = offset.right = offset.bottom = 0;\n    }\n\n    return offset;\n  },\n\n  set: function (pageCoords, interaction, status) {\n    var target = interaction.target;\n    var restrictOptions = target && target.options[interaction.prepared.name].restrict;\n    var restriction = restrictOptions && restrictOptions.restriction;\n\n    if (!restriction) {\n      return status;\n    }\n\n    var page = status.useStatusXY ? { x: status.x, y: status.y } : utils.extend({}, pageCoords);\n\n    status.dx = 0;\n    status.dy = 0;\n    status.locked = false;\n\n    if (utils.isString(restriction)) {\n      if (restriction === 'parent') {\n        restriction = utils.parentNode(interaction.element);\n      } else if (restriction === 'self') {\n        restriction = target.getRect(interaction.element);\n      } else {\n        restriction = utils.closest(interaction.element, restriction);\n      }\n\n      if (!restriction) {\n        return status;\n      }\n    }\n\n    if (utils.isFunction(restriction)) {\n      restriction = restriction(page.x, page.y, interaction.element);\n    }\n\n    if (utils.isElement(restriction)) {\n      restriction = utils.getElementRect(restriction);\n    }\n\n    var rect = restriction;\n    var modifiedX = undefined;\n    var modifiedY = undefined;\n\n    var offset = interaction.modifierOffsets.restrict;\n\n    if (!restriction) {\n      modifiedX = page.x;\n      modifiedY = page.y;\n    }\n    // object is assumed to have\n    // x, y, width, height or\n    // left, top, right, bottom\n    else if ('x' in restriction && 'y' in restriction) {\n        modifiedX = Math.max(Math.min(rect.x + rect.width - offset.right, page.x), rect.x + offset.left);\n        modifiedY = Math.max(Math.min(rect.y + rect.height - offset.bottom, page.y), rect.y + offset.top);\n      } else {\n        modifiedX = Math.max(Math.min(rect.right - offset.right, page.x), rect.left + offset.left);\n        modifiedY = Math.max(Math.min(rect.bottom - offset.bottom, page.y), rect.top + offset.top);\n      }\n\n    status.dx = modifiedX - page.x;\n    status.dy = modifiedY - page.y;\n\n    status.changed = status.modifiedX !== modifiedX || status.modifiedY !== modifiedY;\n    status.locked = !!(status.dx || status.dy);\n\n    status.modifiedX = modifiedX;\n    status.modifiedY = modifiedY;\n\n    return status;\n  },\n\n  reset: function (status) {\n    status.dx = status.dy = 0;\n    status.modifiedX = status.modifiedY = NaN;\n    status.locked = false;\n    status.changed = true;\n\n    return status;\n  },\n\n  modifyCoords: function (page, client, interactable, status, actionName, phase) {\n    var options = interactable.options[actionName].restrict;\n    var elementRect = options && options.elementRect;\n\n    if (options && options.enabled && !(phase === 'start' && elementRect && status.locked)) {\n\n      if (status.locked) {\n        page.x += status.dx;\n        page.y += status.dy;\n        client.x += status.dx;\n        client.y += status.dy;\n\n        return {\n          dx: status.dx,\n          dy: status.dy\n        };\n      }\n    }\n  }\n};\n\nmodifiers.restrict = restrict;\nmodifiers.names.push('restrict');\n\ndefaultOptions.perAction.restrict = restrict.defaults;\n\nmodule.exports = restrict;\n\n},{\"../defaultOptions\":17,\"../utils\":41,\"./index\":23}],25:[function(require,module,exports){\n// This module adds the options.resize.restrictEdges setting which sets min and\n// max for the top, left, bottom and right edges of the target being resized.\n//\n// interact(target).resize({\n//   edges: { top: true, left: true },\n//   restrictEdges: {\n//     min: { top:   0, left:   0, right: 100, bottom: 100 },\n//     max: { top: 500, left: 500, right: 600, bottom: 600 },\n//   },\n// });\n\nvar modifiers = require('./index');\nvar utils = require('../utils');\nvar rectUtils = require('../utils/rect');\nvar defaultOptions = require('../defaultOptions');\nvar resize = require('../actions/resize');\n\nvar noMin = { top: -Infinity, left: -Infinity, bottom: -Infinity, right: -Infinity };\nvar noMax = { top: +Infinity, left: +Infinity, bottom: +Infinity, right: +Infinity };\n\nvar restrictEdges = {\n  defaults: {\n    enabled: false,\n    endOnly: false,\n    min: null,\n    max: null,\n    offset: null\n  },\n\n  setOffset: function (interaction, interactable, element, rect, startOffset) {\n    var options = interactable.options[interaction.prepared.name].restrictEdges;\n\n    if (!options) {\n      return;\n    }\n\n    var offset = getRestrictionRect(offset, interaction);\n\n    if (offset) {\n      return {\n        top: startOffset.top + offset.y,\n        left: startOffset.left + offset.x,\n        bottom: startOffset.bottom + offset.y,\n        right: startOffset.right + offset.x\n      };\n    }\n\n    return startOffset;\n  },\n\n  set: function (pageCoords, interaction, status) {\n    if (!interaction.interacting()) {\n      return status;\n    }\n\n    var target = interaction.target;\n    var options = status.options || target && target.options[interaction.prepared.name].restrictEdges;\n    var edges = interaction.prepared.linkedEdges || interaction.prepared.edges;\n\n    if (!options.enabled || !edges) {\n      return status;\n    }\n\n    var page = status.useStatusXY ? { x: status.x, y: status.y } : utils.extend({}, pageCoords);\n    var min = rectUtils.xywhToTlbr(getRestrictionRect(options.min, interaction)) || noMin;\n    var max = rectUtils.xywhToTlbr(getRestrictionRect(options.max, interaction)) || noMax;\n    var offset = interaction.modifierOffsets.restrictEdges;\n\n    var modifiedX = page.x;\n    var modifiedY = page.y;\n\n    status.dx = 0;\n    status.dy = 0;\n    status.locked = false;\n\n    if (edges.top) {\n      modifiedY = Math.max(Math.min(max.top + offset.top, page.y), min.top + offset.top);\n    } else if (edges.bottom) {\n      modifiedY = Math.max(Math.min(max.bottom - offset.bottom, page.y), min.bottom - offset.bottom);\n    }\n    if (edges.left) {\n      modifiedX = Math.max(Math.min(max.left + offset.left, page.x), min.left + offset.left);\n    } else if (edges.right) {\n      modifiedX = Math.max(Math.min(max.right - offset.right, page.x), min.right - offset.right);\n    }\n\n    status.dx = modifiedX - page.x;\n    status.dy = modifiedY - page.y;\n\n    status.changed = status.modifiedX !== modifiedX || status.modifiedY !== modifiedY;\n    status.locked = !!(status.dx || status.dy);\n\n    status.modifiedX = modifiedX;\n    status.modifiedY = modifiedY;\n\n    //console.log(status.dx, status.modifiedX, status.changed, status.locked);\n\n    return status;\n  },\n\n  reset: function (status) {\n    status.dx = status.dy = 0;\n    status.modifiedX = status.modifiedY = NaN;\n    status.locked = false;\n    status.changed = true;\n    status.options = null;\n\n    return status;\n  },\n\n  modifyCoords: function (page, client, interactable, status, actionName, phase) {\n    var options = status.options || interactable.options[actionName].restrictEdges;\n\n    if (options && options.enabled && !(phase === 'start' && status.locked)) {\n\n      if (status.locked) {\n        page.x += status.dx;\n        page.y += status.dy;\n        client.x += status.dx;\n        client.y += status.dy;\n\n        return {\n          dx: status.dx,\n          dy: status.dy\n        };\n      }\n    }\n  },\n\n  noMin: noMin,\n  noMax: noMax,\n  getRestrictionRect: getRestrictionRect\n};\n\nfunction getRestrictionRect(value, interaction) {\n  value = utils.getStringOptionResult(value, interaction.element) || value;\n\n  if (utils.isFunction(value)) {\n    value = value(interaction.resizeRects.inverted);\n  }\n\n  if (utils.isElement(value)) {\n    value = utils.getElementRect(value);\n  }\n\n  return value;\n}\n\nmodifiers.restrictEdges = restrictEdges;\nmodifiers.names.push('restrictEdges');\n\ndefaultOptions.perAction.restrictEdges = restrictEdges.defaults;\nresize.defaults.restrictEdges = restrictEdges.defaults;\n\nmodule.exports = restrictEdges;\n\n},{\"../actions/resize\":10,\"../defaultOptions\":17,\"../utils\":41,\"../utils/rect\":48,\"./index\":23}],26:[function(require,module,exports){\n// This module adds the options.resize.restrictSize setting which sets min and\n// max width and height for the target being resized.\n//\n// interact(target).resize({\n//   edges: { top: true, left: true },\n//   restrictSize: {\n//     min: { width: -600, height: -600 },\n//     max: { width:  600, height:  600 },\n//   },\n// });\n\nvar modifiers = require('./index');\nvar restrictEdges = require('./restrictEdges');\nvar utils = require('../utils');\nvar rectUtils = require('../utils/rect');\nvar defaultOptions = require('../defaultOptions');\nvar resize = require('../actions/resize');\n\nvar noMin = { width: -Infinity, height: -Infinity };\nvar noMax = { width: +Infinity, height: +Infinity };\n\nvar restrictSize = {\n  defaults: {\n    enabled: false,\n    endOnly: false,\n    min: null,\n    max: null\n  },\n\n  setOffset: function () {},\n\n  set: function (pageCoords, interaction, status) {\n    if (!interaction.interacting()) {\n      return status;\n    }\n\n    var target = interaction.target;\n    var options = target && target.options[interaction.prepared.name].restrictSize;\n    var edges = interaction.prepared.linkedEdges || interaction.prepared.edges;\n\n    if (!options.enabled || !edges) {\n      return status;\n    }\n\n    var rect = rectUtils.xywhToTlbr(interaction.resizeRects.inverted);\n\n    var minSize = rectUtils.tlbrToXywh(restrictEdges.getRestrictionRect(options.min, interaction)) || noMin;\n    var maxSize = rectUtils.tlbrToXywh(restrictEdges.getRestrictionRect(options.max, interaction)) || noMax;\n\n    status.options = {\n      enabled: options.enabled,\n      endOnly: options.endOnly,\n      min: utils.extend({}, restrictEdges.noMin),\n      max: utils.extend({}, restrictEdges.noMax)\n    };\n\n    if (edges.top) {\n      status.options.min.top = rect.bottom - maxSize.height;\n      status.options.max.top = rect.bottom - minSize.height;\n    } else if (edges.bottom) {\n      status.options.min.bottom = rect.top + minSize.height;\n      status.options.max.bottom = rect.top + maxSize.height;\n    }\n    if (edges.left) {\n      status.options.min.left = rect.right - maxSize.width;\n      status.options.max.left = rect.right - minSize.width;\n    } else if (edges.right) {\n      status.options.min.right = rect.left + minSize.width;\n      status.options.max.right = rect.left + maxSize.width;\n    }\n\n    return restrictEdges.set(pageCoords, interaction, status);\n  },\n\n  reset: restrictEdges.reset,\n\n  modifyCoords: restrictEdges.modifyCoords\n};\n\nmodifiers.restrictSize = restrictSize;\nmodifiers.names.push('restrictSize');\n\ndefaultOptions.perAction.restrictSize = restrictSize.defaults;\nresize.defaults.restrictSize = restrictSize.defaults;\n\nmodule.exports = restrictSize;\n\n},{\"../actions/resize\":10,\"../defaultOptions\":17,\"../utils\":41,\"../utils/rect\":48,\"./index\":23,\"./restrictEdges\":25}],27:[function(require,module,exports){\nvar modifiers = require('./index');\nvar interact = require('../interact');\nvar utils = require('../utils');\nvar defaultOptions = require('../defaultOptions');\n\nvar snap = {\n  defaults: {\n    enabled: false,\n    endOnly: false,\n    range: Infinity,\n    targets: null,\n    offsets: null,\n\n    relativePoints: null\n  },\n\n  setOffset: function (interaction, interactable, element, rect, startOffset) {\n    var offsets = [];\n    var origin = utils.getOriginXY(interactable, element, interaction.prepared.name);\n    var snapOptions = interactable.options[interaction.prepared.name].snap || {};\n    var snapOffset = undefined;\n\n    if (snapOptions.offset === 'startCoords') {\n      snapOffset = {\n        x: interaction.startCoords.page.x - origin.x,\n        y: interaction.startCoords.page.y - origin.y\n      };\n    } else if (snapOptions.offset === 'self') {\n      snapOffset = {\n        x: rect.left - origin.x,\n        y: rect.top - origin.y\n      };\n    } else {\n      snapOffset = snapOptions.offset || { x: 0, y: 0 };\n    }\n\n    if (rect && snapOptions.relativePoints && snapOptions.relativePoints.length) {\n      for (var _iterator = snapOptions.relativePoints, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var relativeX = _ref.x;\n        var relativeY = _ref.y;\n\n        offsets.push({\n          x: startOffset.left - rect.width * relativeX + snapOffset.x,\n          y: startOffset.top - rect.height * relativeY + snapOffset.y\n        });\n      }\n    } else {\n      offsets.push(snapOffset);\n    }\n\n    return offsets;\n  },\n\n  set: function (pageCoords, interaction, status) {\n    var snapOptions = interaction.target.options[interaction.prepared.name].snap;\n    var targets = [];\n    var target = undefined;\n    var page = undefined;\n    var i = undefined;\n\n    if (status.useStatusXY) {\n      page = { x: status.x, y: status.y };\n    } else {\n      var origin = utils.getOriginXY(interaction.target, interaction.element, interaction.prepared.name);\n\n      page = utils.extend({}, pageCoords);\n\n      page.x -= origin.x;\n      page.y -= origin.y;\n    }\n\n    status.realX = page.x;\n    status.realY = page.y;\n\n    var offsets = interaction.modifierOffsets.snap;\n    var len = snapOptions.targets ? snapOptions.targets.length : 0;\n\n    for (var _iterator2 = offsets, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var offsetX = _ref2.x;\n      var offsetY = _ref2.y;\n\n      var relativeX = page.x - offsetX;\n      var relativeY = page.y - offsetY;\n\n      for (var _iterator3 = snapOptions.targets, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n        var _ref3;\n\n        if (_isArray3) {\n          if (_i3 >= _iterator3.length) break;\n          _ref3 = _iterator3[_i3++];\n        } else {\n          _i3 = _iterator3.next();\n          if (_i3.done) break;\n          _ref3 = _i3.value;\n        }\n\n        var snapTarget = _ref3;\n\n        if (utils.isFunction(snapTarget)) {\n          target = snapTarget(relativeX, relativeY, interaction);\n        } else {\n          target = snapTarget;\n        }\n\n        if (!target) {\n          continue;\n        }\n\n        targets.push({\n          x: utils.isNumber(target.x) ? target.x + offsetX : relativeX,\n          y: utils.isNumber(target.y) ? target.y + offsetY : relativeY,\n\n          range: utils.isNumber(target.range) ? target.range : snapOptions.range\n        });\n      }\n    }\n\n    var closest = {\n      target: null,\n      inRange: false,\n      distance: 0,\n      range: 0,\n      dx: 0,\n      dy: 0\n    };\n\n    for (i = 0, len = targets.length; i < len; i++) {\n      target = targets[i];\n\n      var range = target.range;\n      var dx = target.x - page.x;\n      var dy = target.y - page.y;\n      var distance = utils.hypot(dx, dy);\n      var inRange = distance <= range;\n\n      // Infinite targets count as being out of range\n      // compared to non infinite ones that are in range\n      if (range === Infinity && closest.inRange && closest.range !== Infinity) {\n        inRange = false;\n      }\n\n      if (!closest.target || (inRange\n      // is the closest target in range?\n      ? closest.inRange && range !== Infinity\n      // the pointer is relatively deeper in this target\n      ? distance / range < closest.distance / closest.range\n      // this target has Infinite range and the closest doesn't\n      : range === Infinity && closest.range !== Infinity ||\n      // OR this target is closer that the previous closest\n      distance < closest.distance :\n      // The other is not in range and the pointer is closer to this target\n      !closest.inRange && distance < closest.distance)) {\n\n        closest.target = target;\n        closest.distance = distance;\n        closest.range = range;\n        closest.inRange = inRange;\n        closest.dx = dx;\n        closest.dy = dy;\n\n        status.range = range;\n      }\n    }\n\n    var snapChanged = undefined;\n\n    if (closest.target) {\n      snapChanged = status.snappedX !== closest.target.x || status.snappedY !== closest.target.y;\n\n      status.snappedX = closest.target.x;\n      status.snappedY = closest.target.y;\n    } else {\n      snapChanged = true;\n\n      status.snappedX = NaN;\n      status.snappedY = NaN;\n    }\n\n    status.dx = closest.dx;\n    status.dy = closest.dy;\n\n    status.changed = snapChanged || closest.inRange && !status.locked;\n    status.locked = closest.inRange;\n\n    return status;\n  },\n\n  reset: function (status) {\n    status.dx = status.dy = 0;\n    status.snappedX = status.snappedY = NaN;\n    status.locked = false;\n    status.changed = true;\n\n    return status;\n  },\n\n  modifyCoords: function (page, client, interactable, status, actionName, phase) {\n    var snapOptions = interactable.options[actionName].snap;\n    var relativePoints = snapOptions && snapOptions.relativePoints;\n\n    if (snapOptions && snapOptions.enabled && !(phase === 'start' && relativePoints && relativePoints.length)) {\n\n      if (status.locked) {\n        page.x += status.dx;\n        page.y += status.dy;\n        client.x += status.dx;\n        client.y += status.dy;\n      }\n\n      return {\n        range: status.range,\n        locked: status.locked,\n        x: status.snappedX,\n        y: status.snappedY,\n        realX: status.realX,\n        realY: status.realY,\n        dx: status.dx,\n        dy: status.dy\n      };\n    }\n  }\n};\n\ninteract.createSnapGrid = function (grid) {\n  return function (x, y) {\n    var limits = grid.limits || {\n      left: -Infinity,\n      right: Infinity,\n      top: -Infinity,\n      bottom: Infinity\n    };\n    var offsetX = 0;\n    var offsetY = 0;\n\n    if (utils.isObject(grid.offset)) {\n      offsetX = grid.offset.x;\n      offsetY = grid.offset.y;\n    }\n\n    var gridx = Math.round((x - offsetX) / grid.x);\n    var gridy = Math.round((y - offsetY) / grid.y);\n\n    var newX = Math.max(limits.left, Math.min(limits.right, gridx * grid.x + offsetX));\n    var newY = Math.max(limits.top, Math.min(limits.bottom, gridy * grid.y + offsetY));\n\n    return {\n      x: newX,\n      y: newY,\n      range: grid.range\n    };\n  };\n};\n\nmodifiers.snap = snap;\nmodifiers.names.push('snap');\n\ndefaultOptions.perAction.snap = snap.defaults;\n\nmodule.exports = snap;\n\n},{\"../defaultOptions\":17,\"../interact\":20,\"../utils\":41,\"./index\":23}],28:[function(require,module,exports){\nvar pointerEvents = require('./index.js');\nvar Interaction = require('../Interaction');\n\npointerEvents.signals.on('new', function (_ref) {\n  var pointerEvent = _ref.pointerEvent;\n\n  pointerEvent.count = (pointerEvent.count || 0) + 1;\n});\n\npointerEvents.signals.on('fired', function (_ref2) {\n  var interaction = _ref2.interaction;\n  var pointerEvent = _ref2.pointerEvent;\n  var eventTarget = _ref2.eventTarget;\n  var targets = _ref2.targets;\n\n  if (pointerEvent.type !== 'hold') {\n    return;\n  }\n\n  // get the repeat interval from the first eventable\n  var interval = targets[0].eventable.options.holdRepeatInterval;\n\n  // don't repeat if the interval is 0 or less\n  if (interval <= 0) {\n    return;\n  }\n\n  // set a timeout to fire the holdrepeat event\n  interaction.holdIntervalHandle = setTimeout(function () {\n    pointerEvents.collectEventTargets(interaction, pointerEvent, pointerEvent, eventTarget, 'hold');\n  }, interval);\n});\n\nfunction endHoldRepeat(_ref3) {\n  var interaction = _ref3.interaction;\n\n  // set the interaction's holdStopTime property\n  // to stop further holdRepeat events\n  if (interaction.holdIntervalHandle) {\n    clearInterval(interaction.holdIntervalHandle);\n    interaction.holdIntervalHandle = null;\n  }\n}\n\nvar _arr = ['move', 'up', 'cancel', 'endall'];\nfor (var _i = 0; _i < _arr.length; _i++) {\n  var signal = _arr[_i];\n  Interaction.signals.on(signal, endHoldRepeat);\n}\n\n// don't repeat by default\npointerEvents.defaults.holdRepeatInterval = 0;\npointerEvents.types.push('holdrepeat');\n\n},{\"../Interaction\":5,\"./index.js\":29}],29:[function(require,module,exports){\nvar scope = require('../scope');\nvar Interaction = require('../Interaction');\nvar utils = require('../utils');\nvar browser = require('../utils/browser');\nvar defaults = require('../defaultOptions');\nvar signals = require('../utils/Signals')['new']();\n\nvar _require = require('../utils/arr');\n\nvar filter = _require.filter;\n\nvar simpleSignals = ['down', 'up', 'up', 'cancel'];\nvar simpleEvents = ['down', 'up', 'tap', 'cancel'];\n\nfunction preventOriginalDefault() {\n  this.originalEvent.preventDefault();\n}\n\nfunction stopImmediatePropagation() {\n  this.immediatePropagationStopped = this.propagationStopped = true;\n}\n\nfunction stopPropagation() {\n  this.propagationStopped = true;\n}\n\nfunction firePointers(interaction, pointer, event, eventTarget, targets, eventType) {\n  var pointerIndex = interaction.getPointerIndex(pointer);\n  var pointerEvent = {};\n  var i = undefined;\n  // for tap events\n  var interval = undefined;\n  var createNewDoubleTap = undefined;\n\n  // if it's a doubletap then the event properties would have been\n  // copied from the tap event and provided as the pointer argument\n  if (eventType === 'doubletap') {\n    pointerEvent = pointer;\n  } else {\n    utils.pointerExtend(pointerEvent, event);\n    if (event !== pointer) {\n      utils.pointerExtend(pointerEvent, pointer);\n    }\n\n    pointerEvent.preventDefault = preventOriginalDefault;\n    pointerEvent.stopPropagation = stopPropagation;\n    pointerEvent.stopImmediatePropagation = stopImmediatePropagation;\n    pointerEvent.interaction = interaction;\n\n    pointerEvent.timeStamp = new Date().getTime();\n    pointerEvent.originalEvent = event;\n    pointerEvent.type = eventType;\n    pointerEvent.pointerId = utils.getPointerId(pointer);\n    pointerEvent.pointerType = interaction.mouse ? 'mouse' : !browser.supportsPointerEvent ? 'touch' : utils.isString(pointer.pointerType) ? pointer.pointerType : [undefined, undefined, 'touch', 'pen', 'mouse'][pointer.pointerType];\n  }\n\n  if (eventType === 'tap') {\n    pointerEvent.dt = pointerEvent.timeStamp - interaction.downTimes[pointerIndex];\n\n    interval = pointerEvent.timeStamp - interaction.tapTime;\n    createNewDoubleTap = !!(interaction.prevTap && interaction.prevTap.type !== 'doubletap' && interaction.prevTap.target === pointerEvent.target && interval < 500);\n\n    pointerEvent.double = createNewDoubleTap;\n\n    interaction.tapTime = pointerEvent.timeStamp;\n  }\n\n  var signalArg = {\n    interaction: interaction,\n    pointerEvent: pointerEvent,\n    pointer: pointer,\n    event: event,\n    eventTarget: eventTarget,\n    targets: targets\n  };\n\n  signals.fire('new', signalArg);\n\n  for (i = 0; i < targets.length; i++) {\n    var target = targets[i];\n\n    pointerEvent.currentTarget = target.element;\n\n    for (var prop in target.props || {}) {\n      pointerEvent[prop] = target.props[prop];\n    }\n\n    var _utils$getOriginXY = utils.getOriginXY(target.eventable, target.element);\n\n    var originX = _utils$getOriginXY.x;\n    var originY = _utils$getOriginXY.y;\n\n    pointerEvent.pageX -= originX;\n    pointerEvent.pageY -= originY;\n    pointerEvent.clientX -= originX;\n    pointerEvent.clientY -= originY;\n\n    pointerEvent.eventable = target.eventable;\n\n    target.eventable.fire(pointerEvent);\n\n    pointerEvent.pageX += originX;\n    pointerEvent.pageY += originY;\n    pointerEvent.clientX += originX;\n    pointerEvent.clientY += originY;\n\n    if (pointerEvent.immediatePropagationStopped || pointerEvent.propagationStopped && i + 1 < targets.length && targets[i + 1].element !== pointerEvent.currentTarget) {\n      break;\n    }\n  }\n\n  signals.fire('fired', signalArg);\n\n  if (createNewDoubleTap) {\n    var doubleTap = {};\n\n    utils.extend(doubleTap, pointerEvent);\n\n    doubleTap.dt = interval;\n    doubleTap.type = 'doubletap';\n\n    collectEventTargets(interaction, doubleTap, event, eventTarget, 'doubletap');\n\n    interaction.prevTap = doubleTap;\n  } else if (eventType === 'tap') {\n    interaction.prevTap = pointerEvent;\n  }\n}\n\nfunction collectEventTargets(interaction, pointer, event, eventTarget, eventType) {\n  var pointerIndex = interaction.getPointerIndex(pointer);\n\n  // do not fire a tap event if the pointer was moved before being lifted\n  if (eventType === 'tap' && (interaction.pointerWasMoved\n  // or if the pointerup target is different to the pointerdown target\n   || !(interaction.downTargets[pointerIndex] && interaction.downTargets[pointerIndex] === eventTarget))) {\n    return;\n  }\n\n  var targets = [];\n  var path = utils.getPath(eventTarget);\n  var signalArg = {\n    targets: targets,\n    interaction: interaction,\n    pointer: pointer,\n    event: event,\n    eventTarget: eventTarget,\n    eventType: eventType,\n    path: path,\n    element: null\n  };\n\n  for (var _iterator = path, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var element = _ref;\n\n    signalArg.element = element;\n\n    signals.fire('collect-targets', signalArg);\n  }\n\n  if (eventType === 'hold') {\n    targets = filter(targets, function (target) {\n      return target.eventable.options.holdDuration === interaction.holdTimers[pointerIndex].duration;\n    });\n  }\n\n  // create the tap event even if there are no listeners so that\n  // doubletap can still be created and fired\n  if (targets.length || eventType === 'tap') {\n    firePointers(interaction, pointer, event, eventTarget, targets, eventType);\n  }\n}\n\nInteraction.signals.on('move', function (_ref3) {\n  var interaction = _ref3.interaction;\n  var pointer = _ref3.pointer;\n  var event = _ref3.event;\n  var eventTarget = _ref3.eventTarget;\n  var duplicateMove = _ref3.duplicateMove;\n\n  var pointerIndex = interaction.getPointerIndex(pointer);\n\n  if (!duplicateMove && (!interaction.pointerIsDown || interaction.pointerWasMoved)) {\n    if (interaction.pointerIsDown) {\n      clearTimeout(interaction.holdTimers[pointerIndex].timeout);\n    }\n\n    collectEventTargets(interaction, pointer, event, eventTarget, 'move');\n  }\n});\n\nInteraction.signals.on('down', function (_ref4) {\n  var interaction = _ref4.interaction;\n  var pointer = _ref4.pointer;\n  var event = _ref4.event;\n  var eventTarget = _ref4.eventTarget;\n  var pointerIndex = _ref4.pointerIndex;\n\n  // copy event to be used in timeout for IE8\n  var eventCopy = browser.isIE8 ? utils.extend({}, event) : event;\n  var timers = interaction.holdTimers;\n\n  if (!timers[pointerIndex]) {\n    timers[pointerIndex] = { duration: Infinity, timeout: null };\n  }\n\n  var timer = timers[pointerIndex];\n  var path = utils.getPath(eventTarget);\n  var signalArg = {\n    interaction: interaction,\n    pointer: pointer,\n    event: event,\n    eventTarget: eventTarget,\n    eventType: 'hold',\n    targets: [],\n    path: path,\n    element: null\n  };\n\n  for (var _iterator2 = path, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n    var _ref2;\n\n    if (_isArray2) {\n      if (_i2 >= _iterator2.length) break;\n      _ref2 = _iterator2[_i2++];\n    } else {\n      _i2 = _iterator2.next();\n      if (_i2.done) break;\n      _ref2 = _i2.value;\n    }\n\n    var element = _ref2;\n\n    signalArg.element = element;\n\n    signals.fire('collect-targets', signalArg);\n  }\n\n  if (!signalArg.targets.length) {\n    return;\n  }\n\n  var minDuration = Infinity;\n\n  for (var i = 0; i < signalArg.targets.length; i++) {\n    var target = signalArg.targets[i];\n    var holdDuration = target.eventable.options.holdDuration;\n\n    if (holdDuration < minDuration) {\n      minDuration = holdDuration;\n    }\n  }\n\n  timer.duration = minDuration;\n  timer.timeout = setTimeout(function () {\n\n    collectEventTargets(interaction, browser.isIE8 ? eventCopy : pointer, eventCopy, eventTarget, 'hold');\n  }, minDuration);\n});\n\n['up', 'cancel'].forEach(function (signalName) {\n  Interaction.signals.on(signalName, function (_ref5) {\n    var interaction = _ref5.interaction;\n    var pointerIndex = _ref5.pointerIndex;\n\n    if (interaction.holdTimers[pointerIndex]) {\n      clearTimeout(interaction.holdTimers[pointerIndex].timeout);\n    }\n  });\n});\n\nfunction createSignalListener(event) {\n  return function (arg) {\n    collectEventTargets(arg.interaction, arg.pointer, arg.event, arg.eventTarget, event);\n  };\n}\n\nfor (var i = 0; i < simpleSignals.length; i++) {\n  Interaction.signals.on(simpleSignals[i], createSignalListener(simpleEvents[i]));\n}\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.prevTap = null; // the most recent tap event on this interaction\n  interaction.tapTime = 0; // time of the most recent tap event\n});\n\ndefaults.pointerEvents = {\n  holdDuration: 600,\n  ignoreFrom: null,\n  allowFrom: null,\n  origin: { x: 0, y: 0 }\n};\n\nmodule.exports = scope.pointerEvents = {\n  firePointers: firePointers,\n  collectEventTargets: collectEventTargets,\n  preventOriginalDefault: preventOriginalDefault,\n  signals: signals,\n  defaults: defaults.pointerEvents,\n  types: ['down', 'move', 'up', 'cancel', 'tap', 'doubletap', 'hold']\n};\n\n},{\"../Interaction\":5,\"../defaultOptions\":17,\"../scope\":31,\"../utils\":41,\"../utils/Signals\":32,\"../utils/arr\":33,\"../utils/browser\":34}],30:[function(require,module,exports){\nvar pointerEvents = require('./index');\nvar Interactable = require('../Interactable');\nvar browser = require('../utils/browser');\nvar isType = require('../utils/isType');\nvar domUtils = require('../utils/domUtils');\nvar scope = require('../scope');\nvar extend = require('../utils/extend');\n\nvar _require = require('../utils/arr');\n\nvar merge = _require.merge;\n\npointerEvents.signals.on('collect-targets', function (_ref) {\n  var targets = _ref.targets;\n  var element = _ref.element;\n  var eventType = _ref.eventType;\n  var eventTarget = _ref.eventTarget;\n\n  function collectSelectors(interactable, selector, context) {\n    var els = browser.useMatchesSelectorPolyfill ? context.querySelectorAll(selector) : undefined;\n\n    var eventable = interactable.events;\n    var options = eventable.options;\n\n    if (eventable[eventType] && isType.isElement(element) && domUtils.matchesSelector(element, selector, els) && interactable.testIgnoreAllow(options, element, eventTarget)) {\n\n      targets.push({\n        element: element,\n        eventable: eventable,\n        props: { interactable: interactable }\n      });\n    }\n  }\n\n  var interactable = scope.interactables.get(element);\n\n  if (interactable) {\n    var eventable = interactable.events;\n    var options = eventable.options;\n\n    if (eventable[eventType] && interactable.testIgnoreAllow(options, element, eventTarget)) {\n      targets.push({\n        element: element,\n        eventable: eventable,\n        props: { interactable: interactable }\n      });\n    }\n  }\n\n  scope.interactables.forEachSelector(collectSelectors, element);\n});\n\nInteractable.signals.on('new', function (_ref2) {\n  var interactable = _ref2.interactable;\n\n  interactable.events.getRect = function (element) {\n    return interactable.getRect(element);\n  };\n});\n\nInteractable.signals.on('set', function (_ref3) {\n  var interactable = _ref3.interactable;\n  var options = _ref3.options;\n\n  extend(interactable.events.options, pointerEvents.defaults);\n  extend(interactable.events.options, options);\n});\n\nmerge(Interactable.eventTypes, pointerEvents.types);\n\nInteractable.prototype.pointerEvents = function (options) {\n  extend(this.events.options, options);\n\n  return this;\n};\n\nvar __backCompatOption = Interactable.prototype._backCompatOption;\n\nInteractable.prototype._backCompatOption = function (optionName, newValue) {\n  var ret = __backCompatOption.call(this, optionName, newValue);\n\n  if (ret === this) {\n    this.events.options[optionName] = newValue;\n  }\n\n  return ret;\n};\n\nInteractable.settingsMethods.push('pointerEvents');\n\n},{\"../Interactable\":4,\"../scope\":31,\"../utils/arr\":33,\"../utils/browser\":34,\"../utils/domUtils\":36,\"../utils/extend\":38,\"../utils/isType\":43,\"./index\":29}],31:[function(require,module,exports){\nvar utils = require('./utils');\nvar extend = require('./utils/extend');\nvar events = require('./utils/events');\nvar signals = require('./utils/Signals')['new']();\n\nvar scope = {\n  signals: signals,\n  events: events,\n  utils: utils,\n\n  documents: [], // all documents being listened to\n\n  addDocument: function (doc, win) {\n    // do nothing if document is already known\n    if (utils.contains(scope.documents, doc)) {\n      return false;\n    }\n\n    win = win || scope.getWindow(doc);\n\n    scope.documents.push(doc);\n    events.documents.push(doc);\n\n    // don't add an unload event for the main document\n    // so that the page may be cached in browser history\n    if (doc !== scope.document) {\n      events.add(win, 'unload', scope.onWindowUnload);\n    }\n\n    signals.fire('add-document', { doc: doc, win: win });\n  },\n\n  removeDocument: function (doc, win) {\n    var index = utils.indexOf(scope.documents, doc);\n\n    win = win || scope.getWindow(doc);\n\n    events.remove(win, 'unload', scope.onWindowUnload);\n\n    scope.documents.splice(index, 1);\n    events.documents.splice(index, 1);\n\n    signals.fire('remove-document', { win: win, doc: doc });\n  },\n\n  onWindowUnload: function () {\n    scope.removeDocument(this.document, this);\n  }\n};\n\nextend(scope, require('./utils/window'));\nextend(scope, require('./utils/domObjects'));\n\nmodule.exports = scope;\n\n},{\"./utils\":41,\"./utils/Signals\":32,\"./utils/domObjects\":35,\"./utils/events\":37,\"./utils/extend\":38,\"./utils/window\":49}],32:[function(require,module,exports){\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _require = require('./arr');\n\nvar indexOf = _require.indexOf;\n\nvar Signals = (function () {\n  function Signals() {\n    _classCallCheck(this, Signals);\n\n    this.listeners = {\n      // signalName: [listeners],\n    };\n  }\n\n  Signals.prototype.on = function on(name, listener) {\n    if (!this.listeners[name]) {\n      this.listeners[name] = [listener];\n      return;\n    }\n\n    this.listeners[name].push(listener);\n  };\n\n  Signals.prototype.off = function off(name, listener) {\n    if (!this.listeners[name]) {\n      return;\n    }\n\n    var index = indexOf(this.listeners[name], listener);\n\n    if (index !== -1) {\n      this.listeners[name].splice(index, 1);\n    }\n  };\n\n  Signals.prototype.fire = function fire(name, arg) {\n    var targetListeners = this.listeners[name];\n\n    if (!targetListeners) {\n      return;\n    }\n\n    for (var i = 0; i < targetListeners.length; i++) {\n      if (targetListeners[i](arg, name) === false) {\n        return;\n      }\n    }\n  };\n\n  return Signals;\n})();\n\nSignals['new'] = function () {\n  return new Signals();\n};\n\nmodule.exports = Signals;\n\n},{\"./arr\":33}],33:[function(require,module,exports){\nfunction indexOf(array, target) {\n  for (var i = 0, len = array.length; i < len; i++) {\n    if (array[i] === target) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nfunction contains(array, target) {\n  return indexOf(array, target) !== -1;\n}\n\nfunction merge(target, source) {\n  for (var i = 0; i < source.length; i++) {\n    target.push(source[i]);\n  }\n\n  return target;\n}\n\nfunction filter(array, test) {\n  var result = [];\n\n  for (var i = 0; i < array.length; i++) {\n    if (test(array[i])) {\n      result.push(array[i]);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = {\n  indexOf: indexOf,\n  contains: contains,\n  merge: merge,\n  filter: filter\n};\n\n},{}],34:[function(require,module,exports){\nvar win = require('./window');\nvar isType = require('./isType');\nvar domObjects = require('./domObjects');\n\nvar browser = {\n  // Does the browser support touch input?\n  supportsTouch: !!('ontouchstart' in win.window || isType.isFunction(win.window.DocumentTouch) && domObjects.document instanceof win.DocumentTouch),\n\n  // Does the browser support PointerEvents\n  supportsPointerEvent: !!domObjects.PointerEvent,\n\n  isIE8: 'attachEvent' in win.window && !('addEventListener' in win.window),\n\n  // Opera Mobile must be handled differently\n  isOperaMobile: navigator.appName === 'Opera' && browser.supportsTouch && navigator.userAgent.match('Presto'),\n\n  // scrolling doesn't change the result of getClientRects on iOS 7\n  isIOS7: /iP(hone|od|ad)/.test(navigator.platform) && /OS 7[^\\d]/.test(navigator.appVersion),\n\n  isIe9OrOlder: /MSIE (8|9)/.test(navigator.userAgent),\n\n  // prefix matchesSelector\n  prefixedMatchesSelector: 'matches' in Element.prototype ? 'matches' : 'webkitMatchesSelector' in Element.prototype ? 'webkitMatchesSelector' : 'mozMatchesSelector' in Element.prototype ? 'mozMatchesSelector' : 'oMatchesSelector' in Element.prototype ? 'oMatchesSelector' : 'msMatchesSelector',\n\n  useMatchesSelectorPolyfill: false,\n\n  pEventTypes: domObjects.PointerEvent ? domObjects.PointerEvent === win.window.MSPointerEvent ? {\n    up: 'MSPointerUp',\n    down: 'MSPointerDown',\n    over: 'mouseover',\n    out: 'mouseout',\n    move: 'MSPointerMove',\n    cancel: 'MSPointerCancel'\n  } : {\n    up: 'pointerup',\n    down: 'pointerdown',\n    over: 'pointerover',\n    out: 'pointerout',\n    move: 'pointermove',\n    cancel: 'pointercancel'\n  } : null,\n\n  // because Webkit and Opera still use 'mousewheel' event type\n  wheelEvent: 'onmousewheel' in domObjects.document ? 'mousewheel' : 'wheel'\n\n};\n\nbrowser.useMatchesSelectorPolyfill = !isType.isFunction(Element.prototype[browser.prefixedMatchesSelector]);\n\nmodule.exports = browser;\n\n},{\"./domObjects\":35,\"./isType\":43,\"./window\":49}],35:[function(require,module,exports){\nvar domObjects = {};\nvar win = require('./window').window;\n\nfunction blank() {}\n\ndomObjects.document = win.document;\ndomObjects.DocumentFragment = win.DocumentFragment || blank;\ndomObjects.SVGElement = win.SVGElement || blank;\ndomObjects.SVGSVGElement = win.SVGSVGElement || blank;\ndomObjects.SVGElementInstance = win.SVGElementInstance || blank;\ndomObjects.HTMLElement = win.HTMLElement || win.Element;\n\ndomObjects.Event = win.Event;\ndomObjects.Touch = win.Touch || blank;\ndomObjects.PointerEvent = win.PointerEvent || win.MSPointerEvent;\n\nmodule.exports = domObjects;\n\n},{\"./window\":49}],36:[function(require,module,exports){\nvar win = require('./window');\nvar browser = require('./browser');\nvar isType = require('./isType');\nvar domObjects = require('./domObjects');\n\nvar domUtils = {\n  nodeContains: function (parent, child) {\n    while (child) {\n      if (child === parent) {\n        return true;\n      }\n\n      child = child.parentNode;\n    }\n\n    return false;\n  },\n\n  closest: function (element, selector) {\n    while (isType.isElement(element)) {\n      if (domUtils.matchesSelector(element, selector)) {\n        return element;\n      }\n\n      element = domUtils.parentNode(element);\n    }\n\n    return null;\n  },\n\n  parentNode: function (node) {\n    var parent = node.parentNode;\n\n    if (isType.isDocFrag(parent)) {\n      // skip past #shado-root fragments\n      while ((parent = parent.host) && isType.isDocFrag(parent)) {\n        continue;\n      }\n\n      return parent;\n    }\n\n    return parent;\n  },\n\n  // taken from http://tanalin.com/en/blog/2012/12/matches-selector-ie8/ and modified\n  matchesSelectorPolyfill: browser.useMatchesSelectorPolyfill ? function (element, selector, elems) {\n    elems = elems || element.parentNode.querySelectorAll(selector);\n\n    for (var i = 0, len = elems.length; i < len; i++) {\n      if (elems[i] === element) {\n        return true;\n      }\n    }\n\n    return false;\n  } : null,\n\n  matchesSelector: function (element, selector, nodeList) {\n    if (browser.useMatchesSelectorPolyfill) {\n      return domUtils.matchesSelectorPolyfill(element, selector, nodeList);\n    }\n\n    // remove /deep/ from selectors if shadowDOM polyfill is used\n    if (win.window !== win.realWindow) {\n      selector = selector.replace(/\\/deep\\//g, ' ');\n    }\n\n    return element[browser.prefixedMatchesSelector](selector);\n  },\n\n  // Test for the element that's \"above\" all other qualifiers\n  indexOfDeepestElement: function (elements) {\n    var deepestZoneParents = [];\n    var dropzoneParents = [];\n    var dropzone = undefined;\n    var deepestZone = elements[0];\n    var index = deepestZone ? 0 : -1;\n    var parent = undefined;\n    var child = undefined;\n    var i = undefined;\n    var n = undefined;\n\n    for (i = 1; i < elements.length; i++) {\n      dropzone = elements[i];\n\n      // an element might belong to multiple selector dropzones\n      if (!dropzone || dropzone === deepestZone) {\n        continue;\n      }\n\n      if (!deepestZone) {\n        deepestZone = dropzone;\n        index = i;\n        continue;\n      }\n\n      // check if the deepest or current are document.documentElement or document.rootElement\n      // - if the current dropzone is, do nothing and continue\n      if (dropzone.parentNode === dropzone.ownerDocument) {\n        continue;\n      }\n      // - if deepest is, update with the current dropzone and continue to next\n      else if (deepestZone.parentNode === dropzone.ownerDocument) {\n          deepestZone = dropzone;\n          index = i;\n          continue;\n        }\n\n      if (!deepestZoneParents.length) {\n        parent = deepestZone;\n        while (parent.parentNode && parent.parentNode !== parent.ownerDocument) {\n          deepestZoneParents.unshift(parent);\n          parent = parent.parentNode;\n        }\n      }\n\n      // if this element is an svg element and the current deepest is\n      // an HTMLElement\n      if (deepestZone instanceof domObjects.HTMLElement && dropzone instanceof domObjects.SVGElement && !(dropzone instanceof domObjects.SVGSVGElement)) {\n\n        if (dropzone === deepestZone.parentNode) {\n          continue;\n        }\n\n        parent = dropzone.ownerSVGElement;\n      } else {\n        parent = dropzone;\n      }\n\n      dropzoneParents = [];\n\n      while (parent.parentNode !== parent.ownerDocument) {\n        dropzoneParents.unshift(parent);\n        parent = parent.parentNode;\n      }\n\n      n = 0;\n\n      // get (position of last common ancestor) + 1\n      while (dropzoneParents[n] && dropzoneParents[n] === deepestZoneParents[n]) {\n        n++;\n      }\n\n      var parents = [dropzoneParents[n - 1], dropzoneParents[n], deepestZoneParents[n]];\n\n      child = parents[0].lastChild;\n\n      while (child) {\n        if (child === parents[1]) {\n          deepestZone = dropzone;\n          index = i;\n          deepestZoneParents = [];\n\n          break;\n        } else if (child === parents[2]) {\n          break;\n        }\n\n        child = child.previousSibling;\n      }\n    }\n\n    return index;\n  },\n\n  matchesUpTo: function (element, selector, limit) {\n    while (isType.isElement(element)) {\n      if (domUtils.matchesSelector(element, selector)) {\n        return true;\n      }\n\n      element = domUtils.parentNode(element);\n\n      if (element === limit) {\n        return domUtils.matchesSelector(element, selector);\n      }\n    }\n\n    return false;\n  },\n\n  getActualElement: function (element) {\n    return element instanceof domObjects.SVGElementInstance ? element.correspondingUseElement : element;\n  },\n\n  getScrollXY: function (relevantWindow) {\n    relevantWindow = relevantWindow || win.window;\n    return {\n      x: relevantWindow.scrollX || relevantWindow.document.documentElement.scrollLeft,\n      y: relevantWindow.scrollY || relevantWindow.document.documentElement.scrollTop\n    };\n  },\n\n  getElementClientRect: function (element) {\n    var clientRect = element instanceof domObjects.SVGElement ? element.getBoundingClientRect() : element.getClientRects()[0];\n\n    return clientRect && {\n      left: clientRect.left,\n      right: clientRect.right,\n      top: clientRect.top,\n      bottom: clientRect.bottom,\n      width: clientRect.width || clientRect.right - clientRect.left,\n      height: clientRect.height || clientRect.bottom - clientRect.top\n    };\n  },\n\n  getElementRect: function (element) {\n    var clientRect = domUtils.getElementClientRect(element);\n\n    if (!browser.isIOS7 && clientRect) {\n      var _scroll = domUtils.getScrollXY(win.getWindow(element));\n\n      clientRect.left += _scroll.x;\n      clientRect.right += _scroll.x;\n      clientRect.top += _scroll.y;\n      clientRect.bottom += _scroll.y;\n    }\n\n    return clientRect;\n  },\n\n  getPath: function (element) {\n    var path = [];\n\n    while (element) {\n      path.push(element);\n      element = domUtils.parentNode(element);\n    }\n\n    return path;\n  }\n};\n\nmodule.exports = domUtils;\n\n},{\"./browser\":34,\"./domObjects\":35,\"./isType\":43,\"./window\":49}],37:[function(require,module,exports){\nvar arr = require('./arr');\nvar isType = require('./isType');\nvar domUtils = require('./domUtils');\nvar indexOf = arr.indexOf;\nvar contains = arr.contains;\nvar getWindow = require('./window').getWindow;\nvar pExtend = require('./pointerExtend');\n\nvar useAttachEvent = 'attachEvent' in window && !('addEventListener' in window);\nvar addEvent = useAttachEvent ? 'attachEvent' : 'addEventListener';\nvar removeEvent = useAttachEvent ? 'detachEvent' : 'removeEventListener';\nvar on = useAttachEvent ? 'on' : '';\n\nvar elements = [];\nvar targets = [];\nvar attachedListeners = [];\n\n// {\n//   type: {\n//     selectors: ['selector', ...],\n//     contexts : [document, ...],\n//     listeners: [[listener, useCapture], ...]\n//   }\n//  }\nvar delegatedEvents = {};\n\nvar documents = [];\n\nfunction add(element, type, listener, useCapture) {\n  var elementIndex = indexOf(elements, element);\n  var target = targets[elementIndex];\n\n  if (!target) {\n    target = {\n      events: {},\n      typeCount: 0\n    };\n\n    elementIndex = elements.push(element) - 1;\n    targets.push(target);\n\n    attachedListeners.push(useAttachEvent ? {\n      supplied: [],\n      wrapped: [],\n      useCount: []\n    } : null);\n  }\n\n  if (!target.events[type]) {\n    target.events[type] = [];\n    target.typeCount++;\n  }\n\n  if (!contains(target.events[type], listener)) {\n    var ret = undefined;\n\n    if (useAttachEvent) {\n      var _attachedListeners$elementIndex = attachedListeners[elementIndex];\n      var supplied = _attachedListeners$elementIndex.supplied;\n      var wrapped = _attachedListeners$elementIndex.wrapped;\n      var useCount = _attachedListeners$elementIndex.useCount;\n\n      var listenerIndex = indexOf(supplied, listener);\n\n      var wrappedListener = wrapped[listenerIndex] || function (event) {\n        if (!event.immediatePropagationStopped) {\n          event.target = event.srcElement;\n          event.currentTarget = element;\n\n          event.preventDefault = event.preventDefault || preventDef;\n          event.stopPropagation = event.stopPropagation || stopProp;\n          event.stopImmediatePropagation = event.stopImmediatePropagation || stopImmProp;\n\n          if (/mouse|click/.test(event.type)) {\n            event.pageX = event.clientX + getWindow(element).document.documentElement.scrollLeft;\n            event.pageY = event.clientY + getWindow(element).document.documentElement.scrollTop;\n          }\n\n          listener(event);\n        }\n      };\n\n      ret = element[addEvent](on + type, wrappedListener, !!useCapture);\n\n      if (listenerIndex === -1) {\n        supplied.push(listener);\n        wrapped.push(wrappedListener);\n        useCount.push(1);\n      } else {\n        useCount[listenerIndex]++;\n      }\n    } else {\n      ret = element[addEvent](type, listener, !!useCapture);\n    }\n    target.events[type].push(listener);\n\n    return ret;\n  }\n}\n\nfunction remove(element, type, listener, useCapture) {\n  var elementIndex = indexOf(elements, element);\n  var target = targets[elementIndex];\n\n  if (!target || !target.events) {\n    return;\n  }\n\n  var wrappedListener = listener;\n  var listeners = undefined;\n  var listenerIndex = undefined;\n\n  if (useAttachEvent) {\n    listeners = attachedListeners[elementIndex];\n    listenerIndex = indexOf(listeners.supplied, listener);\n    wrappedListener = listeners.wrapped[listenerIndex];\n  }\n\n  if (type === 'all') {\n    for (type in target.events) {\n      if (target.events.hasOwnProperty(type)) {\n        remove(element, type, 'all');\n      }\n    }\n    return;\n  }\n\n  if (target.events[type]) {\n    var len = target.events[type].length;\n\n    if (listener === 'all') {\n      for (var i = 0; i < len; i++) {\n        remove(element, type, target.events[type][i], !!useCapture);\n      }\n      return;\n    } else {\n      for (var i = 0; i < len; i++) {\n        if (target.events[type][i] === listener) {\n          element[removeEvent](on + type, wrappedListener, !!useCapture);\n          target.events[type].splice(i, 1);\n\n          if (useAttachEvent && listeners) {\n            listeners.useCount[listenerIndex]--;\n            if (listeners.useCount[listenerIndex] === 0) {\n              listeners.supplied.splice(listenerIndex, 1);\n              listeners.wrapped.splice(listenerIndex, 1);\n              listeners.useCount.splice(listenerIndex, 1);\n            }\n          }\n\n          break;\n        }\n      }\n    }\n\n    if (target.events[type] && target.events[type].length === 0) {\n      target.events[type] = null;\n      target.typeCount--;\n    }\n  }\n\n  if (!target.typeCount) {\n    targets.splice(elementIndex, 1);\n    elements.splice(elementIndex, 1);\n    attachedListeners.splice(elementIndex, 1);\n  }\n}\n\nfunction addDelegate(selector, context, type, listener, useCapture) {\n  if (!delegatedEvents[type]) {\n    delegatedEvents[type] = {\n      selectors: [],\n      contexts: [],\n      listeners: []\n    };\n\n    // add delegate listener functions\n    for (var i = 0; i < documents.length; i++) {\n      add(documents[i], type, delegateListener);\n      add(documents[i], type, delegateUseCapture, true);\n    }\n  }\n\n  var delegated = delegatedEvents[type];\n  var index = undefined;\n\n  for (index = delegated.selectors.length - 1; index >= 0; index--) {\n    if (delegated.selectors[index] === selector && delegated.contexts[index] === context) {\n      break;\n    }\n  }\n\n  if (index === -1) {\n    index = delegated.selectors.length;\n\n    delegated.selectors.push(selector);\n    delegated.contexts.push(context);\n    delegated.listeners.push([]);\n  }\n\n  // keep listener and useCapture flag\n  delegated.listeners[index].push([listener, useCapture]);\n}\n\nfunction removeDelegate(selector, context, type, listener, useCapture) {\n  var delegated = delegatedEvents[type];\n  var matchFound = false;\n  var index = undefined;\n\n  if (!delegated) {\n    return;\n  }\n\n  // count from last index of delegated to 0\n  for (index = delegated.selectors.length - 1; index >= 0; index--) {\n    // look for matching selector and context Node\n    if (delegated.selectors[index] === selector && delegated.contexts[index] === context) {\n\n      var listeners = delegated.listeners[index];\n\n      // each item of the listeners array is an array: [function, useCaptureFlag]\n      for (var i = listeners.length - 1; i >= 0; i--) {\n        var fn = listeners[i][0];\n        var useCap = listeners[i][1];\n\n        // check if the listener functions and useCapture flags match\n        if (fn === listener && useCap === useCapture) {\n          // remove the listener from the array of listeners\n          listeners.splice(i, 1);\n\n          // if all listeners for this interactable have been removed\n          // remove the interactable from the delegated arrays\n          if (!listeners.length) {\n            delegated.selectors.splice(index, 1);\n            delegated.contexts.splice(index, 1);\n            delegated.listeners.splice(index, 1);\n\n            // remove delegate function from context\n            remove(context, type, delegateListener);\n            remove(context, type, delegateUseCapture, true);\n\n            // remove the arrays if they are empty\n            if (!delegated.selectors.length) {\n              delegatedEvents[type] = null;\n            }\n          }\n\n          // only remove one listener\n          matchFound = true;\n          break;\n        }\n      }\n\n      if (matchFound) {\n        break;\n      }\n    }\n  }\n}\n\n// bound to the interactable context when a DOM event\n// listener is added to a selector interactable\nfunction delegateListener(event, useCapture) {\n  var fakeEvent = {};\n  var delegated = delegatedEvents[event.type];\n  var eventTarget = domUtils.getActualElement(event.path ? event.path[0] : event.target);\n  var element = eventTarget;\n\n  useCapture = useCapture ? true : false;\n\n  // duplicate the event so that currentTarget can be changed\n  pExtend(fakeEvent, event);\n\n  fakeEvent.originalEvent = event;\n  fakeEvent.preventDefault = preventOriginalDefault;\n\n  // climb up document tree looking for selector matches\n  while (isType.isElement(element)) {\n    for (var i = 0; i < delegated.selectors.length; i++) {\n      var selector = delegated.selectors[i];\n      var context = delegated.contexts[i];\n\n      if (domUtils.matchesSelector(element, selector) && domUtils.nodeContains(context, eventTarget) && domUtils.nodeContains(context, element)) {\n\n        var listeners = delegated.listeners[i];\n\n        fakeEvent.currentTarget = element;\n\n        for (var j = 0; j < listeners.length; j++) {\n          if (listeners[j][1] === useCapture) {\n            listeners[j][0](fakeEvent);\n          }\n        }\n      }\n    }\n\n    element = domUtils.parentNode(element);\n  }\n}\n\nfunction delegateUseCapture(event) {\n  return delegateListener.call(this, event, true);\n}\n\nfunction preventDef() {\n  this.returnValue = false;\n}\n\nfunction preventOriginalDefault() {\n  this.originalEvent.preventDefault();\n}\n\nfunction stopProp() {\n  this.cancelBubble = true;\n}\n\nfunction stopImmProp() {\n  this.cancelBubble = true;\n  this.immediatePropagationStopped = true;\n}\n\nmodule.exports = {\n  add: add,\n  remove: remove,\n\n  addDelegate: addDelegate,\n  removeDelegate: removeDelegate,\n\n  delegateListener: delegateListener,\n  delegateUseCapture: delegateUseCapture,\n  delegatedEvents: delegatedEvents,\n  documents: documents,\n\n  useAttachEvent: useAttachEvent,\n\n  _elements: elements,\n  _targets: targets,\n  _attachedListeners: attachedListeners\n};\n\n},{\"./arr\":33,\"./domUtils\":36,\"./isType\":43,\"./pointerExtend\":45,\"./window\":49}],38:[function(require,module,exports){\nmodule.exports = function extend(dest, source) {\n  for (var prop in source) {\n    dest[prop] = source[prop];\n  }\n  return dest;\n};\n\n},{}],39:[function(require,module,exports){\nvar _require = require('./domUtils');\n\nvar closest = _require.closest;\nvar parentNode = _require.parentNode;\nvar getElementRect = _require.getElementRect;\n\nvar _require2 = require('./isType');\n\nvar isElement = _require2.isElement;\nvar isFunction = _require2.isFunction;\nvar trySelector = _require2.trySelector;\n\nmodule.exports = function (target, element, action) {\n  var origin = action ? target.options[action].origin : target.options.origin;\n\n  if (origin === 'parent') {\n    origin = parentNode(element);\n  } else if (origin === 'self') {\n    origin = target.getRect(element);\n  } else if (trySelector(origin)) {\n    origin = closest(element, origin) || { x: 0, y: 0 };\n  }\n\n  if (isFunction(origin)) {\n    origin = origin(target && element);\n  }\n\n  if (isElement(origin)) {\n    origin = getElementRect(origin);\n  }\n\n  origin.x = 'x' in origin ? origin.x : origin.left;\n  origin.y = 'y' in origin ? origin.y : origin.top;\n\n  return origin;\n};\n\n},{\"./domUtils\":36,\"./isType\":43}],40:[function(require,module,exports){\nmodule.exports = function (x, y) {\n  return Math.sqrt(x * x + y * y);\n};\n\n},{}],41:[function(require,module,exports){\nvar extend = require('./extend');\nvar win = require('./window');\n\nvar utils = {\n  warnOnce: function (method, message) {\n    var warned = false;\n\n    return function () {\n      if (!warned) {\n        win.window.console.warn(message);\n        warned = true;\n      }\n\n      return method.apply(this, arguments);\n    };\n  },\n\n  // http://stackoverflow.com/a/5634528/2280888\n  _getQBezierValue: function (t, p1, p2, p3) {\n    var iT = 1 - t;\n    return iT * iT * p1 + 2 * iT * t * p2 + t * t * p3;\n  },\n\n  getQuadraticCurvePoint: function (startX, startY, cpX, cpY, endX, endY, position) {\n    return {\n      x: utils._getQBezierValue(position, startX, cpX, endX),\n      y: utils._getQBezierValue(position, startY, cpY, endY)\n    };\n  },\n\n  // http://gizma.com/easing/\n  easeOutQuad: function (t, b, c, d) {\n    t /= d;\n    return -c * t * (t - 2) + b;\n  },\n\n  copyAction: function (dest, src) {\n    dest.name = src.name;\n    dest.axis = src.axis;\n    dest.edges = src.edges;\n\n    return dest;\n  },\n\n  getStringOptionResult: function (value, interactable, element) {\n    if (!utils.isString(value)) {\n      return null;\n    }\n\n    if (value === 'parent') {\n      value = utils.parentNode(element);\n    } else if (value === 'self') {\n      value = interactable.getRect(element);\n    } else {\n      value = utils.closest(element, value);\n    }\n\n    return value;\n  },\n\n  extend: extend,\n  hypot: require('./hypot'),\n  getOriginXY: require('./getOriginXY')\n};\n\nextend(utils, require('./arr'));\nextend(utils, require('./isType'));\nextend(utils, require('./domUtils'));\nextend(utils, require('./pointerUtils'));\n\nmodule.exports = utils;\n\n},{\"./arr\":33,\"./domUtils\":36,\"./extend\":38,\"./getOriginXY\":39,\"./hypot\":40,\"./isType\":43,\"./pointerUtils\":46,\"./window\":49}],42:[function(require,module,exports){\nvar scope = require('../scope');\nvar utils = require('./index');\nvar browser = require('./browser');\n\nvar finder = {\n  methodOrder: ['simulationResume', 'mouse', 'hasPointer', 'idle'],\n\n  search: function (pointer, eventType, eventTarget) {\n    var mouseEvent = /mouse/i.test(pointer.pointerType || eventType)\n    // MSPointerEvent.MSPOINTER_TYPE_MOUSE\n     || pointer.pointerType === 4;\n    var pointerId = utils.getPointerId(pointer);\n    var details = { pointer: pointer, pointerId: pointerId, mouseEvent: mouseEvent, eventType: eventType, eventTarget: eventTarget };\n\n    for (var _iterator = finder.methodOrder, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var method = _ref;\n\n      var interaction = finder[method](details);\n\n      if (interaction) {\n        return interaction;\n      }\n    }\n  },\n\n  // try to resume simulation with a new pointer\n  simulationResume: function (_ref7) {\n    var mouseEvent = _ref7.mouseEvent;\n    var eventType = _ref7.eventType;\n    var eventTarget = _ref7.eventTarget;\n\n    if (!/down|start/i.test(eventType)) {\n      return null;\n    }\n\n    for (var _iterator2 = scope.interactions, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray2) {\n        if (_i2 >= _iterator2.length) break;\n        _ref2 = _iterator2[_i2++];\n      } else {\n        _i2 = _iterator2.next();\n        if (_i2.done) break;\n        _ref2 = _i2.value;\n      }\n\n      var interaction = _ref2;\n\n      var element = eventTarget;\n\n      if (interaction.simulation && interaction.simulation.allowResume && interaction.mouse === mouseEvent) {\n        while (element) {\n          // if the element is the interaction element\n          if (element === interaction.element) {\n            return interaction;\n          }\n          element = utils.parentNode(element);\n        }\n      }\n    }\n\n    return null;\n  },\n\n  // if it's a mouse interaction\n  mouse: function (_ref8) {\n    var pointerId = _ref8.pointerId;\n    var mouseEvent = _ref8.mouseEvent;\n    var eventType = _ref8.eventType;\n\n    if (!mouseEvent && (browser.supportsTouch || browser.supportsPointerEvent)) {\n      return null;\n    }\n\n    var firstNonActive = undefined;\n\n    for (var _iterator3 = scope.interactions, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {\n      var _ref3;\n\n      if (_isArray3) {\n        if (_i3 >= _iterator3.length) break;\n        _ref3 = _iterator3[_i3++];\n      } else {\n        _i3 = _iterator3.next();\n        if (_i3.done) break;\n        _ref3 = _i3.value;\n      }\n\n      var interaction = _ref3;\n\n      if (interaction.mouse) {\n        // if it's a down event, skip interactions with running simulations\n        if (interaction.simulation && !utils.contains(interaction.pointerIds, pointerId)) {\n          continue;\n        }\n\n        // if the interaction is active, return it immediately\n        if (interaction.interacting()) {\n          return interaction;\n        }\n        // otherwise save it and look for another active interaction\n        else if (!firstNonActive) {\n            firstNonActive = interaction;\n          }\n      }\n    }\n\n    // if no active mouse interaction was found use the first inactive mouse\n    // interaction\n    if (firstNonActive) {\n      return firstNonActive;\n    }\n\n    // Find any interaction specifically for mouse.\n    // ignore the interaction if the eventType is a mousedown, and a simulation\n    // is active\n    for (var _iterator4 = scope.interactions, _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : _iterator4[Symbol.iterator]();;) {\n      var _ref4;\n\n      if (_isArray4) {\n        if (_i4 >= _iterator4.length) break;\n        _ref4 = _iterator4[_i4++];\n      } else {\n        _i4 = _iterator4.next();\n        if (_i4.done) break;\n        _ref4 = _i4.value;\n      }\n\n      var interaction = _ref4;\n\n      if (interaction.mouse && !(/down/.test(eventType) && interaction.simulation)) {\n        return interaction;\n      }\n    }\n\n    return null;\n  },\n\n  // get interaction that has this pointer\n  hasPointer: function (_ref9) {\n    var pointerId = _ref9.pointerId;\n\n    for (var _iterator5 = scope.interactions, _isArray5 = Array.isArray(_iterator5), _i5 = 0, _iterator5 = _isArray5 ? _iterator5 : _iterator5[Symbol.iterator]();;) {\n      var _ref5;\n\n      if (_isArray5) {\n        if (_i5 >= _iterator5.length) break;\n        _ref5 = _iterator5[_i5++];\n      } else {\n        _i5 = _iterator5.next();\n        if (_i5.done) break;\n        _ref5 = _i5.value;\n      }\n\n      var interaction = _ref5;\n\n      if (utils.contains(interaction.pointerIds, pointerId)) {\n        return interaction;\n      }\n    }\n  },\n\n  // get first idle interaction\n  idle: function (_ref10) {\n    var mouseEvent = _ref10.mouseEvent;\n\n    for (var _iterator6 = scope.interactions, _isArray6 = Array.isArray(_iterator6), _i6 = 0, _iterator6 = _isArray6 ? _iterator6 : _iterator6[Symbol.iterator]();;) {\n      var _ref6;\n\n      if (_isArray6) {\n        if (_i6 >= _iterator6.length) break;\n        _ref6 = _iterator6[_i6++];\n      } else {\n        _i6 = _iterator6.next();\n        if (_i6.done) break;\n        _ref6 = _i6.value;\n      }\n\n      var interaction = _ref6;\n\n      // if there's already a pointer held down\n      if (interaction.pointerIds.length === 1) {\n        var target = interaction.target;\n        // don't add this pointer if there is a target interactable and it\n        // isn't gesturable\n        if (target && !target.options.gesture.enabled) {\n          continue;\n        }\n      }\n      // maximum of 2 pointers per interaction\n      else if (interaction.pointerIds.length >= 2) {\n          continue;\n        }\n\n      if (!interaction.interacting() && !(!mouseEvent && interaction.mouse)) {\n        return interaction;\n      }\n    }\n\n    return null;\n  }\n};\n\nmodule.exports = finder;\n\n},{\"../scope\":31,\"./browser\":34,\"./index\":41}],43:[function(require,module,exports){\nvar win = require('./window');\nvar isWindow = require('./isWindow');\nvar domObjects = require('./domObjects');\n\nvar isType = {\n  isElement: function (o) {\n    if (!o || typeof o !== 'object') {\n      return false;\n    }\n\n    var _window = win.getWindow(o) || win.window;\n\n    return (/object|function/.test(typeof _window.Element) ? o instanceof _window.Element //DOM2\n      : o.nodeType === 1 && typeof o.nodeName === 'string'\n    );\n  },\n\n  isArray: null,\n\n  isWindow: function (thing) {\n    return thing === win.window || isWindow(thing);\n  },\n\n  isDocFrag: function (thing) {\n    return isType.isObject(thing) && thing.nodeType === 11;\n  },\n\n  isObject: function (thing) {\n    return !!thing && typeof thing === 'object';\n  },\n\n  isFunction: function (thing) {\n    return typeof thing === 'function';\n  },\n\n  isNumber: function (thing) {\n    return typeof thing === 'number';\n  },\n\n  isBool: function (thing) {\n    return typeof thing === 'boolean';\n  },\n\n  isString: function (thing) {\n    return typeof thing === 'string';\n  },\n\n  trySelector: function (value) {\n    if (!isType.isString(value)) {\n      return false;\n    }\n\n    // an exception will be raised if it is invalid\n    domObjects.document.querySelector(value);\n    return true;\n  }\n};\n\nisType.isArray = function (thing) {\n  return isType.isObject(thing) && typeof thing.length !== 'undefined' && isType.isFunction(thing.splice);\n};\n\nmodule.exports = isType;\n\n},{\"./domObjects\":35,\"./isWindow\":44,\"./window\":49}],44:[function(require,module,exports){\nmodule.exports = function (thing) {\n  return !!(thing && thing.Window) && thing instanceof thing.Window;\n};\n\n},{}],45:[function(require,module,exports){\nfunction pointerExtend(dest, source) {\n  for (var prop in source) {\n    var prefixedPropREs = module.exports.prefixedPropREs;\n    var deprecated = false;\n\n    // skip deprecated prefixed properties\n    for (var vendor in prefixedPropREs) {\n      if (prop.indexOf(vendor) === 0 && prefixedPropREs[vendor].test(prop)) {\n        deprecated = true;\n        break;\n      }\n    }\n\n    if (!deprecated) {\n      dest[prop] = source[prop];\n    }\n  }\n  return dest;\n}\n\npointerExtend.prefixedPropREs = {\n  webkit: /(Movement[XY]|Radius[XY]|RotationAngle|Force)$/\n};\n\nmodule.exports = pointerExtend;\n\n},{}],46:[function(require,module,exports){\nvar hypot = require('./hypot');\nvar browser = require('./browser');\nvar dom = require('./domObjects');\nvar isType = require('./isType');\nvar pointerExtend = require('./pointerExtend');\n\nvar pointerUtils = {\n  copyCoords: function (dest, src) {\n    dest.page = dest.page || {};\n    dest.page.x = src.page.x;\n    dest.page.y = src.page.y;\n\n    dest.client = dest.client || {};\n    dest.client.x = src.client.x;\n    dest.client.y = src.client.y;\n\n    dest.timeStamp = src.timeStamp;\n  },\n\n  setCoordDeltas: function (targetObj, prev, cur) {\n    targetObj.page.x = cur.page.x - prev.page.x;\n    targetObj.page.y = cur.page.y - prev.page.y;\n    targetObj.client.x = cur.client.x - prev.client.x;\n    targetObj.client.y = cur.client.y - prev.client.y;\n    targetObj.timeStamp = cur.timeStamp - prev.timeStamp;\n\n    // set pointer velocity\n    var dt = Math.max(targetObj.timeStamp / 1000, 0.001);\n\n    targetObj.page.speed = hypot(targetObj.page.x, targetObj.page.y) / dt;\n    targetObj.page.vx = targetObj.page.x / dt;\n    targetObj.page.vy = targetObj.page.y / dt;\n\n    targetObj.client.speed = hypot(targetObj.client.x, targetObj.page.y) / dt;\n    targetObj.client.vx = targetObj.client.x / dt;\n    targetObj.client.vy = targetObj.client.y / dt;\n  },\n\n  isNativePointer: function (pointer) {\n    return pointer instanceof dom.Event || pointer instanceof dom.Touch;\n  },\n\n  // Get specified X/Y coords for mouse or event.touches[0]\n  getXY: function (type, pointer, xy) {\n    xy = xy || {};\n    type = type || 'page';\n\n    xy.x = pointer[type + 'X'];\n    xy.y = pointer[type + 'Y'];\n\n    return xy;\n  },\n\n  getPageXY: function (pointer, page) {\n    page = page || {};\n\n    // Opera Mobile handles the viewport and scrolling oddly\n    if (browser.isOperaMobile && pointerUtils.isNativePointer(pointer)) {\n      pointerUtils.getXY('screen', pointer, page);\n\n      page.x += window.scrollX;\n      page.y += window.scrollY;\n    } else {\n      pointerUtils.getXY('page', pointer, page);\n    }\n\n    return page;\n  },\n\n  getClientXY: function (pointer, client) {\n    client = client || {};\n\n    if (browser.isOperaMobile && pointerUtils.isNativePointer(pointer)) {\n      // Opera Mobile handles the viewport and scrolling oddly\n      pointerUtils.getXY('screen', pointer, client);\n    } else {\n      pointerUtils.getXY('client', pointer, client);\n    }\n\n    return client;\n  },\n\n  getPointerId: function (pointer) {\n    return isType.isNumber(pointer.pointerId) ? pointer.pointerId : pointer.identifier;\n  },\n\n  setCoords: function (targetObj, pointers, timeStamp) {\n    var pointer = pointers.length > 1 ? pointerUtils.pointerAverage(pointers) : pointers[0];\n\n    var tmpXY = {};\n\n    pointerUtils.getPageXY(pointer, tmpXY);\n    targetObj.page.x = tmpXY.x;\n    targetObj.page.y = tmpXY.y;\n\n    pointerUtils.getClientXY(pointer, tmpXY);\n    targetObj.client.x = tmpXY.x;\n    targetObj.client.y = tmpXY.y;\n\n    targetObj.timeStamp = isType.isNumber(timeStamp) ? timeStamp : new Date().getTime();\n  },\n\n  pointerExtend: pointerExtend,\n\n  getTouchPair: function (event) {\n    var touches = [];\n\n    // array of touches is supplied\n    if (isType.isArray(event)) {\n      touches[0] = event[0];\n      touches[1] = event[1];\n    }\n    // an event\n    else {\n        if (event.type === 'touchend') {\n          if (event.touches.length === 1) {\n            touches[0] = event.touches[0];\n            touches[1] = event.changedTouches[0];\n          } else if (event.touches.length === 0) {\n            touches[0] = event.changedTouches[0];\n            touches[1] = event.changedTouches[1];\n          }\n        } else {\n          touches[0] = event.touches[0];\n          touches[1] = event.touches[1];\n        }\n      }\n\n    return touches;\n  },\n\n  pointerAverage: function (pointers) {\n    var average = {\n      pageX: 0,\n      pageY: 0,\n      clientX: 0,\n      clientY: 0,\n      screenX: 0,\n      screenY: 0\n    };\n\n    for (var _iterator = pointers, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var pointer = _ref;\n\n      for (var prop in average) {\n        average[prop] += pointer[prop];\n      }\n    }\n    for (var prop in average) {\n      average[prop] /= pointers.length;\n    }\n\n    return average;\n  },\n\n  touchBBox: function (event) {\n    if (!event.length && !(event.touches && event.touches.length > 1)) {\n      return;\n    }\n\n    var touches = pointerUtils.getTouchPair(event);\n    var minX = Math.min(touches[0].pageX, touches[1].pageX);\n    var minY = Math.min(touches[0].pageY, touches[1].pageY);\n    var maxX = Math.max(touches[0].pageX, touches[1].pageX);\n    var maxY = Math.max(touches[0].pageY, touches[1].pageY);\n\n    return {\n      x: minX,\n      y: minY,\n      left: minX,\n      top: minY,\n      width: maxX - minX,\n      height: maxY - minY\n    };\n  },\n\n  touchDistance: function (event, deltaSource) {\n    var sourceX = deltaSource + 'X';\n    var sourceY = deltaSource + 'Y';\n    var touches = pointerUtils.getTouchPair(event);\n\n    var dx = touches[0][sourceX] - touches[1][sourceX];\n    var dy = touches[0][sourceY] - touches[1][sourceY];\n\n    return hypot(dx, dy);\n  },\n\n  touchAngle: function (event, prevAngle, deltaSource) {\n    var sourceX = deltaSource + 'X';\n    var sourceY = deltaSource + 'Y';\n    var touches = pointerUtils.getTouchPair(event);\n    var dx = touches[1][sourceX] - touches[0][sourceX];\n    var dy = touches[1][sourceY] - touches[0][sourceY];\n    var angle = 180 * Math.atan2(dy, dx) / Math.PI;\n\n    return angle;\n  }\n};\n\nmodule.exports = pointerUtils;\n\n},{\"./browser\":34,\"./domObjects\":35,\"./hypot\":40,\"./isType\":43,\"./pointerExtend\":45}],47:[function(require,module,exports){\nvar vendors = ['ms', 'moz', 'webkit', 'o'];\nvar lastTime = 0;\nvar request = undefined;\nvar cancel = undefined;\n\nfor (var x = 0; x < vendors.length && !window.requestAnimationFrame; x++) {\n  request = window[vendors[x] + 'RequestAnimationFrame'];\n  cancel = window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];\n}\n\nif (!request) {\n  request = function (callback) {\n    var currTime = new Date().getTime();\n    var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n    var id = setTimeout(function () {\n      callback(currTime + timeToCall);\n    }, timeToCall);\n\n    lastTime = currTime + timeToCall;\n    return id;\n  };\n}\n\nif (!cancel) {\n  cancel = function (id) {\n    clearTimeout(id);\n  };\n}\n\nmodule.exports = {\n  request: request,\n  cancel: cancel\n};\n\n},{}],48:[function(require,module,exports){\nvar extend = require('./extend');\n\nmodule.exports = {\n  xywhToTlbr: function (rect) {\n    if (rect && !('left' in rect && 'top' in rect)) {\n      rect = extend({}, rect);\n\n      rect.left = rect.x || 0;\n      rect.top = rect.y || 0;\n      rect.right = rect.right || rect.left + rect.width;\n      rect.bottom = rect.bottom || rect.top + rect.height;\n    }\n\n    return rect;\n  },\n\n  tlbrToXywh: function (rect) {\n    if (rect && !('x' in rect && 'y' in rect)) {\n      rect = extend({}, rect);\n\n      rect.x = rect.left || 0;\n      rect.top = rect.top || 0;\n      rect.width = rect.width || rect.right - rect.x;\n      rect.height = rect.height || rect.bottom - rect.y;\n    }\n\n    return rect;\n  }\n};\n\n},{\"./extend\":38}],49:[function(require,module,exports){\nvar win = module.exports;\nvar isWindow = require('./isWindow');\n\nfunction init(window) {\n  // get wrapped window if using Shadow DOM polyfill\n\n  win.realWindow = window;\n\n  // create a TextNode\n  var el = window.document.createTextNode('');\n\n  // check if it's wrapped by a polyfill\n  if (el.ownerDocument !== window.document && typeof window.wrap === 'function' && window.wrap(el) === el) {\n    // return wrapped window\n    win.window = window.wrap(window);\n  }\n\n  // no Shadow DOM polyfil or native implementation\n  win.window = window;\n}\n\nif (typeof window === 'undefined') {\n  win.window = undefined;\n  win.realWindow = undefined;\n} else {\n  init(window);\n}\n\nwin.getWindow = function getWindow(node) {\n  if (isWindow(node)) {\n    return node;\n  }\n\n  var rootNode = node.ownerDocument || node;\n\n  return rootNode.defaultView || rootNode.parentWindow || win.window;\n};\n\nwin.init = init;\n\n},{\"./isWindow\":44}]},{},[1])(1)\n});\n\n","const { indexOf } = require('./utils/arr');\nconst extend = require('./utils/extend.js');\n\nfunction fireUntilImmediateStopped (event, listeners) {\n  for (let i = 0, len = listeners.length; i < len && !event.immediatePropagationStopped; i++) {\n    listeners[i](event);\n  }\n}\n\nclass Eventable {\n\n  constructor (options) {\n    this.options = extend({}, options || {});\n  }\n\n  fire (event) {\n    let listeners;\n    const onEvent = 'on' + event.type;\n    const global = this.global;\n\n    // Interactable#on() listeners\n    if ((listeners = this[event.type])) {\n      fireUntilImmediateStopped(event, listeners);\n    }\n\n    // interactable.onevent listener\n    if (this[onEvent]) {\n      this[onEvent](event);\n    }\n\n    // interact.on() listeners\n    if (!event.propagationStopped && global && (listeners = global[event.type]))  {\n      fireUntilImmediateStopped(event, listeners);\n    }\n  }\n\n  on (eventType, listener) {\n    // if this type of event was never bound\n    if (!(eventType in this)) {\n      this[eventType] = [listener];\n    }\n    else {\n      this[eventType].push(listener);\n    }\n  }\n\n  off (eventType, listener) {\n    // if it is an action event type\n    const eventList = this[eventType];\n    const index     = eventList? indexOf(eventList, listener) : -1;\n\n    if (index !== -1) {\n      this[eventType].splice(index, 1);\n    }\n  }\n}\n\nmodule.exports = Eventable;\n","const extend      = require('./utils/extend');\nconst getOriginXY = require('./utils/getOriginXY');\nconst defaults    = require('./defaultOptions');\nconst signals     = require('./utils/Signals').new();\n\nclass InteractEvent {\n  constructor (interaction, event, action, phase, element, related) {\n    const target      = interaction.target;\n    const deltaSource = (target && target.options || defaults).deltaSource;\n    const origin      = getOriginXY(target, element, action);\n    const starting    = phase === 'start';\n    const ending      = phase === 'end';\n    const coords      = starting? interaction.startCoords : interaction.curCoords;\n    const prevEvent   = interaction.prevEvent;\n\n    element = element || interaction.element;\n\n    const page   = extend({}, coords.page);\n    const client = extend({}, coords.client);\n\n    page.x -= origin.x;\n    page.y -= origin.y;\n\n    client.x -= origin.x;\n    client.y -= origin.y;\n\n    this.ctrlKey       = event.ctrlKey;\n    this.altKey        = event.altKey;\n    this.shiftKey      = event.shiftKey;\n    this.metaKey       = event.metaKey;\n    this.button        = event.button;\n    this.buttons       = event.buttons;\n    this.target        = element;\n    this.currentTarget = element;\n    this.relatedTarget = related || null;\n    this.type          = action + (phase || '');\n    this.interaction   = interaction;\n    this.interactable  = target;\n\n    this.t0 = starting ? interaction.downTimes[interaction.downTimes.length - 1]\n                       : prevEvent.t0;\n\n    const signalArg = {\n      interaction,\n      event,\n      action,\n      phase,\n      element,\n      related,\n      page,\n      client,\n      coords,\n      starting,\n      ending,\n      deltaSource,\n      iEvent: this,\n    };\n\n    signals.fire('set-xy', signalArg);\n\n    if (ending) {\n      // use previous coords when ending\n      this.pageX = prevEvent.pageX;\n      this.pageY = prevEvent.pageY;\n      this.clientX = prevEvent.clientX;\n      this.clientY = prevEvent.clientY;\n    }\n    else {\n      this.pageX     = page.x;\n      this.pageY     = page.y;\n      this.clientX   = client.x;\n      this.clientY   = client.y;\n    }\n\n    this.x0        = interaction.startCoords.page.x - origin.x;\n    this.y0        = interaction.startCoords.page.y - origin.y;\n    this.clientX0  = interaction.startCoords.client.x - origin.x;\n    this.clientY0  = interaction.startCoords.client.y - origin.y;\n\n    signals.fire('set-delta', signalArg);\n\n    this.timeStamp = coords.timeStamp;\n    this.dt        = interaction.pointerDelta.timeStamp;\n    this.duration  = this.timeStamp - this.t0;\n\n    // speed and velocity in pixels per second\n    this.speed = interaction.pointerDelta[deltaSource].speed;\n    this.velocityX = interaction.pointerDelta[deltaSource].vx;\n    this.velocityY = interaction.pointerDelta[deltaSource].vy;\n\n    this.swipe = (ending || phase === 'inertiastart')? this.getSwipe() : null;\n\n    signals.fire('new', signalArg);\n  }\n\n  getSwipe () {\n    const interaction = this.interaction;\n\n    if (interaction.prevEvent.speed < 600\n        || this.timeStamp - interaction.prevEvent.timeStamp > 150) {\n      return null;\n    }\n\n    let angle = 180 * Math.atan2(interaction.prevEvent.velocityY, interaction.prevEvent.velocityX) / Math.PI;\n    const overlap = 22.5;\n\n    if (angle < 0) {\n      angle += 360;\n    }\n\n    const left = 135 - overlap <= angle && angle < 225 + overlap;\n    const up   = 225 - overlap <= angle && angle < 315 + overlap;\n\n    const right = !left && (315 - overlap <= angle || angle <  45 + overlap);\n    const down  = !up   &&   45 - overlap <= angle && angle < 135 + overlap;\n\n    return {\n      up,\n      down,\n      left,\n      right,\n      angle,\n      speed: interaction.prevEvent.speed,\n      velocity: {\n        x: interaction.prevEvent.velocityX,\n        y: interaction.prevEvent.velocityY,\n      },\n    };\n  }\n\n  preventDefault () {}\n\n  stopImmediatePropagation () {\n    this.immediatePropagationStopped = this.propagationStopped = true;\n  }\n\n  stopPropagation () {\n    this.propagationStopped = true;\n  }\n}\n\nsignals.on('set-delta', function ({ iEvent, interaction, starting, deltaSource }) {\n  const prevEvent = starting? iEvent : interaction.prevEvent;\n\n  if (deltaSource === 'client') {\n    iEvent.dx = iEvent.clientX - prevEvent.clientX;\n    iEvent.dy = iEvent.clientY - prevEvent.clientY;\n  }\n  else {\n    iEvent.dx = iEvent.pageX - prevEvent.pageX;\n    iEvent.dy = iEvent.pageY - prevEvent.pageY;\n  }\n});\n\nInteractEvent.signals = signals;\n\nmodule.exports = InteractEvent;\n","const isType    = require('./utils/isType');\nconst events    = require('./utils/events');\nconst extend    = require('./utils/extend');\nconst domUtils  = require('./utils/domUtils');\nconst actions   = require('./actions');\nconst scope     = require('./scope');\nconst Eventable = require('./Eventable');\nconst defaults  = require('./defaultOptions');\nconst signals   = require('./utils/Signals').new();\n\nconst { getElementRect, nodeContains } = require('./utils/domUtils');\nconst { indexOf, contains }            = require('./utils/arr');\nconst { wheelEvent }                   = require('./utils/browser');\n\n// all set interactables\nscope.interactables = [];\n\n/*\\\n * Interactable\n [ property ]\n **\n * Object type returned by @interact\n\\*/\nclass Interactable {\n  constructor (target, options) {\n    options = options || {};\n\n    this.target   = target;\n    this.events   = new Eventable();\n    this._context = options.context || scope.document;\n    this._win     = scope.getWindow(isType.trySelector(target)? this._context : target);\n    this._doc     = this._win.document;\n\n    signals.fire('new', {\n      target,\n      options,\n      interactable: this,\n      win: this._win,\n    });\n\n    scope.addDocument( this._doc, this._win );\n\n    scope.interactables.push(this);\n\n    this.set(options);\n  }\n\n  setOnEvents (action, phases) {\n    const onAction = 'on' + action;\n\n    if (isType.isFunction(phases.onstart)       ) { this.events[onAction + 'start'        ] = phases.onstart         ; }\n    if (isType.isFunction(phases.onmove)        ) { this.events[onAction + 'move'         ] = phases.onmove          ; }\n    if (isType.isFunction(phases.onend)         ) { this.events[onAction + 'end'          ] = phases.onend           ; }\n    if (isType.isFunction(phases.oninertiastart)) { this.events[onAction + 'inertiastart' ] = phases.oninertiastart  ; }\n\n    return this;\n  }\n\n  setPerAction (action, options) {\n    // for all the default per-action options\n    for (const option in options) {\n      // if this option exists for this action\n      if (option in defaults[action]) {\n        // if the option in the options arg is an object value\n        if (isType.isObject(options[option])) {\n          // duplicate the object\n          this.options[action][option] = extend(this.options[action][option] || {}, options[option]);\n\n          if (isType.isObject(defaults.perAction[option]) && 'enabled' in defaults.perAction[option]) {\n            this.options[action][option].enabled = options[option].enabled === false? false : true;\n          }\n        }\n        else if (isType.isBool(options[option]) && isType.isObject(defaults.perAction[option])) {\n          this.options[action][option].enabled = options[option];\n        }\n        else if (options[option] !== undefined) {\n          // or if it's not undefined, do a plain assignment\n          this.options[action][option] = options[option];\n        }\n      }\n    }\n  }\n\n  /*\\\n   * Interactable.getRect\n   [ method ]\n   *\n   * The default function to get an Interactables bounding rect. Can be\n   * overridden using @Interactable.rectChecker.\n   *\n   - element (Element) #optional The element to measure.\n   = (object) The object's bounding rectangle.\n   o {\n   o     top   : 0,\n   o     left  : 0,\n   o     bottom: 0,\n   o     right : 0,\n   o     width : 0,\n   o     height: 0\n   o }\n  \\*/\n  getRect (element) {\n    element = element || this.target;\n\n    if (isType.isString(this.target) && !(isType.isElement(element))) {\n      element = this._context.querySelector(this.target);\n    }\n\n    return getElementRect(element);\n  }\n\n  /*\\\n   * Interactable.rectChecker\n   [ method ]\n   *\n   * Returns or sets the function used to calculate the interactable's\n   * element's rectangle\n   *\n   - checker (function) #optional A function which returns this Interactable's bounding rectangle. See @Interactable.getRect\n   = (function | object) The checker function or this Interactable\n  \\*/\n  rectChecker (checker) {\n    if (isType.isFunction(checker)) {\n      this.getRect = checker;\n\n      return this;\n    }\n\n    if (checker === null) {\n      delete this.options.getRect;\n\n      return this;\n    }\n\n    return this.getRect;\n  }\n\n  _backCompatOption (optionName, newValue) {\n    if (isType.trySelector(newValue) || isType.isObject(newValue)) {\n      this.options[optionName] = newValue;\n\n      for (const action of actions.names) {\n        this.options[action][optionName] = newValue;\n      }\n\n      return this;\n    }\n\n    return this.options[optionName];\n  }\n\n  /*\\\n   * Interactable.origin\n   [ method ]\n   *\n   * Gets or sets the origin of the Interactable's element.  The x and y\n   * of the origin will be subtracted from action event coordinates.\n   *\n   - origin (object | string) #optional An object eg. { x: 0, y: 0 } or string 'parent', 'self' or any CSS selector\n   * OR\n   - origin (Element) #optional An HTML or SVG Element whose rect will be used\n   **\n   = (object) The current origin or this Interactable\n  \\*/\n  origin (newValue) {\n    return this._backCompatOption('origin', newValue);\n  }\n\n  /*\\\n   * Interactable.deltaSource\n   [ method ]\n   *\n   * Returns or sets the mouse coordinate types used to calculate the\n   * movement of the pointer.\n   *\n   - newValue (string) #optional Use 'client' if you will be scrolling while interacting; Use 'page' if you want autoScroll to work\n   = (string | object) The current deltaSource or this Interactable\n  \\*/\n  deltaSource (newValue) {\n    if (newValue === 'page' || newValue === 'client') {\n      this.options.deltaSource = newValue;\n\n      return this;\n    }\n\n    return this.options.deltaSource;\n  }\n\n  /*\\\n   * Interactable.context\n   [ method ]\n   *\n   * Gets the selector context Node of the Interactable. The default is `window.document`.\n   *\n   = (Node) The context Node of this Interactable\n   **\n  \\*/\n  context () {\n    return this._context;\n  }\n\n  inContext (element) {\n    return (this._context === element.ownerDocument\n            || nodeContains(this._context, element));\n  }\n\n  /*\\\n   * Interactable.ignoreFrom\n   [ method ]\n   *\n   * If the target of the `mousedown`, `pointerdown` or `touchstart`\n   * event or any of it's parents match the given CSS selector or\n   * Element, no drag/resize/gesture is started.\n   *\n   - newValue (string | Element | null) #optional a CSS selector string, an Element or `null` to not ignore any elements\n   = (string | Element | object) The current ignoreFrom value or this Interactable\n   **\n   | interact(element, { ignoreFrom: document.getElementById('no-action') });\n   | // or\n   | interact(element).ignoreFrom('input, textarea, a');\n  \\*/\n  ignoreFrom (newValue) {\n    return this._backCompatOption('ignoreFrom', newValue);\n  }\n\n  /*\\\n   * Interactable.allowFrom\n   [ method ]\n   *\n   * A drag/resize/gesture is started only If the target of the\n   * `mousedown`, `pointerdown` or `touchstart` event or any of it's\n   * parents match the given CSS selector or Element.\n   *\n   - newValue (string | Element | null) #optional a CSS selector string, an Element or `null` to allow from any element\n   = (string | Element | object) The current allowFrom value or this Interactable\n   **\n   | interact(element, { allowFrom: document.getElementById('drag-handle') });\n   | // or\n   | interact(element).allowFrom('.handle');\n  \\*/\n  allowFrom (newValue) {\n    return this._backCompatOption('allowFrom', newValue);\n  }\n\n  testIgnore (ignoreFrom, interactableElement, element) {\n    if (!ignoreFrom || !isType.isElement(element)) { return false; }\n\n    if (isType.isString(ignoreFrom)) {\n      return domUtils.matchesUpTo(element, ignoreFrom, interactableElement);\n    }\n    else if (isType.isElement(ignoreFrom)) {\n      return domUtils.nodeContains(ignoreFrom, element);\n    }\n\n    return false;\n  }\n\n  testAllow (allowFrom, interactableElement, element) {\n    if (!allowFrom) { return true; }\n\n    if (!isType.isElement(element)) { return false; }\n\n    if (isType.isString(allowFrom)) {\n      return domUtils.matchesUpTo(element, allowFrom, interactableElement);\n    }\n    else if (isType.isElement(allowFrom)) {\n      return domUtils.nodeContains(allowFrom, element);\n    }\n\n    return false;\n  }\n\n  testIgnoreAllow (options, interactableElement, element) {\n    return (!this.testIgnore(options.ignoreFrom, interactableElement, element)\n      && this.testAllow(options.allowFrom, interactableElement, element));\n  }\n\n  /*\\\n   * Interactable.fire\n   [ method ]\n   *\n   * Calls listeners for the given InteractEvent type bound globally\n   * and directly to this Interactable\n   *\n   - iEvent (InteractEvent) The InteractEvent object to be fired on this Interactable\n   = (Interactable) this Interactable\n  \\*/\n  fire (iEvent) {\n    this.events.fire(iEvent);\n\n    return this;\n  }\n\n  _onOffMultiple (method, eventType, listener, useCapture) {\n    if (isType.isString(eventType) && eventType.search(' ') !== -1) {\n      eventType = eventType.trim().split(/ +/);\n    }\n\n    if (isType.isArray(eventType)) {\n      for (let i = 0; i < eventType.length; i++) {\n        this[method](eventType[i], listener, useCapture);\n      }\n\n      return true;\n    }\n\n    if (isType.isObject(eventType)) {\n      for (const prop in eventType) {\n        this[method](prop, eventType[prop], listener);\n      }\n\n      return true;\n    }\n  }\n\n  /*\\\n   * Interactable.on\n   [ method ]\n   *\n   * Binds a listener for an InteractEvent, pointerEvent or DOM event.\n   *\n   - eventType  (string | array | object) The types of events to listen for\n   - listener   (function) The function event (s)\n   - useCapture (boolean) #optional useCapture flag for addEventListener\n   = (object) This Interactable\n  \\*/\n  on (eventType, listener, useCapture) {\n    // convert to boolean\n    useCapture = !!useCapture;\n\n    if (this._onOffMultiple('on', eventType, listener, useCapture)) {\n      return this;\n    }\n\n    if (eventType === 'wheel') { eventType = wheelEvent; }\n\n    if (contains(Interactable.eventTypes, eventType)) {\n      this.events.on(eventType, listener);\n    }\n    // delegated event for selector\n    else if (isType.isString(this.target)) {\n      events.addDelegate(this.target, this._context, eventType, listener, useCapture);\n    }\n    else {\n      events.add(this.target, eventType, listener, useCapture);\n    }\n\n    return this;\n  }\n\n  /*\\\n   * Interactable.off\n   [ method ]\n   *\n   * Removes an InteractEvent, pointerEvent or DOM event listener\n   *\n   - eventType  (string | array | object) The types of events that were listened for\n   - listener   (function) The listener function to be removed\n   - useCapture (boolean) #optional useCapture flag for removeEventListener\n   = (object) This Interactable\n  \\*/\n  off (eventType, listener, useCapture) {\n    // convert to boolean\n    useCapture = !!useCapture;\n\n    if (this._onOffMultiple('off', eventType, listener, useCapture)) {\n      return this;\n    }\n\n    if (eventType === 'wheel') { eventType = wheelEvent; }\n\n    // if it is an action event type\n    if (contains(Interactable.eventTypes, eventType)) {\n      this.events.on(eventType, listener);\n    }\n    // delegated event\n    else if (isType.isString(this.target)) {\n      events.removeDelegate(this.target, this._context, eventType, listener, useCapture);\n    }\n    // remove listener from this Interatable's element\n    else {\n      events.remove(this.target, eventType, listener, useCapture);\n    }\n\n    return this;\n  }\n\n  /*\\\n   * Interactable.set\n   [ method ]\n   *\n   * Reset the options of this Interactable\n   - options (object) The new settings to apply\n   = (object) This Interactable\n  \\*/\n  set (options) {\n    if (!isType.isObject(options)) {\n      options = {};\n    }\n\n    this.options = extend({}, defaults.base);\n\n    const perActions = extend({}, defaults.perAction);\n\n    for (const actionName in actions.methodDict) {\n      const methodName = actions.methodDict[actionName];\n\n      this.options[actionName] = extend({}, defaults[actionName]);\n\n      this.setPerAction(actionName, perActions);\n\n      this[methodName](options[actionName]);\n    }\n\n    for (const setting of Interactable.settingsMethods) {\n      this.options[setting] = defaults.base[setting];\n\n      if (setting in options) {\n        this[setting](options[setting]);\n      }\n    }\n\n    signals.fire('set', {\n      options,\n      interactable: this,\n    });\n\n    return this;\n  }\n\n  /*\\\n   * Interactable.unset\n   [ method ]\n   *\n   * Remove this interactable from the list of interactables and remove\n   * it's action capabilities and event listeners\n   *\n   = (object) @interact\n  \\*/\n  unset () {\n    events.remove(this.target, 'all');\n\n    if (isType.isString(this.target)) {\n      // remove delegated events\n      for (const type in events.delegatedEvents) {\n        const delegated = events.delegatedEvents[type];\n\n        if (delegated.selectors[0] === this.target\n            && delegated.contexts[0] === this._context) {\n\n          delegated.selectors.splice(0, 1);\n          delegated.contexts .splice(0, 1);\n          delegated.listeners.splice(0, 1);\n\n          // remove the arrays if they are empty\n          if (!delegated.selectors.length) {\n            delegated[type] = null;\n          }\n        }\n\n        events.remove(this._context, type, events.delegateListener);\n        events.remove(this._context, type, events.delegateUseCapture, true);\n      }\n    }\n    else {\n      events.remove(this, 'all');\n    }\n\n    signals.fire('unset', { interactable: this });\n\n    scope.interactables.splice(indexOf(scope.interactables, this), 1);\n\n    // Stop related interactions when an Interactable is unset\n    for (const interaction of scope.interactions || []) {\n      if (interaction.target === this && interaction.interacting()) {\n        interaction.stop();\n      }\n    }\n\n    return scope.interact;\n  }\n}\n\nscope.interactables.indexOfElement = function indexOfElement (target, context) {\n  context = context || scope.document;\n\n  for (let i = 0; i < this.length; i++) {\n    const interactable = this[i];\n\n    if (interactable.target === target\n        && (!isType.isString(target) || (interactable._context === context))) {\n      return i;\n    }\n  }\n  return -1;\n};\n\nscope.interactables.get = function interactableGet (element, options, dontCheckInContext) {\n  const ret = this[this.indexOfElement(element, options && options.context)];\n\n  return ret && (dontCheckInContext || ret.inContext(element))? ret : null;\n};\n\nscope.interactables.forEachSelector = function (callback, element) {\n  for (let i = 0; i < this.length; i++) {\n    const interactable = this[i];\n\n    // skip non CSS selector targets and out of context elements\n    if (!isType.isString(interactable.target)\n        || (element && !interactable.inContext(element))) {\n      continue;\n    }\n\n    const ret = callback(interactable, interactable.target, interactable._context, i, this);\n\n    if (ret !== undefined) {\n      return ret;\n    }\n  }\n};\n\n// all interact.js eventTypes\nInteractable.eventTypes = scope.eventTypes = [];\n\nInteractable.signals = signals;\n\nInteractable.settingsMethods = [ 'deltaSource', 'origin', 'preventDefault', 'rectChecker' ];\n\nmodule.exports = Interactable;\n","const scope   = require('./scope');\nconst utils   = require('./utils');\nconst events  = require('./utils/events');\nconst browser = require('./utils/browser');\nconst finder  = require('./utils/interactionFinder');\nconst signals = require('./utils/Signals').new();\n\nconst listeners   = {};\nconst methodNames = [\n  'pointerDown', 'pointerMove', 'pointerUp',\n  'updatePointer', 'removePointer',\n];\n\n// for ignoring browser's simulated mouse events\nlet prevTouchTime = 0;\n\n// all active and idle interactions\nscope.interactions = [];\n\nclass Interaction {\n  constructor () {\n    this.target        = null; // current interactable being interacted with\n    this.element       = null; // the target element of the interactable\n\n    this.prepared      = {     // action that's ready to be fired on next move event\n      name : null,\n      axis : null,\n      edges: null,\n    };\n\n    // keep track of added pointers\n    this.pointers    = [];\n    this.pointerIds  = [];\n    this.downTargets = [];\n    this.downTimes   = [];\n    this.holdTimers  = [];\n\n    // Previous native pointer move event coordinates\n    this.prevCoords = {\n      page     : { x: 0, y: 0 },\n      client   : { x: 0, y: 0 },\n      timeStamp: 0,\n    };\n    // current native pointer move event coordinates\n    this.curCoords = {\n      page     : { x: 0, y: 0 },\n      client   : { x: 0, y: 0 },\n      timeStamp: 0,\n    };\n\n    // Starting InteractEvent pointer coordinates\n    this.startCoords = {\n      page     : { x: 0, y: 0 },\n      client   : { x: 0, y: 0 },\n      timeStamp: 0,\n    };\n\n    // Change in coordinates and time of the pointer\n    this.pointerDelta = {\n      page     : { x: 0, y: 0, vx: 0, vy: 0, speed: 0 },\n      client   : { x: 0, y: 0, vx: 0, vy: 0, speed: 0 },\n      timeStamp: 0,\n    };\n\n    this.downEvent   = null;    // pointerdown/mousedown/touchstart event\n    this.downPointer = {};\n\n    this._eventTarget    = null;\n    this._curEventTarget = null;\n\n    this.prevEvent = null;      // previous action event\n\n    this.pointerIsDown   = false;\n    this.pointerWasMoved = false;\n    this._interacting    = false;\n\n    this.mouse = false;\n\n    signals.fire('new', this);\n\n    scope.interactions.push(this);\n  }\n\n  pointerDown (pointer, event, eventTarget) {\n    const pointerIndex = this.updatePointer(pointer);\n\n    this.pointerIsDown = true;\n\n    if (!this.interacting()) {\n      utils.setCoords(this.startCoords, this.pointers);\n\n      utils.copyCoords(this.curCoords , this.startCoords);\n      utils.copyCoords(this.prevCoords, this.startCoords);\n\n      this.downEvent = event;\n\n      this.downTimes[pointerIndex] = this.curCoords.timeStamp;\n      this.downTargets[pointerIndex] = eventTarget;\n\n      this.pointerWasMoved = false;\n\n      utils.pointerExtend(this.downPointer, pointer);\n    }\n\n    signals.fire('down', {\n      pointer,\n      event,\n      eventTarget,\n      pointerIndex,\n      interaction: this,\n    });\n  }\n\n  /*\\\n   * Interaction.start\n   [ method ]\n   *\n   * Start an action with the given Interactable and Element as tartgets. The\n   * action must be enabled for the target Interactable and an appropriate number\n   * of pointers must be held down - 1 for drag/resize, 2 for gesture.\n   *\n   * Use it with `interactable.<action>able({ manualStart: false })` to always\n   * [start actions manually](https://github.com/taye/interact.js/issues/114)\n   *\n   - action  (object)  The action to be performed - drag, resize, etc.\n   - target  (Interactable) The Interactable to target\n   - element (Element) The DOM Element to target\n   = (object) interact\n   **\n   | interact(target)\n   |   .draggable({\n   |     // disable the default drag start by down->move\n   |     manualStart: true\n   |   })\n   |   // start dragging after the user holds the pointer down\n   |   .on('hold', function (event) {\n   |     var interaction = event.interaction;\n   |\n   |     if (!interaction.interacting()) {\n   |       interaction.start({ name: 'drag' },\n   |                         event.interactable,\n   |                         event.currentTarget);\n   |     }\n   | });\n   \\*/\n  start (action, target, element) {\n    if (this.interacting()\n        || !this.pointerIsDown\n        || this.pointerIds.length < (action.name === 'gesture'? 2 : 1)) {\n      return;\n    }\n\n    // if this interaction had been removed after stopping\n    // add it back\n    if (utils.indexOf(scope.interactions, this) === -1) {\n      scope.interactions.push(this);\n    }\n\n    utils.copyAction(this.prepared, action);\n    this.target         = target;\n    this.element        = element;\n\n    signals.fire('action-start', {\n      interaction: this,\n      event: this.downEvent,\n    });\n  }\n\n  pointerMove (pointer, event, eventTarget) {\n    if (!this.simulation) {\n      this.updatePointer(pointer);\n      utils.setCoords(this.curCoords, this.pointers);\n    }\n\n    const duplicateMove = (this.curCoords.page.x === this.prevCoords.page.x\n                           && this.curCoords.page.y === this.prevCoords.page.y\n                           && this.curCoords.client.x === this.prevCoords.client.x\n                           && this.curCoords.client.y === this.prevCoords.client.y);\n\n    let dx;\n    let dy;\n\n    // register movement greater than pointerMoveTolerance\n    if (this.pointerIsDown && !this.pointerWasMoved) {\n      dx = this.curCoords.client.x - this.startCoords.client.x;\n      dy = this.curCoords.client.y - this.startCoords.client.y;\n\n      this.pointerWasMoved = utils.hypot(dx, dy) > Interaction.pointerMoveTolerance;\n    }\n\n    const signalArg = {\n      pointer,\n      pointerIndex: this.getPointerIndex(pointer),\n      event,\n      eventTarget,\n      dx,\n      dy,\n      duplicate: duplicateMove,\n      interaction: this,\n      interactingBeforeMove: this.interacting(),\n    };\n\n    if (!duplicateMove) {\n      // set pointer coordinate, time changes and speeds\n      utils.setCoordDeltas(this.pointerDelta, this.prevCoords, this.curCoords);\n    }\n\n    signals.fire('move', signalArg);\n\n    if (!duplicateMove) {\n      // if interacting, fire an 'action-move' signal etc\n      if (this.interacting()) {\n        this.doMove(signalArg);\n      }\n\n      if (this.pointerWasMoved) {\n        utils.copyCoords(this.prevCoords, this.curCoords);\n      }\n    }\n  }\n\n  /*\\\n   * Interaction.doMove\n   [ method ]\n   *\n   * Force a move of the current action at the same coordinates. Useful if\n   * snap/restrict has been changed and you want a movement with the new\n   * settings.\n   *\n   **\n   | interact(target)\n   |   .draggable(true)\n   |   .on('dragmove', function (event) {\n   |     if (someCondition) {\n   |       // change the snap settings\n   |       event.interactable.draggable({ snap: { targets: [] }});\n   |       // fire another move event with re-calculated snap\n   |       event.interaction.doMove();\n   |     }\n   |   });\n   \\*/\n  doMove (signalArg) {\n    signalArg = utils.extend({\n      pointer: this.pointers[0],\n      event: this.prevEvent,\n      eventTarget: this._eventTarget,\n      interaction: this,\n    }, signalArg || {});\n\n    signals.fire('before-action-move', signalArg);\n\n    if (!this._dontFireMove) {\n      signals.fire('action-move', signalArg);\n    }\n\n    this._dontFireMove = false;\n  }\n\n  // End interact move events and stop auto-scroll unless simulation is running\n  pointerUp (pointer, event, eventTarget, curEventTarget) {\n    const pointerIndex = this.getPointerIndex(pointer);\n\n    signals.fire(/cancel$/i.test(event.type)? 'cancel' : 'up', {\n      pointer,\n      pointerIndex,\n      event,\n      eventTarget,\n      curEventTarget,\n      interaction: this,\n    });\n\n    if (!this.simulation) {\n      this.end(event);\n    }\n\n    this.pointerIsDown = false;\n    this.removePointer(pointer);\n  }\n\n  /*\\\n   * Interaction.end\n   [ method ]\n   *\n   * Stop the current action and fire an end event. Inertial movement does\n   * not happen.\n   *\n   - event (PointerEvent) #optional\n   **\n   | interact(target)\n   |   .draggable(true)\n   |   .on('move', function (event) {\n   |     if (event.pageX > 1000) {\n   |       // end the current action\n   |       event.interaction.end();\n   |       // stop all further listeners from being called\n   |       event.stopImmediatePropagation();\n   |     }\n   |   });\n   \\*/\n  end (event) {\n    event = event || this.prevEvent;\n\n    if (this.interacting()) {\n      signals.fire('action-end', {\n        event,\n        interaction: this,\n      });\n    }\n\n    this.stop();\n  }\n\n  currentAction () {\n    return this._interacting? this.prepared.name: null;\n  }\n\n  interacting () {\n    return this._interacting;\n  }\n\n  stop () {\n    signals.fire('stop', { interaction: this });\n\n    if (this._interacting) {\n      signals.fire('stop-active', { interaction: this });\n      signals.fire('stop-' + this.prepared.name, { interaction: this });\n    }\n\n    this.target = this.element = null;\n\n    this.pointerIsDown = this._interacting = false;\n    this.prepared.name = this.prevEvent = null;\n  }\n\n  getPointerIndex (pointer) {\n    return this.mouse? 0 : utils.indexOf(this.pointerIds, utils.getPointerId(pointer));\n  }\n\n  updatePointer (pointer) {\n    const id = utils.getPointerId(pointer);\n    let index = this.getPointerIndex(pointer);\n\n    if (index === -1) {\n      index = this.pointerIds.length;\n    }\n\n    this.pointerIds[index] = id;\n    this.pointers[index] = pointer;\n\n    return index;\n  }\n\n  removePointer (pointer) {\n    const id = utils.getPointerId(pointer);\n    const index = this.mouse? 0 : utils.indexOf(this.pointerIds, id);\n\n    if (index === -1) { return; }\n\n    this.pointers   .splice(index, 1);\n    this.pointerIds .splice(index, 1);\n    this.downTargets.splice(index, 1);\n    this.downTimes  .splice(index, 1);\n    this.holdTimers .splice(index, 1);\n  }\n\n  _updateEventTargets (target, currentTarget) {\n    this._eventTarget    = target;\n    this._curEventTarget = currentTarget;\n  }\n}\n\nfor (let i = 0, len = methodNames.length; i < len; i++) {\n  const method = methodNames[i];\n\n  listeners[method] = doOnInteractions(method);\n}\n\nfunction doOnInteractions (method) {\n  return (function (event) {\n    const eventTarget = utils.getActualElement(event.path ? event.path[0] : event.target);\n    const curEventTarget = utils.getActualElement(event.currentTarget);\n    const matches = []; // [ [pointer, interaction], ...]\n\n    if (browser.supportsTouch && /touch/.test(event.type)) {\n      prevTouchTime = new Date().getTime();\n\n      for (let i = 0; i < event.changedTouches.length; i++) {\n        const pointer = event.changedTouches[i];\n        const interaction = finder.search(pointer, event.type, eventTarget);\n\n        matches.push([pointer, interaction || new Interaction()]);\n      }\n    }\n    else {\n      let invalidPointer = false;\n\n      if (!browser.supportsPointerEvent && /mouse/.test(event.type)) {\n        // ignore mouse events while touch interactions are active\n        for (let i = 0; i < scope.interactions.length && !invalidPointer; i++) {\n          invalidPointer = !scope.interactions[i].mouse && scope.interactions[i].pointerIsDown;\n        }\n\n        // try to ignore mouse events that are simulated by the browser\n        // after a touch event\n        invalidPointer = invalidPointer || (new Date().getTime() - prevTouchTime < 500);\n      }\n\n      if (!invalidPointer) {\n        let interaction = finder.search(event, event.type, eventTarget);\n\n        if (!interaction) {\n\n          interaction = new Interaction();\n          interaction.mouse = (/mouse/i.test(event.pointerType || event.type)\n                               // MSPointerEvent.MSPOINTER_TYPE_MOUSE\n                               || event.pointerType === 4);\n        }\n\n        matches.push([event, interaction]);\n      }\n    }\n\n    for (const [pointer, interaction] of matches) {\n      interaction._updateEventTargets(eventTarget, curEventTarget);\n      interaction[method](pointer, event, eventTarget, curEventTarget);\n    }\n  });\n}\n\nfunction endAll (event) {\n  for (let i = 0; i < scope.interactions.length; i++) {\n    const interaction = scope.interactions[i];\n\n    interaction.end(event);\n    signals.fire('endall', { event, interaction });\n  }\n}\n\nconst docEvents = { /* 'eventType': listenerFunc */ };\nconst pEventTypes = browser.pEventTypes;\n\nif (scope.PointerEvent) {\n  docEvents[pEventTypes.down  ] = listeners.pointerDown;\n  docEvents[pEventTypes.move  ] = listeners.pointerMove;\n  docEvents[pEventTypes.up    ] = listeners.pointerUp;\n  docEvents[pEventTypes.cancel] = listeners.pointerUp;\n}\nelse {\n  docEvents.mousedown   = listeners.pointerDown;\n  docEvents.mousemove   = listeners.pointerMove;\n  docEvents.mouseup     = listeners.pointerUp;\n\n  docEvents.touchstart  = listeners.pointerDown;\n  docEvents.touchmove   = listeners.pointerMove;\n  docEvents.touchend    = listeners.pointerUp;\n  docEvents.touchcancel = listeners.pointerUp;\n}\n\ndocEvents.blur = endAll;\n\nfunction onDocSignal ({ doc }, signalName) {\n  const eventMethod = signalName.indexOf('add') === 0\n    ? events.add : events.remove;\n\n  // delegate event listener\n  for (const eventType in scope.delegatedEvents) {\n    eventMethod(doc, eventType, events.delegateListener);\n    eventMethod(doc, eventType, events.delegateUseCapture, true);\n  }\n\n  for (const eventType in docEvents) {\n    eventMethod(doc, eventType, docEvents[eventType]);\n  }\n}\n\nscope.signals.on('add-document'   , onDocSignal);\nscope.signals.on('remove-document', onDocSignal);\n\nInteraction.pointerMoveTolerance = 1;\nInteraction.doOnInteractions = doOnInteractions;\nInteraction.endAll = endAll;\nInteraction.signals = signals;\nInteraction.docEvents = docEvents;\n\nscope.endAllInteractions = endAll;\n\nmodule.exports = Interaction;\n","const actions        = require('./index');\nconst utils          = require('../utils');\nconst InteractEvent  = require('../InteractEvent');\nconst Interactable   = require('../Interactable');\nconst Interaction    = require('../Interaction');\nconst defaultOptions = require('../defaultOptions');\n\nconst drag = {\n  defaults: {\n    enabled     : false,\n    mouseButtons: null,\n\n    origin    : null,\n    snap      : null,\n    restrict  : null,\n    inertia   : null,\n    autoScroll: null,\n\n    startAxis : 'xy',\n    lockAxis  : 'xy',\n  },\n\n  checker: function (pointer, event, interactable) {\n    const dragOptions = interactable.options.drag;\n\n    return dragOptions.enabled\n      ? { name: 'drag', axis: (dragOptions.lockAxis === 'start'\n                               ? dragOptions.startAxis\n                               : dragOptions.lockAxis)}\n      : null;\n  },\n\n  getCursor: function () {\n    return 'move';\n  },\n};\n\nInteraction.signals.on('action-start', function ({ interaction, event }) {\n  if (interaction.prepared.name !== 'drag') { return; }\n\n  const dragEvent = new InteractEvent(interaction, event, 'drag', 'start', interaction.element);\n\n  interaction._interacting = true;\n  interaction.target.fire(dragEvent);\n  interaction.prevEvent = dragEvent;\n});\n\nInteraction.signals.on('before-action-move', function ({ interaction }) {\n  if (interaction.prepared.name !== 'drag') { return; }\n\n  const axis = interaction.prepared.axis;\n\n  if (axis === 'x') {\n    interaction.curCoords.page.y   = interaction.startCoords.page.y;\n    interaction.curCoords.client.y = interaction.startCoords.client.y;\n\n    interaction.pointerDelta.page.speed   = Math.abs(interaction.pointerDelta.page.vx);\n    interaction.pointerDelta.client.speed = Math.abs(interaction.pointerDelta.client.vx);\n    interaction.pointerDelta.client.vy = 0;\n    interaction.pointerDelta.page.vy   = 0;\n  }\n  else if (axis === 'y') {\n    interaction.curCoords.page.x   = interaction.startCoords.page.x;\n    interaction.curCoords.client.x = interaction.startCoords.client.x;\n\n    interaction.pointerDelta.page.speed   = Math.abs(interaction.pointerDelta.page.vy);\n    interaction.pointerDelta.client.speed = Math.abs(interaction.pointerDelta.client.vy);\n    interaction.pointerDelta.client.vx = 0;\n    interaction.pointerDelta.page.vx   = 0;\n  }\n});\n\nInteraction.signals.on('action-move', function ({ interaction, event }) {\n  if (interaction.prepared.name !== 'drag') { return; }\n\n  const dragEvent = new InteractEvent(interaction, event, 'drag', 'move', interaction.element);\n\n  const axis = interaction.prepared.axis;\n\n  if (axis === 'x') {\n    dragEvent.pageY   = interaction.startCoords.page.y;\n    dragEvent.clientY = interaction.startCoords.client.y;\n    dragEvent.dy = 0;\n  }\n  else if (axis === 'y') {\n    dragEvent.pageX   = interaction.startCoords.page.x;\n    dragEvent.clientX = interaction.startCoords.client.x;\n    dragEvent.dx = 0;\n  }\n\n  interaction.target.fire(dragEvent);\n  interaction.prevEvent = dragEvent;\n\n  // if the action was ended in a dragmove listener\n  if (!interaction.interacting()) { return false; }\n});\n\nInteraction.signals.on('action-end', function ({ interaction, event }) {\n  if (interaction.prepared.name !== 'drag') { return; }\n\n  const dragEvent = new InteractEvent(interaction, event, 'drag', 'end', interaction.element);\n\n  interaction.target.fire(dragEvent);\n  interaction.prevEvent = dragEvent;\n});\n\n/*\\\n * Interactable.draggable\n [ method ]\n *\n * Gets or sets whether drag actions can be performed on the\n * Interactable\n *\n = (boolean) Indicates if this can be the target of drag events\n | var isDraggable = interact('ul li').draggable();\n * or\n - options (boolean | object) #optional true/false or An object with event listeners to be fired on drag events (object makes the Interactable draggable)\n = (object) This Interactable\n | interact(element).draggable({\n |     onstart: function (event) {},\n |     onmove : function (event) {},\n |     onend  : function (event) {},\n |\n |     // the axis in which the first movement must be\n |     // for the drag sequence to start\n |     // 'xy' by default - any direction\n |     startAxis: 'x' || 'y' || 'xy',\n |\n |     // 'xy' by default - don't restrict to one axis (move in any direction)\n |     // 'x' or 'y' to restrict movement to either axis\n |     // 'start' to restrict movement to the axis the drag started in\n |     lockAxis: 'x' || 'y' || 'xy' || 'start',\n |\n |     // max number of drags that can happen concurrently\n |     // with elements of this Interactable. Infinity by default\n |     max: Infinity,\n |\n |     // max number of drags that can target the same element+Interactable\n |     // 1 by default\n |     maxPerElement: 2\n | });\n\\*/\nInteractable.prototype.draggable = function (options) {\n  if (utils.isObject(options)) {\n    this.options.drag.enabled = options.enabled === false? false: true;\n    this.setPerAction('drag', options);\n    this.setOnEvents('drag', options);\n\n    if (/^(xy|x|y|start)$/.test(options.lockAxis)) {\n      this.options.drag.lockAxis = options.lockAxis;\n    }\n    if (/^(xy|x|y)$/.test(options.startAxis)) {\n      this.options.drag.startAxis = options.startAxis;\n    }\n\n    return this;\n  }\n\n  if (utils.isBool(options)) {\n    this.options.drag.enabled = options;\n\n    if (!options) {\n      this.ondragstart = this.ondragstart = this.ondragend = null;\n    }\n\n    return this;\n  }\n\n  return this.options.drag;\n};\n\nactions.drag = drag;\nactions.names.push('drag');\nutils.merge(Interactable.eventTypes, [\n  'dragstart',\n  'dragmove',\n  'draginertiastart',\n  'draginertiaresume',\n  'dragend',\n]);\nactions.methodDict.drag = 'draggable';\n\ndefaultOptions.drag = drag.defaults;\n\nmodule.exports = drag;\n","const actions        = require('./index');\nconst utils          = require('../utils');\nconst scope          = require('../scope');\nconst interact       = require('../interact');\nconst InteractEvent  = require('../InteractEvent');\nconst Interactable   = require('../Interactable');\nconst Interaction    = require('../Interaction');\nconst defaultOptions = require('../defaultOptions');\n\nconst drop = {\n  defaults: {\n    enabled: false,\n    accept : null,\n    overlap: 'pointer',\n  },\n};\n\nlet dynamicDrop = false;\n\nInteraction.signals.on('action-start', function ({ interaction, event }) {\n  if (interaction.prepared.name !== 'drag') { return; }\n\n  // reset active dropzones\n  interaction.activeDrops.dropzones = [];\n  interaction.activeDrops.elements  = [];\n  interaction.activeDrops.rects     = [];\n\n  interaction.dropEvents = null;\n\n  if (!interaction.dynamicDrop) {\n    setActiveDrops(interaction, interaction.element);\n  }\n\n  const dragEvent = interaction.prevEvent;\n  const dropEvents = getDropEvents(interaction, event, dragEvent);\n\n  if (dropEvents.activate) {\n    fireActiveDrops(interaction, dropEvents.activate);\n  }\n});\n\nInteractEvent.signals.on('new', function ({ interaction, iEvent, event }) {\n  if (iEvent.type !== 'dragmove' && iEvent.type !== 'dragend') { return; }\n\n  const draggableElement = interaction.element;\n  const dragEvent = iEvent;\n  const dropResult = getDrop(dragEvent, event, draggableElement);\n\n  interaction.dropTarget  = dropResult.dropzone;\n  interaction.dropElement = dropResult.element;\n\n  interaction.dropEvents = getDropEvents(interaction, event, dragEvent);\n});\n\nInteraction.signals.on('action-move', function ({ interaction }) {\n  if (interaction.prepared.name !== 'drag') { return; }\n\n  fireDropEvents(interaction, interaction.dropEvents);\n});\n\nInteraction.signals.on('action-end', function ({ interaction }) {\n  if (interaction.prepared.name === 'drag') {\n    fireDropEvents(interaction, interaction.dropEvents);\n  }\n});\n\nInteraction.signals.on('stop-drag', function ({ interaction }) {\n  interaction.activeDrops.dropzones =\n    interaction.activeDrops.elements =\n    interaction.activeDrops.rects =\n    interaction.dropEvents = null;\n});\n\nfunction collectDrops (interaction, element) {\n  const drops = [];\n  const elements = [];\n\n  element = element || interaction.element;\n\n  // collect all dropzones and their elements which qualify for a drop\n  for (const current of scope.interactables) {\n    if (!current.options.drop.enabled) { continue; }\n\n    const accept = current.options.drop.accept;\n\n    // test the draggable element against the dropzone's accept setting\n    if ((utils.isElement(accept) && accept !== element)\n        || (utils.isString(accept)\n        && !utils.matchesSelector(element, accept))) {\n\n      continue;\n    }\n\n    // query for new elements if necessary\n    const dropElements = utils.isString(current.target)\n      ? current._context.querySelectorAll(current.target)\n      : [current.target];\n\n    for (let i = 0; i < dropElements.length; i++) {\n      const currentElement = dropElements[i];\n\n      if (currentElement !== element) {\n        drops.push(current);\n        elements.push(currentElement);\n      }\n    }\n  }\n\n  return {\n    elements,\n    dropzones: drops,\n  };\n}\n\nfunction fireActiveDrops (interaction, event) {\n  let prevElement;\n\n  // loop through all active dropzones and trigger event\n  for (let i = 0; i < interaction.activeDrops.dropzones.length; i++) {\n    const current = interaction.activeDrops.dropzones[i];\n    const currentElement = interaction.activeDrops.elements [i];\n\n    // prevent trigger of duplicate events on same element\n    if (currentElement !== prevElement) {\n      // set current element as event target\n      event.target = currentElement;\n      current.fire(event);\n    }\n    prevElement = currentElement;\n  }\n}\n\n// Collect a new set of possible drops and save them in activeDrops.\n// setActiveDrops should always be called when a drag has just started or a\n// drag event happens while dynamicDrop is true\nfunction setActiveDrops (interaction, dragElement) {\n  // get dropzones and their elements that could receive the draggable\n  const possibleDrops = collectDrops(interaction, dragElement, true);\n\n  interaction.activeDrops.dropzones = possibleDrops.dropzones;\n  interaction.activeDrops.elements  = possibleDrops.elements;\n  interaction.activeDrops.rects     = [];\n\n  for (let i = 0; i < interaction.activeDrops.dropzones.length; i++) {\n    interaction.activeDrops.rects[i] =\n      interaction.activeDrops.dropzones[i].getRect(interaction.activeDrops.elements[i]);\n  }\n}\n\nfunction getDrop (dragEvent, event, dragElement) {\n  const interaction = dragEvent.interaction;\n  const validDrops = [];\n\n  if (dynamicDrop) {\n    setActiveDrops(interaction, dragElement);\n  }\n\n  // collect all dropzones and their elements which qualify for a drop\n  for (let j = 0; j < interaction.activeDrops.dropzones.length; j++) {\n    const current        = interaction.activeDrops.dropzones[j];\n    const currentElement = interaction.activeDrops.elements [j];\n    const rect           = interaction.activeDrops.rects    [j];\n\n    validDrops.push(current.dropCheck(dragEvent, event, interaction.target, dragElement, currentElement, rect)\n      ? currentElement\n      : null);\n  }\n\n  // get the most appropriate dropzone based on DOM depth and order\n  const dropIndex = utils.indexOfDeepestElement(validDrops);\n\n  return {\n    dropzone: interaction.activeDrops.dropzones[dropIndex] || null,\n    element : interaction.activeDrops.elements [dropIndex] || null,\n  };\n}\n\nfunction getDropEvents (interaction, pointerEvent, dragEvent) {\n  const dropEvents = {\n    enter     : null,\n    leave     : null,\n    activate  : null,\n    deactivate: null,\n    move      : null,\n    drop      : null,\n  };\n\n  const tmpl = {\n    dragEvent,\n    interaction,\n    target       : interaction.dropElement,\n    dropzone     : interaction.dropTarget,\n    relatedTarget: dragEvent.target,\n    draggable    : dragEvent.interactable,\n    timeStamp    : dragEvent.timeStamp,\n  };\n\n  if (interaction.dropElement !== interaction.prevDropElement) {\n    // if there was a prevDropTarget, create a dragleave event\n    if (interaction.prevDropTarget) {\n      dropEvents.leave = utils.extend({ type: 'dragleave' }, tmpl);\n\n      dragEvent.dragLeave    = dropEvents.leave.target   = interaction.prevDropElement;\n      dragEvent.prevDropzone = dropEvents.leave.dropzone = interaction.prevDropTarget;\n    }\n    // if the dropTarget is not null, create a dragenter event\n    if (interaction.dropTarget) {\n      dropEvents.enter = {\n        dragEvent,\n        interaction,\n        target       : interaction.dropElement,\n        dropzone     : interaction.dropTarget,\n        relatedTarget: dragEvent.target,\n        draggable    : dragEvent.interactable,\n        timeStamp    : dragEvent.timeStamp,\n        type         : 'dragenter',\n      };\n\n      dragEvent.dragEnter = interaction.dropElement;\n      dragEvent.dropzone = interaction.dropTarget;\n    }\n  }\n\n  if (dragEvent.type === 'dragend' && interaction.dropTarget) {\n    dropEvents.drop = utils.extend({ type: 'drop' }, tmpl);\n\n    dragEvent.dropzone = interaction.dropTarget;\n    dragEvent.relatedTarget = interaction.dropElement;\n  }\n  if (dragEvent.type === 'dragstart') {\n    dropEvents.activate = utils.extend({ type: 'dropactivate' }, tmpl);\n\n    dropEvents.activate.target   = null;\n    dropEvents.activate.dropzone = null;\n  }\n  if (dragEvent.type === 'dragend') {\n    dropEvents.deactivate = utils.extend({ type: 'dropdeactivate' }, tmpl);\n\n    dropEvents.deactivate.target   = null;\n    dropEvents.deactivate.dropzone = null;\n  }\n  if (dragEvent.type === 'dragmove' && interaction.dropTarget) {\n    dropEvents.move = utils.extend({\n      dragmove     : dragEvent,\n      type         : 'dropmove',\n    }, tmpl);\n\n    dragEvent.dropzone = interaction.dropTarget;\n  }\n\n  return dropEvents;\n}\n\nfunction fireDropEvents (interaction, dropEvents) {\n  if (dropEvents.leave) { interaction.prevDropTarget.fire(dropEvents.leave); }\n  if (dropEvents.move ) {     interaction.dropTarget.fire(dropEvents.move ); }\n  if (dropEvents.enter) {     interaction.dropTarget.fire(dropEvents.enter); }\n  if (dropEvents.drop ) {     interaction.dropTarget.fire(dropEvents.drop ); }\n  if (dropEvents.move ) {     interaction.dropTarget.fire(dropEvents.move ); }\n  if (dropEvents.deactivate) {\n    fireActiveDrops(interaction, dropEvents.deactivate);\n  }\n\n  interaction.prevDropTarget  = interaction.dropTarget;\n  interaction.prevDropElement = interaction.dropElement;\n}\n\n/*\\\n * Interactable.dropzone\n [ method ]\n *\n * Returns or sets whether elements can be dropped onto this\n * Interactable to trigger drop events\n *\n * Dropzones can receive the following events:\n *  - `dropactivate` and `dropdeactivate` when an acceptable drag starts and ends\n *  - `dragenter` and `dragleave` when a draggable enters and leaves the dropzone\n *  - `dragmove` when a draggable that has entered the dropzone is moved\n *  - `drop` when a draggable is dropped into this dropzone\n *\n * Use the `accept` option to allow only elements that match the given CSS\n * selector or element. The value can be:\n *\n *  - **an Element** - only that element can be dropped into this dropzone.\n *  - **a string**, - the element being dragged must match it as a CSS selector.\n *  - **`null`** - accept options is cleared - it accepts any element.\n *\n * Use the `overlap` option to set how drops are checked for. The allowed\n * values are:\n *\n *   - `'pointer'`, the pointer must be over the dropzone (default)\n *   - `'center'`, the draggable element's center must be over the dropzone\n *   - a number from 0-1 which is the `(intersection area) / (draggable area)`.\n *   e.g. `0.5` for drop to happen when half of the area of the draggable is\n *   over the dropzone\n *\n * Use the `checker` option to specify a function to check if a dragged\n * element is over this Interactable.\n *\n | interact(target)\n | .dropChecker(function(dragEvent,         // related dragmove or dragend event\n |                       event,             // TouchEvent/PointerEvent/MouseEvent\n |                       dropped,           // bool result of the default checker\n |                       dropzone,          // dropzone Interactable\n |                       dropElement,       // dropzone elemnt\n |                       draggable,         // draggable Interactable\n |                       draggableElement) {// draggable element\n |\n |   return dropped && event.target.hasAttribute('allow-drop');\n | }\n *\n *\n - options (boolean | object | null) #optional The new value to be set.\n | interact('.drop').dropzone({\n |   accept: '.can-drop' || document.getElementById('single-drop'),\n |   overlap: 'pointer' || 'center' || zeroToOne\n | }\n = (boolean | object) The current setting or this Interactable\n\\*/\nInteractable.prototype.dropzone = function (options) {\n  if (utils.isObject(options)) {\n    this.options.drop.enabled = options.enabled === false? false: true;\n\n    if (utils.isFunction(options.ondrop)          ) { this.events.ondrop           = options.ondrop          ; }\n    if (utils.isFunction(options.ondropactivate)  ) { this.events.ondropactivate   = options.ondropactivate  ; }\n    if (utils.isFunction(options.ondropdeactivate)) { this.events.ondropdeactivate = options.ondropdeactivate; }\n    if (utils.isFunction(options.ondragenter)     ) { this.events.ondragenter      = options.ondragenter     ; }\n    if (utils.isFunction(options.ondragleave)     ) { this.events.ondragleave      = options.ondragleave     ; }\n    if (utils.isFunction(options.ondropmove)      ) { this.events.ondropmove       = options.ondropmove      ; }\n\n    if (/^(pointer|center)$/.test(options.overlap)) {\n      this.options.drop.overlap = options.overlap;\n    }\n    else if (utils.isNumber(options.overlap)) {\n      this.options.drop.overlap = Math.max(Math.min(1, options.overlap), 0);\n    }\n    if ('accept' in options) {\n      this.options.drop.accept = options.accept;\n    }\n    if ('checker' in options) {\n      this.options.drop.checker = options.checker;\n    }\n\n\n    return this;\n  }\n\n  if (utils.isBool(options)) {\n    this.options.drop.enabled = options;\n\n    if (!options) {\n      this.ondragenter = this.ondragleave = this.ondrop\n        = this.ondropactivate = this.ondropdeactivate = null;\n    }\n\n    return this;\n  }\n\n  return this.options.drop;\n};\n\nInteractable.prototype.dropCheck = function (dragEvent, event, draggable, draggableElement, dropElement, rect) {\n  let dropped = false;\n\n  // if the dropzone has no rect (eg. display: none)\n  // call the custom dropChecker or just return false\n  if (!(rect = rect || this.getRect(dropElement))) {\n    return (this.options.drop.checker\n      ? this.options.drop.checker(dragEvent, event, dropped, this, dropElement, draggable, draggableElement)\n      : false);\n  }\n\n  const dropOverlap = this.options.drop.overlap;\n\n  if (dropOverlap === 'pointer') {\n    const origin = utils.getOriginXY(draggable, draggableElement, 'drag');\n    const page = utils.getPageXY(dragEvent);\n\n    page.x += origin.x;\n    page.y += origin.y;\n\n    const horizontal = (page.x > rect.left) && (page.x < rect.right);\n    const vertical   = (page.y > rect.top ) && (page.y < rect.bottom);\n\n    dropped = horizontal && vertical;\n  }\n\n  const dragRect = draggable.getRect(draggableElement);\n\n  if (dragRect && dropOverlap === 'center') {\n    const cx = dragRect.left + dragRect.width  / 2;\n    const cy = dragRect.top  + dragRect.height / 2;\n\n    dropped = cx >= rect.left && cx <= rect.right && cy >= rect.top && cy <= rect.bottom;\n  }\n\n  if (dragRect && utils.isNumber(dropOverlap)) {\n    const overlapArea  = (Math.max(0, Math.min(rect.right , dragRect.right ) - Math.max(rect.left, dragRect.left))\n                          * Math.max(0, Math.min(rect.bottom, dragRect.bottom) - Math.max(rect.top , dragRect.top )));\n\n    const overlapRatio = overlapArea / (dragRect.width * dragRect.height);\n\n    dropped = overlapRatio >= dropOverlap;\n  }\n\n  if (this.options.drop.checker) {\n    dropped = this.options.drop.checker(dragEvent, event, dropped, this, dropElement, draggable, draggableElement);\n  }\n\n  return dropped;\n};\n\nInteractable.signals.on('unset', function ({ interactable }) {\n  interactable.dropzone(false);\n});\n\nInteractable.settingsMethods.push('dropChecker');\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.dropTarget      = null; // the dropzone a drag target might be dropped into\n  interaction.dropElement     = null; // the element at the time of checking\n  interaction.prevDropTarget  = null; // the dropzone that was recently dragged away from\n  interaction.prevDropElement = null; // the element at the time of checking\n  interaction.dropEvents      = null; // the dropEvents related to the current drag event\n\n  interaction.activeDrops = {\n    dropzones: [],      // the dropzones that are mentioned below\n    elements : [],      // elements of dropzones that accept the target draggable\n    rects    : [],      // the rects of the elements mentioned above\n  };\n\n});\n\nInteraction.signals.on('stop', function ({ interaction }) {\n  interaction.dropTarget = interaction.dropElement =\n    interaction.prevDropTarget = interaction.prevDropElement = null;\n});\n\n/*\\\n * interact.dynamicDrop\n [ method ]\n *\n * Returns or sets whether the dimensions of dropzone elements are\n * calculated on every dragmove or only on dragstart for the default\n * dropChecker\n *\n - newValue (boolean) #optional True to check on each move. False to check only before start\n = (boolean | interact) The current setting or interact\n\\*/\ninteract.dynamicDrop = function (newValue) {\n  if (utils.isBool(newValue)) {\n    //if (dragging && dynamicDrop !== newValue && !newValue) {\n      //calcRects(dropzones);\n    //}\n\n    dynamicDrop = newValue;\n\n    return interact;\n  }\n  return dynamicDrop;\n};\n\nutils.merge(Interactable.eventTypes, [\n  'dragenter',\n  'dragleave',\n  'dropactivate',\n  'dropdeactivate',\n  'dropmove',\n  'drop',\n]);\nactions.methodDict.drop = 'dropzone';\n\ndefaultOptions.drop = drop.defaults;\n\nmodule.exports = drop;\n","const actions        = require('./index');\nconst utils          = require('../utils');\nconst InteractEvent  = require('../InteractEvent');\nconst Interactable   = require('../Interactable');\nconst Interaction    = require('../Interaction');\nconst defaultOptions = require('../defaultOptions');\n\nconst gesture = {\n  defaults: {\n    enabled : false,\n    origin  : null,\n    restrict: null,\n  },\n\n  checker: function (pointer, event, interactable, element, interaction) {\n    if (interaction.pointerIds.length >= 2) {\n      return { name: 'gesture' };\n    }\n\n    return null;\n  },\n\n  getCursor: function () {\n    return '';\n  },\n};\n\nInteraction.signals.on('action-start', function ({ interaction, event }) {\n  if (interaction.prepared.name !== 'gesture') { return; }\n\n  const gestureEvent = new InteractEvent(interaction, event, 'gesture', 'start', interaction.element);\n\n  gestureEvent.ds = 0;\n\n  interaction.gesture.startDistance = interaction.gesture.prevDistance = gestureEvent.distance;\n  interaction.gesture.startAngle = interaction.gesture.prevAngle = gestureEvent.angle;\n  interaction.gesture.scale = 1;\n\n  interaction._interacting = true;\n\n  interaction.target.fire(gestureEvent);\n  interaction.prevEvent = gestureEvent;\n});\n\nInteraction.signals.on('action-move', function ({ interaction, event }) {\n  if (interaction.prepared.name !== 'gesture') { return; }\n\n  const gestureEvent = new InteractEvent(interaction, event, 'gesture', 'move', interaction.element);\n\n  gestureEvent.ds = gestureEvent.scale - interaction.gesture.scale;\n\n  interaction.target.fire(gestureEvent);\n\n  interaction.gesture.prevAngle = gestureEvent.angle;\n  interaction.gesture.prevDistance = gestureEvent.distance;\n\n  if (gestureEvent.scale !== Infinity\n      && gestureEvent.scale !== null\n      && gestureEvent.scale !== undefined\n      && !isNaN(gestureEvent.scale)) {\n\n    interaction.gesture.scale = gestureEvent.scale;\n  }\n\n  interaction.prevEvent = gestureEvent;\n\n  // if the action was ended in a gesturemove listener\n  if (!interaction.interacting()) { return false; }\n});\n\nInteraction.signals.on('action-end', function ({ interaction, event }) {\n  if (interaction.prepared.name !== 'gesture') { return; }\n\n  const gestureEvent = new InteractEvent(interaction, event, 'gesture', 'end', interaction.element);\n\n  interaction.target.fire(gestureEvent);\n  interaction.prevEvent = gestureEvent;\n});\n\n/*\\\n * Interactable.gesturable\n [ method ]\n *\n * Gets or sets whether multitouch gestures can be performed on the\n * Interactable's element\n *\n = (boolean) Indicates if this can be the target of gesture events\n   | var isGestureable = interact(element).gesturable();\n * or\n - options (boolean | object) #optional true/false or An object with event listeners to be fired on gesture events (makes the Interactable gesturable)\n = (object) this Interactable\n | interact(element).gesturable({\n |     onstart: function (event) {},\n |     onmove : function (event) {},\n |     onend  : function (event) {},\n |\n |     // limit multiple gestures.\n |     // See the explanation in @Interactable.draggable example\n |     max: Infinity,\n |     maxPerElement: 1,\n | });\n\\*/\nInteractable.prototype.gesturable = function (options) {\n  if (utils.isObject(options)) {\n    this.options.gesture.enabled = options.enabled === false? false: true;\n    this.setPerAction('gesture', options);\n    this.setOnEvents('gesture', options);\n\n    return this;\n  }\n\n  if (utils.isBool(options)) {\n    this.options.gesture.enabled = options;\n\n    if (!options) {\n      this.ongesturestart = this.ongesturestart = this.ongestureend = null;\n    }\n\n    return this;\n  }\n\n  return this.options.gesture;\n};\n\nInteractEvent.signals.on('set-delta', function ({ interaction, iEvent, action, event, starting, ending, deltaSource }) {\n  if (action !== 'gesture') { return; }\n\n  const pointers = interaction.pointers;\n\n  iEvent.touches = [pointers[0], pointers[1]];\n\n  if (starting) {\n    iEvent.distance = utils.touchDistance(pointers, deltaSource);\n    iEvent.box      = utils.touchBBox(pointers);\n    iEvent.scale    = 1;\n    iEvent.ds       = 0;\n    iEvent.angle    = utils.touchAngle(pointers, undefined, deltaSource);\n    iEvent.da       = 0;\n  }\n  else if (ending || event instanceof InteractEvent) {\n    iEvent.distance = interaction.prevEvent.distance;\n    iEvent.box      = interaction.prevEvent.box;\n    iEvent.scale    = interaction.prevEvent.scale;\n    iEvent.ds       = iEvent.scale - 1;\n    iEvent.angle    = interaction.prevEvent.angle;\n    iEvent.da       = iEvent.angle - interaction.gesture.startAngle;\n  }\n  else {\n    iEvent.distance = utils.touchDistance(pointers, deltaSource);\n    iEvent.box      = utils.touchBBox(pointers);\n    iEvent.scale    = iEvent.distance / interaction.gesture.startDistance;\n    iEvent.angle    = utils.touchAngle(pointers, interaction.gesture.prevAngle, deltaSource);\n\n    iEvent.ds = iEvent.scale - interaction.gesture.prevScale;\n    iEvent.da = iEvent.angle - interaction.gesture.prevAngle;\n  }\n});\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.gesture = {\n    start: { x: 0, y: 0 },\n\n    startDistance: 0,   // distance between two touches of touchStart\n    prevDistance : 0,\n    distance     : 0,\n\n    scale: 1,           // gesture.distance / gesture.startDistance\n\n    startAngle: 0,      // angle of line joining two touches\n    prevAngle : 0,      // angle of the previous gesture event\n  };\n});\n\nactions.gesture = gesture;\nactions.names.push('gesture');\nutils.merge(Interactable.eventTypes, [\n  'gesturestart',\n  'gesturemove',\n  'gestureend',\n]);\nactions.methodDict.gesture = 'gesturable';\n\ndefaultOptions.gesture = gesture.defaults;\n\nmodule.exports = gesture;\n","const actions = {\n  names: [],\n  methodDict: {},\n};\n\nmodule.exports = actions;\n","const actions        = require('./index');\nconst utils          = require('../utils');\nconst browser        = require('../utils/browser');\nconst InteractEvent  = require('../InteractEvent');\nconst Interactable   = require('../Interactable');\nconst Interaction    = require('../Interaction');\nconst defaultOptions = require('../defaultOptions');\n\n// Less Precision with touch input\nconst defaultMargin = browser.supportsTouch || browser.supportsPointerEvent? 20: 10;\n\nconst resize = {\n  defaults: {\n    enabled     : false,\n    mouseButtons: null,\n\n    origin    : null,\n    snap      : null,\n    restrict  : null,\n    inertia   : null,\n    autoScroll: null,\n\n    square: false,\n    preserveAspectRatio: false,\n    axis: 'xy',\n\n    // use default margin\n    margin: NaN,\n\n    // object with props left, right, top, bottom which are\n    // true/false values to resize when the pointer is over that edge,\n    // CSS selectors to match the handles for each direction\n    // or the Elements for each handle\n    edges: null,\n\n    // a value of 'none' will limit the resize rect to a minimum of 0x0\n    // 'negate' will alow the rect to have negative width/height\n    // 'reposition' will keep the width/height positive by swapping\n    // the top and bottom edges and/or swapping the left and right edges\n    invert: 'none',\n  },\n\n  checker: function (pointer, event, interactable, element, interaction, rect) {\n    if (!rect) { return null; }\n\n    const page = utils.extend({}, interaction.curCoords.page);\n    const options = interactable.options;\n\n    if (options.resize.enabled) {\n      const resizeOptions = options.resize;\n      const resizeEdges = { left: false, right: false, top: false, bottom: false };\n\n      // if using resize.edges\n      if (utils.isObject(resizeOptions.edges)) {\n        for (const edge in resizeEdges) {\n          resizeEdges[edge] = checkResizeEdge(edge,\n                                              resizeOptions.edges[edge],\n                                              page,\n                                              interaction._eventTarget,\n                                              element,\n                                              rect,\n                                              resizeOptions.margin || defaultMargin);\n        }\n\n        resizeEdges.left = resizeEdges.left && !resizeEdges.right;\n        resizeEdges.top  = resizeEdges.top  && !resizeEdges.bottom;\n\n        if (resizeEdges.left || resizeEdges.right || resizeEdges.top || resizeEdges.bottom) {\n          return {\n            name: 'resize',\n            edges: resizeEdges,\n          };\n        }\n      }\n      else {\n        const right  = options.resize.axis !== 'y' && page.x > (rect.right  - defaultMargin);\n        const bottom = options.resize.axis !== 'x' && page.y > (rect.bottom - defaultMargin);\n\n        if (right || bottom) {\n          return {\n            name: 'resize',\n            axes: (right? 'x' : '') + (bottom? 'y' : ''),\n          };\n        }\n      }\n    }\n\n    return null;\n  },\n\n  cursors: (browser.isIe9OrOlder ? {\n    x : 'e-resize',\n    y : 's-resize',\n    xy: 'se-resize',\n\n    top        : 'n-resize',\n    left       : 'w-resize',\n    bottom     : 's-resize',\n    right      : 'e-resize',\n    topleft    : 'se-resize',\n    bottomright: 'se-resize',\n    topright   : 'ne-resize',\n    bottomleft : 'ne-resize',\n  } : {\n    x : 'ew-resize',\n    y : 'ns-resize',\n    xy: 'nwse-resize',\n\n    top        : 'ns-resize',\n    left       : 'ew-resize',\n    bottom     : 'ns-resize',\n    right      : 'ew-resize',\n    topleft    : 'nwse-resize',\n    bottomright: 'nwse-resize',\n    topright   : 'nesw-resize',\n    bottomleft : 'nesw-resize',\n  }),\n\n  getCursor: function (action) {\n    if (action.axis) {\n      return resize.cursors[action.name + action.axis];\n    }\n    else if (action.edges) {\n      let cursorKey = '';\n      const edgeNames = ['top', 'bottom', 'left', 'right'];\n\n      for (let i = 0; i < 4; i++) {\n        if (action.edges[edgeNames[i]]) {\n          cursorKey += edgeNames[i];\n        }\n      }\n\n      return resize.cursors[cursorKey];\n    }\n  },\n};\n\nInteraction.signals.on('action-start', function ({ interaction, event }) {\n  if (interaction.prepared.name !== 'resize') { return; }\n\n  const resizeEvent = new InteractEvent(interaction, event, 'resize', 'start', interaction.element);\n\n  if (interaction.prepared.edges) {\n    const startRect = interaction.target.getRect(interaction.element);\n    const resizeOptions = interaction.target.options.resize;\n\n    /*\n     * When using the `resizable.square` or `resizable.preserveAspectRatio` options, resizing from one edge\n     * will affect another. E.g. with `resizable.square`, resizing to make the right edge larger will make\n     * the bottom edge larger by the same amount. We call these 'linked' edges. Any linked edges will depend\n     * on the active edges and the edge being interacted with.\n     */\n    if (resizeOptions.square || resizeOptions.preserveAspectRatio) {\n      const linkedEdges = utils.extend({}, interaction.prepared.edges);\n\n      linkedEdges.top    = linkedEdges.top    || (linkedEdges.left   && !linkedEdges.bottom);\n      linkedEdges.left   = linkedEdges.left   || (linkedEdges.top    && !linkedEdges.right );\n      linkedEdges.bottom = linkedEdges.bottom || (linkedEdges.right  && !linkedEdges.top   );\n      linkedEdges.right  = linkedEdges.right  || (linkedEdges.bottom && !linkedEdges.left  );\n\n      interaction.prepared._linkedEdges = linkedEdges;\n    }\n    else {\n      interaction.prepared._linkedEdges = null;\n    }\n\n    // if using `resizable.preserveAspectRatio` option, record aspect ratio at the start of the resize\n    if (resizeOptions.preserveAspectRatio) {\n      interaction.resizeStartAspectRatio = startRect.width / startRect.height;\n    }\n\n    interaction.resizeRects = {\n      start     : startRect,\n      current   : utils.extend({}, startRect),\n      inverted  : utils.extend({}, startRect),\n      previous  : utils.extend({}, startRect),\n      delta     : {\n        left: 0, right : 0, width : 0,\n        top : 0, bottom: 0, height: 0,\n      },\n    };\n\n    resizeEvent.rect = interaction.resizeRects.inverted;\n    resizeEvent.deltaRect = interaction.resizeRects.delta;\n  }\n\n  interaction.target.fire(resizeEvent);\n\n  interaction._interacting = true;\n\n  interaction.prevEvent = resizeEvent;\n});\n\nInteraction.signals.on('action-move', function ({ interaction, event }) {\n  if (interaction.prepared.name !== 'resize') { return; }\n\n  const resizeEvent = new InteractEvent(interaction, event, 'resize', 'move', interaction.element);\n  const resizeOptions = interaction.target.options.resize;\n  const invert = resizeOptions.invert;\n  const invertible = invert === 'reposition' || invert === 'negate';\n\n  let edges = interaction.prepared.edges;\n\n  if (edges) {\n    const start      = interaction.resizeRects.start;\n    const current    = interaction.resizeRects.current;\n    const inverted   = interaction.resizeRects.inverted;\n    const delta      = interaction.resizeRects.delta;\n    const previous   = utils.extend(interaction.resizeRects.previous, inverted);\n    const originalEdges = edges;\n\n    let dx = resizeEvent.dx;\n    let dy = resizeEvent.dy;\n\n    if (resizeOptions.preserveAspectRatio || resizeOptions.square) {\n      // `resize.preserveAspectRatio` takes precedence over `resize.square`\n      const startAspectRatio = resizeOptions.preserveAspectRatio\n        ? interaction.resizeStartAspectRatio\n        : 1;\n\n      edges = interaction.prepared._linkedEdges;\n\n      if ((originalEdges.left && originalEdges.bottom)\n          || (originalEdges.right && originalEdges.top)) {\n        dy = -dx / startAspectRatio;\n      }\n      else if (originalEdges.left || originalEdges.right ) { dy = dx / startAspectRatio; }\n      else if (originalEdges.top  || originalEdges.bottom) { dx = dy * startAspectRatio; }\n    }\n\n    // update the 'current' rect without modifications\n    if (edges.top   ) { current.top    += dy; }\n    if (edges.bottom) { current.bottom += dy; }\n    if (edges.left  ) { current.left   += dx; }\n    if (edges.right ) { current.right  += dx; }\n\n    if (invertible) {\n      // if invertible, copy the current rect\n      utils.extend(inverted, current);\n\n      if (invert === 'reposition') {\n        // swap edge values if necessary to keep width/height positive\n        let swap;\n\n        if (inverted.top > inverted.bottom) {\n          swap = inverted.top;\n\n          inverted.top = inverted.bottom;\n          inverted.bottom = swap;\n        }\n        if (inverted.left > inverted.right) {\n          swap = inverted.left;\n\n          inverted.left = inverted.right;\n          inverted.right = swap;\n        }\n      }\n    }\n    else {\n      // if not invertible, restrict to minimum of 0x0 rect\n      inverted.top    = Math.min(current.top, start.bottom);\n      inverted.bottom = Math.max(current.bottom, start.top);\n      inverted.left   = Math.min(current.left, start.right);\n      inverted.right  = Math.max(current.right, start.left);\n    }\n\n    inverted.width  = inverted.right  - inverted.left;\n    inverted.height = inverted.bottom - inverted.top ;\n\n    for (const edge in inverted) {\n      delta[edge] = inverted[edge] - previous[edge];\n    }\n\n    resizeEvent.edges = interaction.prepared.edges;\n    resizeEvent.rect = inverted;\n    resizeEvent.deltaRect = delta;\n  }\n\n  interaction.target.fire(resizeEvent);\n\n  interaction.prevEvent = resizeEvent;\n\n  // if the action was ended in a resizemove listener\n  if (!interaction.interacting()) { return false; }\n});\n\nInteraction.signals.on('action-end', function ({ interaction, event }) {\n  if (interaction.prepared.name !== 'resize') { return; }\n\n  const resizeEvent = new InteractEvent(interaction, event, 'resize', 'end', interaction.element);\n\n  interaction.target.fire(resizeEvent);\n  interaction.prevEvent = resizeEvent;\n});\n\n/*\\\n * Interactable.resizable\n [ method ]\n *\n * Gets or sets whether resize actions can be performed on the\n * Interactable\n *\n = (boolean) Indicates if this can be the target of resize elements\n   | var isResizeable = interact('input[type=text]').resizable();\n * or\n - options (boolean | object) #optional true/false or An object with event listeners to be fired on resize events (object makes the Interactable resizable)\n = (object) This Interactable\n   | interact(element).resizable({\n   |   onstart: function (event) {},\n   |   onmove : function (event) {},\n   |   onend  : function (event) {},\n   |\n   |   edges: {\n   |     top   : true,       // Use pointer coords to check for resize.\n   |     left  : false,      // Disable resizing from left edge.\n   |     bottom: '.resize-s',// Resize if pointer target matches selector\n   |     right : handleEl    // Resize if pointer target is the given Element\n   |   },\n   |\n   |     // Width and height can be adjusted independently. When `true`, width and\n   |     // height are adjusted at a 1:1 ratio.\n   |     square: false,\n   |\n   |     // Width and height can be adjusted independently. When `true`, width and\n   |     // height maintain the aspect ratio they had when resizing started.\n   |     preserveAspectRatio: false,\n   |\n   |   // a value of 'none' will limit the resize rect to a minimum of 0x0\n   |   // 'negate' will allow the rect to have negative width/height\n   |   // 'reposition' will keep the width/height positive by swapping\n   |   // the top and bottom edges and/or swapping the left and right edges\n   |   invert: 'none' || 'negate' || 'reposition'\n   |\n   |   // limit multiple resizes.\n   |   // See the explanation in the @Interactable.draggable example\n   |   max: Infinity,\n   |   maxPerElement: 1,\n   | });\n  \\*/\nInteractable.prototype.resizable = function (options) {\n  if (utils.isObject(options)) {\n    this.options.resize.enabled = options.enabled === false? false: true;\n    this.setPerAction('resize', options);\n    this.setOnEvents('resize', options);\n\n    if (/^x$|^y$|^xy$/.test(options.axis)) {\n      this.options.resize.axis = options.axis;\n    }\n    else if (options.axis === null) {\n      this.options.resize.axis = defaultOptions.resize.axis;\n    }\n\n    if (utils.isBool(options.preserveAspectRatio)) {\n      this.options.resize.preserveAspectRatio = options.preserveAspectRatio;\n    }\n    else if (utils.isBool(options.square)) {\n      this.options.resize.square = options.square;\n    }\n\n    return this;\n  }\n  if (utils.isBool(options)) {\n    this.options.resize.enabled = options;\n\n    if (!options) {\n      this.onresizestart = this.onresizestart = this.onresizeend = null;\n    }\n\n    return this;\n  }\n  return this.options.resize;\n};\n\nfunction checkResizeEdge (name, value, page, element, interactableElement, rect, margin) {\n  // false, '', undefined, null\n  if (!value) { return false; }\n\n  // true value, use pointer coords and element rect\n  if (value === true) {\n    // if dimensions are negative, \"switch\" edges\n    const width  = utils.isNumber(rect.width )? rect.width  : rect.right  - rect.left;\n    const height = utils.isNumber(rect.height)? rect.height : rect.bottom - rect.top ;\n\n    if (width < 0) {\n      if      (name === 'left' ) { name = 'right'; }\n      else if (name === 'right') { name = 'left' ; }\n    }\n    if (height < 0) {\n      if      (name === 'top'   ) { name = 'bottom'; }\n      else if (name === 'bottom') { name = 'top'   ; }\n    }\n\n    if (name === 'left'  ) { return page.x < ((width  >= 0? rect.left: rect.right ) + margin); }\n    if (name === 'top'   ) { return page.y < ((height >= 0? rect.top : rect.bottom) + margin); }\n\n    if (name === 'right' ) { return page.x > ((width  >= 0? rect.right : rect.left) - margin); }\n    if (name === 'bottom') { return page.y > ((height >= 0? rect.bottom: rect.top ) - margin); }\n  }\n\n  // the remaining checks require an element\n  if (!utils.isElement(element)) { return false; }\n\n  return utils.isElement(value)\n  // the value is an element to use as a resize handle\n    ? value === element\n    // otherwise check if element matches value as selector\n    : utils.matchesUpTo(element, value, interactableElement);\n}\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.resizeAxes = 'xy';\n});\n\nInteractEvent.signals.on('set-delta', function ({ interaction, iEvent, action }) {\n  if (action !== 'resize' || !interaction.resizeAxes) { return; }\n\n  const options = interaction.target.options;\n\n  if (options.resize.square) {\n    if (interaction.resizeAxes === 'y') {\n      iEvent.dx = iEvent.dy;\n    }\n    else {\n      iEvent.dy = iEvent.dx;\n    }\n    iEvent.axes = 'xy';\n  }\n  else {\n    iEvent.axes = interaction.resizeAxes;\n\n    if (interaction.resizeAxes === 'x') {\n      iEvent.dy = 0;\n    }\n    else if (interaction.resizeAxes === 'y') {\n      iEvent.dx = 0;\n    }\n  }\n});\n\nactions.resize = resize;\nactions.names.push('resize');\nutils.merge(Interactable.eventTypes, [\n  'resizestart',\n  'resizemove',\n  'resizeinertiastart',\n  'resizeinertiaresume',\n  'resizeend',\n]);\nactions.methodDict.resize = 'resizable';\n\ndefaultOptions.resize = resize.defaults;\n\nmodule.exports = resize;\n","const raf            = require('./utils/raf');\nconst getWindow      = require('./utils/window').getWindow;\nconst isWindow       = require('./utils/isType').isWindow;\nconst domUtils       = require('./utils/domUtils');\nconst Interaction    = require('./Interaction');\nconst defaultOptions = require('./defaultOptions');\n\nconst autoScroll = {\n  defaults: {\n    enabled  : false,\n    container: null,     // the item that is scrolled (Window or HTMLElement)\n    margin   : 60,\n    speed    : 300,      // the scroll speed in pixels per second\n  },\n\n  interaction: null,\n  i: null,    // the handle returned by window.setInterval\n  x: 0, y: 0, // Direction each pulse is to scroll in\n\n  isScrolling: false,\n  prevTime: 0,\n\n  start: function (interaction) {\n    autoScroll.isScrolling = true;\n    raf.cancel(autoScroll.i);\n\n    autoScroll.interaction = interaction;\n    autoScroll.prevTime = new Date().getTime();\n    autoScroll.i = raf.request(autoScroll.scroll);\n  },\n\n  stop: function () {\n    autoScroll.isScrolling = false;\n    raf.cancel(autoScroll.i);\n  },\n\n  // scroll the window by the values in scroll.x/y\n  scroll: function () {\n    const options = autoScroll.interaction.target.options[autoScroll.interaction.prepared.name].autoScroll;\n    const container = options.container || getWindow(autoScroll.interaction.element);\n    const now = new Date().getTime();\n    // change in time in seconds\n    const dt = (now - autoScroll.prevTime) / 1000;\n    // displacement\n    const s = options.speed * dt;\n\n    if (s >= 1) {\n      if (isWindow(container)) {\n        container.scrollBy(autoScroll.x * s, autoScroll.y * s);\n      }\n      else if (container) {\n        container.scrollLeft += autoScroll.x * s;\n        container.scrollTop  += autoScroll.y * s;\n      }\n\n      autoScroll.prevTime = now;\n    }\n\n    if (autoScroll.isScrolling) {\n      raf.cancel(autoScroll.i);\n      autoScroll.i = raf.request(autoScroll.scroll);\n    }\n  },\n  check: function (interactable, actionName) {\n    const options = interactable.options;\n\n    return options[actionName].autoScroll && options[actionName].autoScroll.enabled;\n  },\n  onInteractionMove: function ({ interaction, pointer }) {\n    if (!(interaction.interacting()\n          && autoScroll.check(interaction.target, interaction.prepared.name))) {\n      return;\n    }\n\n    if (interaction.simulation) {\n      autoScroll.x = autoScroll.y = 0;\n      return;\n    }\n\n    let top;\n    let right;\n    let bottom;\n    let left;\n\n    const options = interaction.target.options[interaction.prepared.name].autoScroll;\n    const container = options.container || getWindow(interaction.element);\n\n    if (isWindow(container)) {\n      left   = pointer.clientX < autoScroll.margin;\n      top    = pointer.clientY < autoScroll.margin;\n      right  = pointer.clientX > container.innerWidth  - autoScroll.margin;\n      bottom = pointer.clientY > container.innerHeight - autoScroll.margin;\n    }\n    else {\n      const rect = domUtils.getElementClientRect(container);\n\n      left   = pointer.clientX < rect.left   + autoScroll.margin;\n      top    = pointer.clientY < rect.top    + autoScroll.margin;\n      right  = pointer.clientX > rect.right  - autoScroll.margin;\n      bottom = pointer.clientY > rect.bottom - autoScroll.margin;\n    }\n\n    autoScroll.x = (right ? 1: left? -1: 0);\n    autoScroll.y = (bottom? 1:  top? -1: 0);\n\n    if (!autoScroll.isScrolling) {\n      // set the autoScroll properties to those of the target\n      autoScroll.margin = options.margin;\n      autoScroll.speed  = options.speed;\n\n      autoScroll.start(interaction);\n    }\n  },\n};\n\nInteraction.signals.on('stop-active', function () {\n  autoScroll.stop();\n});\n\nInteraction.signals.on('action-move', autoScroll.onInteractionMove);\n\ndefaultOptions.perAction.autoScroll = autoScroll.defaults;\n\nmodule.exports = autoScroll;\n","const autoStart   = require('./index');\nconst Interaction = require('../Interaction');\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.delayTimer = null;\n});\n\nautoStart.signals.on('prepared', function ({ interaction }) {\n  const actionName = interaction.prepared.name;\n\n  if (!actionName) { return; }\n\n  const delay = interaction.target.options[actionName].delay;\n\n  if (delay > 0) {\n    interaction.delayTimer = setTimeout(() => {\n      interaction.start(interaction.prepared, interaction.target, interaction.element);\n    }, delay);\n  }\n});\n\nInteraction.signals.on('move', function ({ interaction, duplicate }) {\n  if (interaction.pointerWasMoved && !duplicate) {\n    clearTimeout(interaction.delayTimer);\n  }\n});\n\n// prevent regular down->move autoStart\nautoStart.signals.on('before-start', function ({ interaction }) {\n  const actionName = interaction.prepared.name;\n\n  if (!actionName) { return; }\n\n  const delay = interaction.target.options[actionName].delay;\n\n  if (delay > 0) {\n    interaction.prepared.name = null;\n  }\n});\n","const autoStart = require('./index');\nconst scope     = require('../scope');\nconst browser   = require('../utils/browser');\n\nconst { isElement } = require('../utils/isType');\nconst { matchesSelector, parentNode } = require('../utils/domUtils');\n\nrequire('./index').setActionDefaults(require('../actions/drag'));\n\nautoStart.signals.on('before-start',  function ({ interaction, eventTarget, dx, dy }) {\n  if (interaction.prepared.name !== 'drag') { return; }\n\n  // check if a drag is in the correct axis\n  const absX = Math.abs(dx);\n  const absY = Math.abs(dy);\n  const dragOptions = interaction.target.options.drag;\n  const startAxis = dragOptions.startAxis;\n  const currentAxis = (absX > absY ? 'x' : absX < absY ? 'y' : 'xy');\n\n  interaction.prepared.axis = dragOptions.lockAxis === 'start'\n    ? currentAxis[0] // always lock to one axis even if currentAxis === 'xy'\n    : dragOptions.lockAxis;\n\n  // if the movement isn't in the startAxis of the interactable\n  if (currentAxis !== 'xy' && startAxis !== 'xy' && startAxis !== currentAxis) {\n    // cancel the prepared action\n    interaction.prepared.name = null;\n\n    // then try to get a drag from another ineractable\n\n    if (!interaction.prepared.name) {\n\n      let element = eventTarget;\n\n      const getDraggable = function (interactable, selector, context) {\n        const elements = browser.useMatchesSelectorPolyfill\n            ? context.querySelectorAll(selector)\n            : undefined;\n\n        if (interactable === interaction.target) { return; }\n\n        const options = interactable.options;\n\n        if (!options.drag.manualStart\n            && !interactable.testIgnoreAllow(options, element, eventTarget)\n            && matchesSelector(element, selector, elements)) {\n\n          const action = interactable.getAction(interaction.downPointer,\n                                                interaction.downEvent,\n                                                interaction,\n                                                element);\n\n          if (action\n              && action.name === 'drag'\n              && checkStartAxis(currentAxis, interactable)\n              && autoStart.validateAction(action, interactable, element)) {\n\n            return interactable;\n          }\n        }\n      };\n\n      let action = null;\n\n      // check all interactables\n      while (isElement(element)) {\n        const elementInteractable = scope.interactables.get(element);\n\n        if (elementInteractable\n            && elementInteractable !== interaction.target\n            && !elementInteractable.options.drag.manualStart) {\n\n          action = elementInteractable.getAction(interaction.downPointer, interaction.downEvent, interaction, element);\n        }\n        if (action\n            && action.name === 'drag'\n            && checkStartAxis(currentAxis, elementInteractable)) {\n\n          interaction.prepared.name = 'drag';\n          interaction.target = elementInteractable;\n          interaction.element = element;\n          break;\n        }\n\n        const selectorInteractable = scope.interactables.forEachSelector(getDraggable, element);\n\n        if (selectorInteractable) {\n          interaction.prepared.name = 'drag';\n          interaction.target = selectorInteractable;\n          interaction.element = element;\n          break;\n        }\n\n        element = parentNode(element);\n      }\n    }\n  }\n});\n\nfunction checkStartAxis (startAxis, interactable) {\n  if (!interactable) { return false; }\n\n  const thisAxis = interactable.options.drag.startAxis;\n\n  return (startAxis === 'xy' || thisAxis === 'xy' || thisAxis === startAxis);\n}\n","require('./index').setActionDefaults(require('../actions/gesture'));\n","const interact       = require('../interact');\nconst Interactable   = require('../Interactable');\nconst Interaction    = require('../Interaction');\nconst actions        = require('../actions');\nconst defaultOptions = require('../defaultOptions');\nconst browser        = require('../utils/browser');\nconst scope          = require('../scope');\nconst utils          = require('../utils');\nconst signals        = require('../utils/Signals').new();\n\nconst autoStart = {\n  signals,\n  withinInteractionLimit,\n  // Allow this many interactions to happen simultaneously\n  maxInteractions: Infinity,\n  perActionDefaults: {\n    manualStart: false,\n    max: Infinity,\n    maxPerElement: 1,\n  },\n  setActionDefaults: function (action) {\n    utils.extend(action.defaults, autoStart.perActionDefaults);\n  },\n};\n\n// set cursor style on mousedown\nInteraction.signals.on('down', function ({ interaction, pointer, event, eventTarget }) {\n  if (interaction.interacting()) { return; }\n\n  const actionInfo = getActionInfo(interaction, pointer, event, eventTarget);\n  prepare(interaction, actionInfo);\n});\n\n// set cursor style on mousemove\nInteraction.signals.on('move', function ({ interaction, pointer, event, eventTarget }) {\n  if (!interaction.mouse\n      || interaction.pointerIsDown\n      || interaction.interacting()) { return; }\n\n  const actionInfo = getActionInfo(interaction, pointer, event, eventTarget);\n  prepare(interaction, actionInfo);\n});\n\nInteraction.signals.on('move', function (arg) {\n  const { interaction, event } = arg;\n\n  if (!interaction.pointerIsDown\n      || interaction.interacting()\n      || !interaction.pointerWasMoved\n      || !interaction.prepared.name) {\n    return;\n  }\n\n  signals.fire('before-start', arg);\n\n  const target = interaction.target;\n\n  if (interaction.prepared.name && target) {\n    // check manualStart and interaction limit\n    if (target.options[interaction.prepared.name].manualStart\n        || !withinInteractionLimit(target, interaction.element, interaction.prepared)) {\n      interaction.stop(event);\n    }\n    else {\n      interaction.start(interaction.prepared, target, interaction.element);\n    }\n  }\n});\n\n// Check if the current target supports the action.\n// If so, return the validated action. Otherwise, return null\nfunction validateAction (action, interactable, element) {\n  if (utils.isObject(action)\n      && interactable.options[action.name].enabled\n      && withinInteractionLimit(interactable, element, action)) {\n    return action;\n  }\n\n  return null;\n}\n\nfunction validateSelector (interaction, pointer, event, matches, matchElements) {\n  for (let i = 0, len = matches.length; i < len; i++) {\n    const match = matches[i];\n    const matchElement = matchElements[i];\n    const action = validateAction(match.getAction(pointer, event, interaction, matchElement),\n                                  match,\n                                  matchElement);\n\n    if (action) {\n      return {\n        action,\n        target: match,\n        element: matchElement,\n      };\n    }\n  }\n\n  return {};\n}\n\nfunction getActionInfo (interaction, pointer, event, eventTarget) {\n  let matches = [];\n  let matchElements = [];\n\n  let element = eventTarget;\n  let action = null;\n\n  function pushMatches (interactable, selector, context) {\n    const elements = (browser.useMatchesSelectorPolyfill\n      ? context.querySelectorAll(selector)\n      : undefined);\n    const options = interactable.options;\n\n    if (interactable.testIgnoreAllow(options, element, eventTarget)\n        && utils.matchesSelector(element, selector, elements)) {\n\n      matches.push(interactable);\n      matchElements.push(element);\n    }\n  }\n\n  while (utils.isElement(element)) {\n    matches = [];\n    matchElements = [];\n\n    const elementInteractable = scope.interactables.get(element);\n\n    if (elementInteractable\n        && (action = validateAction(elementInteractable.getAction(pointer, event, interaction, element),\n                                    elementInteractable,\n                                    element))\n        && !elementInteractable.options[action.name].manualStart) {\n      return {\n        element,\n        action,\n        target: elementInteractable,\n      };\n    }\n    else {\n      scope.interactables.forEachSelector(pushMatches, element);\n\n      const actionInfo = validateSelector(interaction, pointer, event, matches, matchElements);\n\n      if (actionInfo.action\n          && !actionInfo.target.options[actionInfo.action.name].manualStart) {\n        return actionInfo;\n      }\n    }\n\n    element = utils.parentNode(element);\n  }\n\n  return {};\n}\n\nfunction prepare (interaction, { action, target, element }) {\n  action = action || {};\n\n  if (interaction.target && interaction.target.options.styleCursor) {\n    interaction.target._doc.documentElement.style.cursor = '';\n  }\n\n  interaction.target = target;\n  interaction.element = element;\n  utils.copyAction(interaction.prepared, action);\n\n  if (target && target.options.styleCursor) {\n    const cursor = action? actions[action.name].getCursor(action) : '';\n    interaction.target._doc.documentElement.style.cursor = cursor;\n  }\n\n  signals.fire('prepared', { interaction: interaction });\n}\n\nInteraction.signals.on('stop', function ({ interaction }) {\n  const target = interaction.target;\n\n  if (target && target.options.styleCursor) {\n    target._doc.documentElement.style.cursor = '';\n  }\n});\n\nInteractable.prototype.getAction = function (pointer, event, interaction, element) {\n  const action = this.defaultActionChecker(pointer, event, interaction, element);\n\n  if (this.options.actionChecker) {\n    return this.options.actionChecker(pointer, event, action, this, element, interaction);\n  }\n\n  return action;\n};\n\n/*\\\n * Interactable.actionChecker\n [ method ]\n *\n * Gets or sets the function used to check action to be performed on\n * pointerDown\n *\n - checker (function | null) #optional A function which takes a pointer event, defaultAction string, interactable, element and interaction as parameters and returns an object with name property 'drag' 'resize' or 'gesture' and optionally an `edges` object with boolean 'top', 'left', 'bottom' and right props.\n = (Function | Interactable) The checker function or this Interactable\n *\n | interact('.resize-drag')\n |   .resizable(true)\n |   .draggable(true)\n |   .actionChecker(function (pointer, event, action, interactable, element, interaction) {\n |\n |   if (interact.matchesSelector(event.target, '.drag-handle') {\n |     // force drag with handle target\n |     action.name = drag;\n |   }\n |   else {\n |     // resize from the top and right edges\n |     action.name  = 'resize';\n |     action.edges = { top: true, right: true };\n |   }\n |\n |   return action;\n | });\n\\*/\nInteractable.prototype.actionChecker = function (checker) {\n  if (utils.isFunction(checker)) {\n    this.options.actionChecker = checker;\n\n    return this;\n  }\n\n  if (checker === null) {\n    delete this.options.actionChecker;\n\n    return this;\n  }\n\n  return this.options.actionChecker;\n};\n\n/*\\\n * Interactable.styleCursor\n [ method ]\n *\n * Returns or sets whether the the cursor should be changed depending on the\n * action that would be performed if the mouse were pressed and dragged.\n *\n - newValue (boolean) #optional\n = (boolean | Interactable) The current setting or this Interactable\n\\*/\nInteractable.prototype.styleCursor = function (newValue) {\n  if (utils.isBool(newValue)) {\n    this.options.styleCursor = newValue;\n\n    return this;\n  }\n\n  if (newValue === null) {\n    delete this.options.styleCursor;\n\n    return this;\n  }\n\n  return this.options.styleCursor;\n};\n\nInteractable.prototype.defaultActionChecker = function (pointer, event, interaction, element) {\n  const rect = this.getRect(element);\n  const buttons = event.buttons || ({\n    0: 1,\n    1: 4,\n    3: 8,\n    4: 16,\n  })[event.button];\n  let action = null;\n\n  for (const actionName of actions.names) {\n    // check mouseButton setting if the pointer is down\n    if (interaction.pointerIsDown\n        && interaction.mouse\n        && (buttons & this.options[actionName].mouseButtons) === 0) {\n      continue;\n    }\n\n    action = actions[actionName].checker(pointer, event, this, element, interaction, rect);\n\n    if (action) {\n      return action;\n    }\n  }\n};\n\nfunction withinInteractionLimit (interactable, element, action) {\n  const options = interactable.options;\n  const maxActions = options[action.name].max;\n  const maxPerElement = options[action.name].maxPerElement;\n  let activeInteractions = 0;\n  let targetCount = 0;\n  let targetElementCount = 0;\n\n  // no actions if any of these values == 0\n  if (!(maxActions && maxPerElement && autoStart.maxInteractions)) { return; }\n\n  for (let i = 0, len = scope.interactions.length; i < len; i++) {\n    const interaction = scope.interactions[i];\n    const otherAction = interaction.prepared.name;\n\n    if (!interaction.interacting()) { continue; }\n\n    activeInteractions++;\n\n    if (activeInteractions >= autoStart.maxInteractions) {\n      return false;\n    }\n\n    if (interaction.target !== interactable) { continue; }\n\n    targetCount += (otherAction === action.name)|0;\n\n    if (targetCount >= maxActions) {\n      return false;\n    }\n\n    if (interaction.element === element) {\n      targetElementCount++;\n\n      if (otherAction !== action.name || targetElementCount >= maxPerElement) {\n        return false;\n      }\n    }\n  }\n\n  return autoStart.maxInteractions > 0;\n}\n\n/*\\\n * interact.maxInteractions\n [ method ]\n **\n * Returns or sets the maximum number of concurrent interactions allowed.\n * By default only 1 interaction is allowed at a time (for backwards\n * compatibility). To allow multiple interactions on the same Interactables\n * and elements, you need to enable it in the draggable, resizable and\n * gesturable `'max'` and `'maxPerElement'` options.\n **\n - newValue (number) #optional Any number. newValue <= 0 means no interactions.\n\\*/\ninteract.maxInteractions = function (newValue) {\n  if (utils.isNumber(newValue)) {\n    autoStart.maxInteractions = newValue;\n\n    return this;\n  }\n\n  return autoStart.maxInteractions;\n};\n\nInteractable.settingsMethods.push('styleCursor');\nInteractable.settingsMethods.push('actionChecker');\nInteractable.settingsMethods.push('ignoreFrom');\nInteractable.settingsMethods.push('allowFrom');\n\ndefaultOptions.base.actionChecker = null;\ndefaultOptions.base.ignoreFrom = null;\ndefaultOptions.base.allowFrom = null;\ndefaultOptions.base.styleCursor = true;\n\nutils.extend(defaultOptions.perAction, autoStart.perActionDefaults);\n\nmodule.exports = autoStart;\n","require('./index').setActionDefaults(require('../actions/resize'));\n","module.exports = {\n  base: {\n    accept        : null,\n    preventDefault: 'auto',\n    deltaSource   : 'page',\n    allowFrom     : null,\n  },\n\n  perAction: {\n    origin: { x: 0, y: 0 },\n\n    // only allow left button by default\n    // see https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons#Return_value\n    mouseButtons: 1,\n\n    inertia: {\n      enabled          : false,\n      resistance       : 10,    // the lambda in exponential decay\n      minSpeed         : 100,   // target speed must be above this for inertia to start\n      endSpeed         : 10,    // the speed at which inertia is slow enough to stop\n      allowResume      : true,  // allow resuming an action in inertia phase\n      smoothEndDuration: 300,   // animate to snap/restrict endOnly if there's no inertia\n    },\n  },\n};\n","/* browser entry point */\n\n// Legacy browser support\nrequire('./legacyBrowsers');\n\n// pointerEvents\nrequire('./pointerEvents');\nrequire('./pointerEvents/holdRepeat');\nrequire('./pointerEvents/interactableTargets');\n\n// inertia\nrequire('./inertia');\n\n// modifiers\nrequire('./modifiers/snap');\nrequire('./modifiers/restrict');\n\n// delay\nrequire('./autoStart/delay');\n\n// actions\nrequire('./actions/gesture');\nrequire('./actions/resize');\nrequire('./actions/drag');\nrequire('./actions/drop');\n\n// load these modifiers after resize is loaded\nrequire('./modifiers/restrictEdges');\nrequire('./modifiers/restrictSize');\n\n// autoStart actions\nrequire('./autoStart/gesture');\nrequire('./autoStart/resize');\nrequire('./autoStart/drag');\n\n// Interactable preventDefault setting\nrequire('./interactablePreventDefault.js');\n\n// autoScroll\nrequire('./autoScroll');\n\n// export interact\nmodule.exports = require('./interact');\n","const InteractEvent  = require('./InteractEvent');\nconst Interaction    = require('./Interaction');\nconst modifiers      = require('./modifiers');\nconst utils          = require('./utils');\nconst animationFrame = require('./utils/raf');\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.inertiaStatus = {\n    active     : false,\n    smoothEnd  : false,\n    allowResume: false,\n\n    startEvent: null,\n    upCoords  : {},\n\n    xe: 0, ye: 0,\n    sx: 0, sy: 0,\n\n    t0: 0,\n    vx0: 0, vys: 0,\n    duration: 0,\n\n    lambda_v0: 0,\n    one_ve_v0: 0,\n    i  : null,\n  };\n\n  interaction.boundInertiaFrame   = () => inertiaFrame  .apply(interaction);\n  interaction.boundSmoothEndFrame = () => smoothEndFrame.apply(interaction);\n});\n\nInteraction.signals.on('down', function ({ interaction, event, pointer, eventTarget }) {\n  const status = interaction.inertiaStatus;\n\n  // Check if the down event hits the current inertia target\n  if (status.active) {\n    let element = eventTarget;\n\n    // climb up the DOM tree from the event target\n    while (utils.isElement(element)) {\n\n      // if interaction element is the current inertia target element\n      if (element === interaction.element) {\n        // stop inertia\n        animationFrame.cancel(status.i);\n        status.active = false;\n        interaction.simulation = null;\n\n        // update pointers to the down event's coordinates\n        interaction.updatePointer(pointer);\n        utils.setCoords(interaction.curCoords, interaction.pointers);\n\n        // fire appropriate signals\n        const signalArg = { interaction };\n        Interaction.signals.fire('before-action-move', signalArg);\n        Interaction.signals.fire('action-resume'     , signalArg);\n\n        // fire a reume event\n        const resumeEvent = new InteractEvent(interaction,\n                                              event,\n                                              interaction.prepared.name,\n                                              'inertiaresume',\n                                              interaction.element);\n\n        interaction.target.fire(resumeEvent);\n        interaction.prevEvent = resumeEvent;\n        modifiers.resetStatuses(interaction.modifierStatuses);\n\n        utils.copyCoords(interaction.prevCoords, interaction.curCoords);\n        break;\n      }\n\n      element = utils.parentNode(element);\n    }\n  }\n});\n\nInteraction.signals.on('up', function ({ interaction, event }) {\n  const status = interaction.inertiaStatus;\n\n  if (!interaction.interacting() || status.active) { return; }\n\n  const target = interaction.target;\n  const options = target && target.options;\n  const inertiaOptions = options && interaction.prepared.name && options[interaction.prepared.name].inertia;\n\n  const now = new Date().getTime();\n  const statuses = {};\n  const page = utils.extend({}, interaction.curCoords.page);\n  const pointerSpeed = interaction.pointerDelta.client.speed;\n  let inertiaPossible = false;\n  let inertia = false;\n  let smoothEnd = false;\n  let modifierResult;\n\n  // check if inertia should be started\n  inertiaPossible = (inertiaOptions && inertiaOptions.enabled\n                     && interaction.prepared.name !== 'gesture'\n                     && event !== status.startEvent);\n\n  inertia = (inertiaPossible\n            && (now - interaction.curCoords.timeStamp) < 50\n            && pointerSpeed > inertiaOptions.minSpeed\n            && pointerSpeed > inertiaOptions.endSpeed);\n\n  // smoothEnd\n  if (inertiaPossible && !inertia) {\n    modifiers.resetStatuses(statuses);\n\n    modifierResult = modifiers.setAll(interaction, page, statuses, true, true);\n\n    if (modifierResult.shouldMove && modifierResult.locked) {\n      smoothEnd = true;\n    }\n  }\n\n  if (!(inertia || smoothEnd)) { return; }\n\n  utils.copyCoords(status.upCoords, interaction.curCoords);\n\n  interaction.pointers[0] = status.startEvent =\n    new InteractEvent(interaction, event, interaction.prepared.name, 'inertiastart', interaction.element);\n\n  status.t0 = now;\n\n  status.active = true;\n  status.allowResume = inertiaOptions.allowResume;\n  interaction.simulation = status;\n\n  target.fire(status.startEvent);\n\n  if (inertia) {\n    status.vx0 = interaction.pointerDelta.client.vx;\n    status.vy0 = interaction.pointerDelta.client.vy;\n    status.v0 = pointerSpeed;\n\n    calcInertia(interaction, status);\n\n    utils.extend(page, interaction.curCoords.page);\n\n    page.x += status.xe;\n    page.y += status.ye;\n\n    modifiers.resetStatuses(statuses);\n\n    modifierResult = modifiers.setAll(interaction, page, statuses, true, true);\n\n    status.modifiedXe += modifierResult.dx;\n    status.modifiedYe += modifierResult.dy;\n\n    status.i = animationFrame.request(interaction.boundInertiaFrame);\n  }\n  else {\n    status.smoothEnd = true;\n    status.xe = modifierResult.dx;\n    status.ye = modifierResult.dy;\n\n    status.sx = status.sy = 0;\n\n    status.i = animationFrame.request(interaction.boundSmoothEndFrame);\n  }\n});\n\nInteraction.signals.on('stop-active', function ({ interaction }) {\n  const status = interaction.inertiaStatus;\n\n  if (status.active) {\n    animationFrame.cancel(status.i);\n    status.active = false;\n    interaction.simulation = null;\n  }\n});\n\nfunction calcInertia (interaction, status) {\n  const inertiaOptions = interaction.target.options[interaction.prepared.name].inertia;\n  const lambda = inertiaOptions.resistance;\n  const inertiaDur = -Math.log(inertiaOptions.endSpeed / status.v0) / lambda;\n\n  status.x0 = interaction.prevEvent.pageX;\n  status.y0 = interaction.prevEvent.pageY;\n  status.t0 = status.startEvent.timeStamp / 1000;\n  status.sx = status.sy = 0;\n\n  status.modifiedXe = status.xe = (status.vx0 - inertiaDur) / lambda;\n  status.modifiedYe = status.ye = (status.vy0 - inertiaDur) / lambda;\n  status.te = inertiaDur;\n\n  status.lambda_v0 = lambda / status.v0;\n  status.one_ve_v0 = 1 - inertiaOptions.endSpeed / status.v0;\n}\n\nfunction inertiaFrame () {\n  updateInertiaCoords(this);\n  utils.setCoordDeltas(this.pointerDelta, this.prevCoords, this.curCoords);\n\n  const status = this.inertiaStatus;\n  const options = this.target.options[this.prepared.name].inertia;\n  const lambda = options.resistance;\n  const t = new Date().getTime() / 1000 - status.t0;\n\n  if (t < status.te) {\n\n    const progress =  1 - (Math.exp(-lambda * t) - status.lambda_v0) / status.one_ve_v0;\n\n    if (status.modifiedXe === status.xe && status.modifiedYe === status.ye) {\n      status.sx = status.xe * progress;\n      status.sy = status.ye * progress;\n    }\n    else {\n      const quadPoint = utils.getQuadraticCurvePoint(0, 0,\n                                                     status.xe,\n                                                     status.ye,\n                                                     status.modifiedXe,\n                                                     status.modifiedYe,\n                                                     progress);\n\n      status.sx = quadPoint.x;\n      status.sy = quadPoint.y;\n    }\n\n    this.doMove();\n\n    status.i = animationFrame.request(this.boundInertiaFrame);\n  }\n  else {\n    status.sx = status.modifiedXe;\n    status.sy = status.modifiedYe;\n\n    this.doMove();\n    this.end(status.startEvent);\n    status.active = false;\n    this.simulation = null;\n  }\n\n  utils.copyCoords(this.prevCoords, this.curCoords);\n}\n\nfunction smoothEndFrame () {\n  updateInertiaCoords(this);\n\n  const status = this.inertiaStatus;\n  const t = new Date().getTime() - status.t0;\n  const duration = this.target.options[this.prepared.name].inertia.smoothEndDuration;\n\n  if (t < duration) {\n    status.sx = utils.easeOutQuad(t, 0, status.xe, duration);\n    status.sy = utils.easeOutQuad(t, 0, status.ye, duration);\n\n    this.pointerMove(status.startEvent, status.startEvent);\n\n    status.i = animationFrame.request(this.boundSmoothEndFrame);\n  }\n  else {\n    status.sx = status.xe;\n    status.sy = status.ye;\n\n    this.pointerMove(status.startEvent, status.startEvent);\n    this.end(status.startEvent);\n\n    status.smoothEnd =\n      status.active = false;\n    this.simulation = null;\n  }\n}\n\nfunction updateInertiaCoords (interaction) {\n  const status = interaction.inertiaStatus;\n\n  // return if inertia isn't running\n  if (!status.active) { return; }\n\n  const pageUp   = status.upCoords.page;\n  const clientUp = status.upCoords.client;\n\n  utils.setCoords(interaction.curCoords, [ {\n    pageX  : pageUp.x   + status.sx,\n    pageY  : pageUp.y   + status.sy,\n    clientX: clientUp.x + status.sx,\n    clientY: clientUp.y + status.sy,\n  } ]);\n}\n","const browser      = require('./utils/browser');\nconst events       = require('./utils/events');\nconst utils        = require('./utils');\nconst scope        = require('./scope');\nconst Interactable = require('./Interactable');\nconst Interaction  = require('./Interaction');\n\nconst globalEvents = {};\n\n/*\\\n * interact\n [ method ]\n *\n * The methods of this variable can be used to set elements as\n * interactables and also to change various default settings.\n *\n * Calling it as a function and passing an element or a valid CSS selector\n * string returns an Interactable object which has various methods to\n * configure it.\n *\n - element (Element | string) The HTML or SVG Element to interact with or CSS selector\n = (object) An @Interactable\n *\n > Usage\n | interact('#draggable').draggable(true);\n |\n | var rectables = interact('rect');\n | rectables\n |     .gesturable(true)\n |     .on('gesturemove', function (event) {\n |         // ...\n |     });\n\\*/\nfunction interact (element, options) {\n  let interactable = scope.interactables.get(element, options);\n\n  if (!interactable) {\n    interactable = new Interactable(element, options);\n    interactable.events.global = globalEvents;\n  }\n\n  return interactable;\n}\n\n/*\\\n * interact.isSet\n [ method ]\n *\n * Check if an element has been set\n - element (Element) The Element being searched for\n = (boolean) Indicates if the element or CSS selector was previously passed to interact\n\\*/\ninteract.isSet = function (element, options) {\n  return scope.interactables.indexOfElement(element, options && options.context) !== -1;\n};\n\n/*\\\n * interact.on\n [ method ]\n *\n * Adds a global listener for an InteractEvent or adds a DOM event to\n * `document`\n *\n - type       (string | array | object) The types of events to listen for\n - listener   (function) The function event (s)\n - useCapture (boolean) #optional useCapture flag for addEventListener\n = (object) interact\n\\*/\ninteract.on = function (type, listener, useCapture) {\n  if (utils.isString(type) && type.search(' ') !== -1) {\n    type = type.trim().split(/ +/);\n  }\n\n  if (utils.isArray(type)) {\n    for (const eventType of type) {\n      interact.on(eventType, listener, useCapture);\n    }\n\n    return interact;\n  }\n\n  if (utils.isObject(type)) {\n    for (const prop in type) {\n      interact.on(prop, type[prop], listener);\n    }\n\n    return interact;\n  }\n\n  // if it is an InteractEvent type, add listener to globalEvents\n  if (utils.contains(Interactable.eventTypes, type)) {\n    // if this type of event was never bound\n    if (!globalEvents[type]) {\n      globalEvents[type] = [listener];\n    }\n    else {\n      globalEvents[type].push(listener);\n    }\n  }\n  // If non InteractEvent type, addEventListener to document\n  else {\n    events.add(scope.document, type, listener, useCapture);\n  }\n\n  return interact;\n};\n\n/*\\\n * interact.off\n [ method ]\n *\n * Removes a global InteractEvent listener or DOM event from `document`\n *\n - type       (string | array | object) The types of events that were listened for\n - listener   (function) The listener function to be removed\n - useCapture (boolean) #optional useCapture flag for removeEventListener\n = (object) interact\n \\*/\ninteract.off = function (type, listener, useCapture) {\n  if (utils.isString(type) && type.search(' ') !== -1) {\n    type = type.trim().split(/ +/);\n  }\n\n  if (utils.isArray(type)) {\n    for (const eventType of type) {\n      interact.off(eventType, listener, useCapture);\n    }\n\n    return interact;\n  }\n\n  if (utils.isObject(type)) {\n    for (const prop in type) {\n      interact.off(prop, type[prop], listener);\n    }\n\n    return interact;\n  }\n\n  if (!utils.contains(Interactable.eventTypes, type)) {\n    events.remove(scope.document, type, listener, useCapture);\n  }\n  else {\n    let index;\n\n    if (type in globalEvents\n        && (index = utils.indexOf(globalEvents[type], listener)) !== -1) {\n      globalEvents[type].splice(index, 1);\n    }\n  }\n\n  return interact;\n};\n\n/*\\\n * interact.debug\n [ method ]\n *\n * Returns an object which exposes internal data\n = (object) An object with properties that outline the current state and expose internal functions and variables\n\\*/\ninteract.debug = function () {\n  return scope;\n};\n\n// expose the functions used to calculate multi-touch properties\ninteract.getPointerAverage  = utils.pointerAverage;\ninteract.getTouchBBox       = utils.touchBBox;\ninteract.getTouchDistance   = utils.touchDistance;\ninteract.getTouchAngle      = utils.touchAngle;\n\ninteract.getElementRect       = utils.getElementRect;\ninteract.getElementClientRect = utils.getElementClientRect;\ninteract.matchesSelector      = utils.matchesSelector;\ninteract.closest              = utils.closest;\n\n/*\\\n * interact.supportsTouch\n [ method ]\n *\n = (boolean) Whether or not the browser supports touch input\n\\*/\ninteract.supportsTouch = function () {\n  return browser.supportsTouch;\n};\n\n/*\\\n * interact.supportsPointerEvent\n [ method ]\n *\n = (boolean) Whether or not the browser supports PointerEvents\n\\*/\ninteract.supportsPointerEvent = function () {\n  return browser.supportsPointerEvent;\n};\n\n/*\\\n * interact.stop\n [ method ]\n *\n * Cancels all interactions (end events are not fired)\n *\n - event (Event) An event on which to call preventDefault()\n = (object) interact\n\\*/\ninteract.stop = function (event) {\n  for (let i = scope.interactions.length - 1; i >= 0; i--) {\n    scope.interactions[i].stop(event);\n  }\n\n  return interact;\n};\n\n/*\\\n * interact.pointerMoveTolerance\n [ method ]\n * Returns or sets the distance the pointer must be moved before an action\n * sequence occurs. This also affects tolerance for tap events.\n *\n - newValue (number) #optional The movement from the start position must be greater than this value\n = (number | Interactable) The current setting or interact\n\\*/\ninteract.pointerMoveTolerance = function (newValue) {\n  if (utils.isNumber(newValue)) {\n    Interaction.pointerMoveTolerance = newValue;\n\n    return this;\n  }\n\n  return Interaction.pointerMoveTolerance;\n};\n\ninteract.addDocument    = scope.addDocument;\ninteract.removeDocument = scope.removeDocument;\n\nscope.interact = interact;\n\nmodule.exports = interact;\n","const Interactable = require('./Interactable');\nconst Interaction  = require('./Interaction');\nconst scope        = require('./scope');\nconst isType       = require('./utils/isType');\n\nconst { nodeContains, matchesSelector } = require('./utils/domUtils');\n\n/*\\\n * Interactable.preventDefault\n [ method ]\n *\n * Returns or sets whether to prevent the browser's default behaviour\n * in response to pointer events. Can be set to:\n *  - `'always'` to always prevent\n *  - `'never'` to never prevent\n *  - `'auto'` to let interact.js try to determine what would be best\n *\n - newValue (string) #optional `true`, `false` or `'auto'`\n = (string | Interactable) The current setting or this Interactable\n\\*/\nInteractable.prototype.preventDefault = function (newValue) {\n  if (/^(always|never|auto)$/.test(newValue)) {\n    this.options.preventDefault = newValue;\n    return this;\n  }\n\n  if (isType.isBool(newValue)) {\n    this.options.preventDefault = newValue? 'always' : 'never';\n    return this;\n  }\n\n  return this.options.preventDefault;\n};\n\nInteractable.prototype.checkAndPreventDefault = function (event) {\n  const setting = this.options.preventDefault;\n\n  if (setting === 'never') { return; }\n\n  if (setting === 'always') {\n    event.preventDefault();\n    return;\n  }\n\n  // setting === 'auto'\n\n  // don't preventDefault of pointerdown events\n  if (/^(mouse|pointer|touch)*(down|start)/i.test(event.type)) {\n    return;\n  }\n\n  // don't preventDefault on editable elements\n  if (matchesSelector(event.target, 'input,select,textarea,[contenteditable=true],[contenteditable=true] *')) {\n    return;\n  }\n\n  event.preventDefault();\n};\n\nfunction onInteractionEvent ({ interaction, event }) {\n  if (interaction.target) {\n    interaction.target.checkAndPreventDefault(event);\n  }\n}\n\nfor (const eventSignal of ['down', 'move', 'up', 'cancel']) {\n  Interaction.signals.on(eventSignal, onInteractionEvent);\n}\n\n// prevent native HTML5 drag on interact.js target elements\nInteraction.docEvents.dragstart = function preventNativeDrag (event) {\n  for (const interaction of scope.interactions) {\n\n    if (interaction.element\n        && (interaction.element === event.target\n            || nodeContains(interaction.element, event.target))) {\n\n      interaction.target.checkAndPreventDefault(event);\n      return;\n    }\n  }\n};\n","const scope   = require('./scope');\nconst events  = require('./utils/events');\nconst browser = require('./utils/browser');\nconst iFinder = require('./utils/interactionFinder');\n\nconst toString = Object.prototype.toString;\n\nif (!window.Array.isArray) {\n  window.Array.isArray = function (obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n}\n\nif (!String.prototype.trim) {\n  String.prototype.trim = function () {\n    return this.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n  };\n}\n\n// http://www.quirksmode.org/dom/events/click.html\n// >Events leading to dblclick\n//\n// IE8 doesn't fire down event before dblclick.\n// This workaround tries to fire a tap and doubletap after dblclick\nfunction onIE8Dblclick (event) {\n  const interaction = iFinder.search(event, event.type, event.target);\n\n  if (!interaction) { return; }\n\n  if (interaction.prevTap\n      && event.clientX === interaction.prevTap.clientX\n      && event.clientY === interaction.prevTap.clientY\n      && event.target  === interaction.prevTap.target) {\n\n    interaction.downTargets[0] = event.target;\n    interaction.downTimes  [0] = new Date().getTime();\n\n    scope.pointerEvents.collectEventTargets(interaction, event, event, event.target, 'tap');\n  }\n}\n\nif (browser.isIE8) {\n  const selectFix = function (event) {\n    for (const interaction of scope.interactions) {\n      if (interaction.interacting()) {\n        interaction.target.checkAndPreventDefault(event);\n      }\n    }\n  };\n\n  const onDocIE8 = function onDocIE8 ({ doc, win }, signalName) {\n    const eventMethod = signalName.indexOf('listen') === 0\n      ? events.add : events.remove;\n\n    // For IE's lack of Event#preventDefault\n    eventMethod(doc, 'selectstart', selectFix);\n\n    if (scope.pointerEvents) {\n      eventMethod(doc, 'dblclick', onIE8Dblclick);\n    }\n  };\n\n  scope.signals.on('add-document'   , onDocIE8);\n  scope.signals.on('remove-document', onDocIE8);\n}\n\nmodule.exports = null;\n","const InteractEvent = require('../InteractEvent');\nconst Interaction   = require('../Interaction');\nconst extend        = require('../utils/extend');\n\nconst modifiers = {\n  names: [],\n\n  setOffsets: function (interaction, coords) {\n    const { target, element } = interaction;\n    const rect = target.getRect(element);\n\n    if (rect) {\n      interaction.startOffset.left = coords.page.x - rect.left;\n      interaction.startOffset.top  = coords.page.y - rect.top;\n\n      interaction.startOffset.right  = rect.right  - coords.page.x;\n      interaction.startOffset.bottom = rect.bottom - coords.page.y;\n\n      if (!('width'  in rect)) { rect.width  = rect.right  - rect.left; }\n      if (!('height' in rect)) { rect.height = rect.bottom - rect.top ; }\n    }\n    else {\n      interaction.startOffset.left = interaction.startOffset.top = interaction.startOffset.right = interaction.startOffset.bottom = 0;\n    }\n\n    modifiers.setModifierOffsets(interaction, target, element, rect, interaction.modifierOffsets);\n  },\n\n  setModifierOffsets: function (interaction, interactable, element, rect, offsets) {\n    for (let i = 0; i < modifiers.names.length; i++) {\n      const modifierName = modifiers.names[i];\n\n      offsets[modifierName] =\n        modifiers[modifiers.names[i]].setOffset(interaction,\n                                                interactable, element, rect,\n                                                interaction.startOffset);\n    }\n  },\n\n  setAll: function (interaction, coordsArg, statuses, preEnd, requireEndOnly) {\n    const result = {\n      dx: 0,\n      dy: 0,\n      changed: false,\n      locked: false,\n      shouldMove: true,\n    };\n    const target = interaction.target;\n    const coords = extend({}, coordsArg);\n\n    let currentStatus;\n\n    for (const modifierName of modifiers.names) {\n      const modifier = modifiers[modifierName];\n      const modifierOptions = target.options[interaction.prepared.name][modifierName];\n\n      if (!shouldDo(modifierOptions, preEnd, requireEndOnly)) { continue; }\n\n      currentStatus = modifier.set(coords, interaction, statuses[modifierName]);\n\n      if (currentStatus.locked) {\n        coords.x += currentStatus.dx;\n        coords.y += currentStatus.dy;\n\n        result.dx += currentStatus.dx;\n        result.dy += currentStatus.dy;\n\n        result.locked = true;\n      }\n    }\n\n    // a move should be fired if the modified coords of\n    // the last modifier status that was calculated changes\n    result.shouldMove = !currentStatus || currentStatus.changed;\n\n    return result;\n  },\n\n  resetStatuses: function (statuses) {\n    for (const modifierName of modifiers.names) {\n      statuses[modifierName] = modifiers[modifierName].reset(statuses[modifierName] || {});\n    }\n\n    return statuses;\n  },\n\n  start: function ({ interaction }, signalName) {\n    modifiers.setOffsets(interaction, signalName === 'action-resume'? interaction.curCoords : interaction.startCoords);\n\n    modifiers.resetStatuses(interaction.modifierStatuses);\n    modifiers.setAll(interaction, interaction.startCoords.page, interaction.modifierStatuses);\n  },\n};\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.startOffset      = { left: 0, right: 0, top: 0, bottom: 0 };\n  interaction.modifierOffsets  = {};\n  interaction.modifierStatuses = modifiers.resetStatuses({});\n});\n\nInteraction.signals.on('action-start' , modifiers.start);\nInteraction.signals.on('action-resume', modifiers.start);\n\nInteraction.signals.on('before-action-move', function ({ interaction, preEnd, interactingBeforeMove }) {\n  const modifierResult = modifiers.setAll(interaction, interaction.curCoords.page, interaction.modifierStatuses, preEnd);\n\n  // don't fire an action move if a modifier would keep the event in the same\n  // cordinates as before\n  if (!modifierResult.shouldMove && interactingBeforeMove) {\n    interaction._dontFireMove = true;\n  }\n});\n\nInteraction.signals.on('action-end', function ({ interaction, event }) {\n  for (let i = 0; i < modifiers.names.length; i++) {\n    const modifierOptions = interaction.target.options[interaction.prepared.name][modifiers.names[i]];\n\n    // if the endOnly option is true for any modifier\n    if (shouldDo(modifierOptions, true, true)) {\n      // fire a move event at the modified coordinates\n      interaction.doMove({ event, preEnd: true });\n      break;\n    }\n  }\n});\n\nInteractEvent.signals.on('set-xy', function ({ iEvent, interaction, page, client, phase, action: actionName }) {\n  const target = interaction.target;\n\n  for (let i = 0; i < modifiers.names.length; i++) {\n    const modifierName = modifiers.names[i];\n    const modifier = modifiers[modifierName];\n\n    iEvent[modifierName] = modifier.modifyCoords(page, client, target, interaction.modifierStatuses[modifierName], actionName, phase);\n  }\n});\n\nfunction shouldDo (options, preEnd, requireEndOnly) {\n  return (options && options.enabled\n          && (preEnd || !options.endOnly)\n          && (!requireEndOnly || options.endOnly));\n}\n\nmodule.exports = modifiers;\n","const modifiers      = require('./index');\nconst utils          = require('../utils');\nconst defaultOptions = require('../defaultOptions');\n\nconst restrict = {\n  defaults: {\n    enabled    : false,\n    endOnly    : false,\n    restriction: null,\n    elementRect: null,\n  },\n\n  setOffset: function (interaction, interactable, element, rect, startOffset) {\n    const elementRect = interactable.options[interaction.prepared.name].restrict.elementRect;\n    const offset = {};\n\n    if (rect && elementRect) {\n      offset.left = startOffset.left - (rect.width  * elementRect.left);\n      offset.top  = startOffset.top  - (rect.height * elementRect.top);\n\n      offset.right  = startOffset.right  - (rect.width  * (1 - elementRect.right));\n      offset.bottom = startOffset.bottom - (rect.height * (1 - elementRect.bottom));\n    }\n    else {\n      offset.left = offset.top = offset.right = offset.bottom = 0;\n    }\n\n    return offset;\n  },\n\n  set: function (pageCoords, interaction, status) {\n    const target    = interaction.target;\n    const restrictOptions  = target && target.options[interaction.prepared.name].restrict;\n    let restriction = restrictOptions && restrictOptions.restriction;\n\n    if (!restriction) {\n      return status;\n    }\n\n    const page = status.useStatusXY\n      ? { x: status.x, y: status.y }\n      : utils.extend({}, pageCoords);\n\n    status.dx = 0;\n    status.dy = 0;\n    status.locked = false;\n\n    if (utils.isString(restriction)) {\n      if (restriction === 'parent') {\n        restriction = utils.parentNode(interaction.element);\n      }\n      else if (restriction === 'self') {\n        restriction = target.getRect(interaction.element);\n      }\n      else {\n        restriction = utils.closest(interaction.element, restriction);\n      }\n\n      if (!restriction) { return status; }\n    }\n\n    if (utils.isFunction(restriction)) {\n      restriction = restriction(page.x, page.y, interaction.element);\n    }\n\n    if (utils.isElement(restriction)) {\n      restriction = utils.getElementRect(restriction);\n    }\n\n    const rect = restriction;\n    let modifiedX;\n    let modifiedY;\n\n    const offset = interaction.modifierOffsets.restrict;\n\n    if (!restriction) {\n      modifiedX = page.x;\n      modifiedY = page.y;\n    }\n    // object is assumed to have\n    // x, y, width, height or\n    // left, top, right, bottom\n    else if ('x' in restriction && 'y' in restriction) {\n      modifiedX = Math.max(Math.min(rect.x + rect.width  - offset.right , page.x), rect.x + offset.left);\n      modifiedY = Math.max(Math.min(rect.y + rect.height - offset.bottom, page.y), rect.y + offset.top );\n    }\n    else {\n      modifiedX = Math.max(Math.min(rect.right  - offset.right , page.x), rect.left + offset.left);\n      modifiedY = Math.max(Math.min(rect.bottom - offset.bottom, page.y), rect.top  + offset.top );\n    }\n\n    status.dx = modifiedX - page.x;\n    status.dy = modifiedY - page.y;\n\n    status.changed = status.modifiedX !== modifiedX || status.modifiedY !== modifiedY;\n    status.locked = !!(status.dx || status.dy);\n\n    status.modifiedX = modifiedX;\n    status.modifiedY = modifiedY;\n\n    return status;\n  },\n\n  reset: function (status) {\n    status.dx = status.dy = 0;\n    status.modifiedX = status.modifiedY = NaN;\n    status.locked = false;\n    status.changed = true;\n\n    return status;\n  },\n\n  modifyCoords: function (page, client, interactable, status, actionName, phase) {\n    const options = interactable.options[actionName].restrict;\n    const elementRect = options && options.elementRect;\n\n    if (options && options.enabled\n        && !(phase === 'start' && elementRect && status.locked)) {\n\n      if (status.locked) {\n        page.x += status.dx;\n        page.y += status.dy;\n        client.x += status.dx;\n        client.y += status.dy;\n\n        return {\n          dx: status.dx,\n          dy: status.dy,\n        };\n      }\n    }\n  },\n};\n\nmodifiers.restrict = restrict;\nmodifiers.names.push('restrict');\n\ndefaultOptions.perAction.restrict = restrict.defaults;\n\nmodule.exports = restrict;\n","// This module adds the options.resize.restrictEdges setting which sets min and\n// max for the top, left, bottom and right edges of the target being resized.\n//\n// interact(target).resize({\n//   edges: { top: true, left: true },\n//   restrictEdges: {\n//     min: { top:   0, left:   0, right: 100, bottom: 100 },\n//     max: { top: 500, left: 500, right: 600, bottom: 600 },\n//   },\n// });\n\nconst modifiers      = require('./index');\nconst utils          = require('../utils');\nconst rectUtils      = require('../utils/rect');\nconst defaultOptions = require('../defaultOptions');\nconst resize         = require('../actions/resize');\n\nconst noMin = { top: -Infinity, left: -Infinity, bottom: -Infinity, right: -Infinity };\nconst noMax = { top: +Infinity, left: +Infinity, bottom: +Infinity, right: +Infinity };\n\nconst restrictEdges = {\n  defaults: {\n    enabled: false,\n    endOnly: false,\n    min: null,\n    max: null,\n    offset: null,\n  },\n\n  setOffset: function (interaction, interactable, element, rect, startOffset) {\n    const options = interactable.options[interaction.prepared.name].restrictEdges;\n\n    if (!options) {\n      return;\n    }\n\n    const offset = getRestrictionRect(offset, interaction);\n\n    if (offset) {\n      return {\n        top:    startOffset.top    + offset.y,\n        left:   startOffset.left   + offset.x,\n        bottom: startOffset.bottom + offset.y,\n        right:  startOffset.right  + offset.x,\n      };\n    }\n\n    return startOffset;\n  },\n\n  set: function (pageCoords, interaction, status) {\n    if (!interaction.interacting()) {\n      return status;\n    }\n\n    const target  = interaction.target;\n    const options = status.options || target && target.options[interaction.prepared.name].restrictEdges;\n    const edges = interaction.prepared.linkedEdges || interaction.prepared.edges;\n\n    if (!options.enabled || !edges) {\n      return status;\n    }\n\n    const page = status.useStatusXY\n      ? { x: status.x, y: status.y }\n      : utils.extend({}, pageCoords);\n    const min = rectUtils.xywhToTlbr(getRestrictionRect(options.min, interaction)) || noMin;\n    const max = rectUtils.xywhToTlbr(getRestrictionRect(options.max, interaction)) || noMax;\n    const offset = interaction.modifierOffsets.restrictEdges;\n\n    let modifiedX = page.x;\n    let modifiedY = page.y;\n\n    status.dx = 0;\n    status.dy = 0;\n    status.locked = false;\n\n    if (edges.top) {\n      modifiedY = Math.max(Math.min(max.top    + offset.top,    page.y), min.top    + offset.top);\n    }\n    else if (edges.bottom) {\n      modifiedY = Math.max(Math.min(max.bottom - offset.bottom, page.y), min.bottom - offset.bottom);\n    }\n    if (edges.left) {\n      modifiedX = Math.max(Math.min(max.left   + offset.left,   page.x), min.left   + offset.left);\n    }\n    else if (edges.right) {\n      modifiedX = Math.max(Math.min(max.right  - offset.right,  page.x), min.right  - offset.right);\n    }\n\n    status.dx = modifiedX - page.x;\n    status.dy = modifiedY - page.y;\n\n    status.changed = status.modifiedX !== modifiedX || status.modifiedY !== modifiedY;\n    status.locked = !!(status.dx || status.dy);\n\n    status.modifiedX = modifiedX;\n    status.modifiedY = modifiedY;\n\n    //console.log(status.dx, status.modifiedX, status.changed, status.locked);\n\n    return status;\n  },\n\n  reset: function (status) {\n    status.dx = status.dy = 0;\n    status.modifiedX = status.modifiedY = NaN;\n    status.locked = false;\n    status.changed = true;\n    status.options = null;\n\n    return status;\n  },\n\n  modifyCoords: function (page, client, interactable, status, actionName, phase) {\n    const options = status.options || interactable.options[actionName].restrictEdges;\n\n    if (options && options.enabled\n        && !(phase === 'start' && status.locked)) {\n\n      if (status.locked) {\n        page.x += status.dx;\n        page.y += status.dy;\n        client.x += status.dx;\n        client.y += status.dy;\n\n        return {\n          dx: status.dx,\n          dy: status.dy,\n        };\n      }\n    }\n  },\n\n  noMin,\n  noMax,\n  getRestrictionRect,\n};\n\nfunction getRestrictionRect (value, interaction) {\n  value = utils.getStringOptionResult(value, interaction.element) || value;\n\n  if (utils.isFunction(value)) {\n    value = value(interaction.resizeRects.inverted);\n  }\n\n  if (utils.isElement(value)) {\n    value = utils.getElementRect(value);\n  }\n\n  return value;\n}\n\nmodifiers.restrictEdges = restrictEdges;\nmodifiers.names.push('restrictEdges');\n\ndefaultOptions.perAction.restrictEdges = restrictEdges.defaults;\nresize.defaults.restrictEdges          = restrictEdges.defaults;\n\nmodule.exports = restrictEdges;\n","// This module adds the options.resize.restrictSize setting which sets min and\n// max width and height for the target being resized.\n//\n// interact(target).resize({\n//   edges: { top: true, left: true },\n//   restrictSize: {\n//     min: { width: -600, height: -600 },\n//     max: { width:  600, height:  600 },\n//   },\n// });\n\nconst modifiers      = require('./index');\nconst restrictEdges  = require('./restrictEdges');\nconst utils          = require('../utils');\nconst rectUtils      = require('../utils/rect');\nconst defaultOptions = require('../defaultOptions');\nconst resize         = require('../actions/resize');\n\nconst noMin = { width: -Infinity, height: -Infinity };\nconst noMax = { width: +Infinity, height: +Infinity };\n\nconst restrictSize = {\n  defaults: {\n    enabled: false,\n    endOnly: false,\n    min: null,\n    max: null,\n  },\n\n  setOffset: function () {},\n\n  set: function (pageCoords, interaction, status) {\n    if (!interaction.interacting()) {\n      return status;\n    }\n\n    const target  = interaction.target;\n    const options = target && target.options[interaction.prepared.name].restrictSize;\n    const edges = interaction.prepared.linkedEdges || interaction.prepared.edges;\n\n    if (!options.enabled || !edges) {\n      return status;\n    }\n\n    const rect = rectUtils.xywhToTlbr(interaction.resizeRects.inverted);\n\n    const minSize = rectUtils.tlbrToXywh(restrictEdges.getRestrictionRect(options.min, interaction)) || noMin;\n    const maxSize = rectUtils.tlbrToXywh(restrictEdges.getRestrictionRect(options.max, interaction)) || noMax;\n\n    status.options = {\n      enabled: options.enabled,\n      endOnly: options.endOnly,\n      min: utils.extend({}, restrictEdges.noMin),\n      max: utils.extend({}, restrictEdges.noMax),\n    };\n\n    if (edges.top) {\n      status.options.min.top = rect.bottom - maxSize.height;\n      status.options.max.top = rect.bottom - minSize.height;\n    }\n    else if (edges.bottom) {\n      status.options.min.bottom = rect.top + minSize.height;\n      status.options.max.bottom = rect.top + maxSize.height;\n    }\n    if (edges.left) {\n      status.options.min.left = rect.right - maxSize.width;\n      status.options.max.left = rect.right - minSize.width;\n    }\n    else if (edges.right) {\n      status.options.min.right = rect.left + minSize.width;\n      status.options.max.right = rect.left + maxSize.width;\n    }\n\n    return restrictEdges.set(pageCoords, interaction, status);\n  },\n\n  reset: restrictEdges.reset,\n\n  modifyCoords: restrictEdges.modifyCoords,\n};\n\nmodifiers.restrictSize = restrictSize;\nmodifiers.names.push('restrictSize');\n\ndefaultOptions.perAction.restrictSize = restrictSize.defaults;\nresize.defaults.restrictSize          = restrictSize.defaults;\n\nmodule.exports = restrictSize;\n","const modifiers      = require('./index');\nconst interact       = require('../interact');\nconst utils          = require('../utils');\nconst defaultOptions = require('../defaultOptions');\n\nconst snap = {\n  defaults: {\n    enabled: false,\n    endOnly: false,\n    range  : Infinity,\n    targets: null,\n    offsets: null,\n\n    relativePoints: null,\n  },\n\n  setOffset: function (interaction, interactable, element, rect, startOffset) {\n    const offsets = [];\n    const origin = utils.getOriginXY(interactable, element, interaction.prepared.name);\n    const snapOptions = interactable.options[interaction.prepared.name].snap || {};\n    let snapOffset;\n\n    if (snapOptions.offset === 'startCoords') {\n      snapOffset = {\n        x: interaction.startCoords.page.x - origin.x,\n        y: interaction.startCoords.page.y - origin.y,\n      };\n    }\n    else if (snapOptions.offset === 'self') {\n      snapOffset = {\n        x: rect.left - origin.x,\n        y: rect.top - origin.y,\n      };\n    }\n    else {\n      snapOffset = snapOptions.offset || { x: 0, y: 0 };\n    }\n\n    if (rect && snapOptions.relativePoints && snapOptions.relativePoints.length) {\n      for (const { x: relativeX, y: relativeY } of snapOptions.relativePoints) {\n        offsets.push({\n          x: startOffset.left - (rect.width  * relativeX) + snapOffset.x,\n          y: startOffset.top  - (rect.height * relativeY) + snapOffset.y,\n        });\n      }\n    }\n    else {\n      offsets.push(snapOffset);\n    }\n\n    return offsets;\n  },\n\n  set: function (pageCoords, interaction, status) {\n    const snapOptions = interaction.target.options[interaction.prepared.name].snap;\n    const targets = [];\n    let target;\n    let page;\n    let i;\n\n    if (status.useStatusXY) {\n      page = { x: status.x, y: status.y };\n    }\n    else {\n      const origin = utils.getOriginXY(interaction.target, interaction.element, interaction.prepared.name);\n\n      page = utils.extend({}, pageCoords);\n\n      page.x -= origin.x;\n      page.y -= origin.y;\n    }\n\n    status.realX = page.x;\n    status.realY = page.y;\n\n    const offsets = interaction.modifierOffsets.snap;\n    let len = snapOptions.targets? snapOptions.targets.length : 0;\n\n    for (const { x: offsetX, y: offsetY } of offsets) {\n      const relativeX = page.x - offsetX;\n      const relativeY = page.y - offsetY;\n\n      for (const snapTarget of snapOptions.targets) {\n        if (utils.isFunction(snapTarget)) {\n          target = snapTarget(relativeX, relativeY, interaction);\n        }\n        else {\n          target = snapTarget;\n        }\n\n        if (!target) { continue; }\n\n        targets.push({\n          x: utils.isNumber(target.x) ? (target.x + offsetX) : relativeX,\n          y: utils.isNumber(target.y) ? (target.y + offsetY) : relativeY,\n\n          range: utils.isNumber(target.range)? target.range: snapOptions.range,\n        });\n      }\n    }\n\n    const closest = {\n      target: null,\n      inRange: false,\n      distance: 0,\n      range: 0,\n      dx: 0,\n      dy: 0,\n    };\n\n    for (i = 0, len = targets.length; i < len; i++) {\n      target = targets[i];\n\n      const range = target.range;\n      const dx = target.x - page.x;\n      const dy = target.y - page.y;\n      const distance = utils.hypot(dx, dy);\n      let inRange = distance <= range;\n\n      // Infinite targets count as being out of range\n      // compared to non infinite ones that are in range\n      if (range === Infinity && closest.inRange && closest.range !== Infinity) {\n        inRange = false;\n      }\n\n      if (!closest.target || (inRange\n          // is the closest target in range?\n          ? (closest.inRange && range !== Infinity\n          // the pointer is relatively deeper in this target\n          ? distance / range < closest.distance / closest.range\n          // this target has Infinite range and the closest doesn't\n          : (range === Infinity && closest.range !== Infinity)\n          // OR this target is closer that the previous closest\n        || distance < closest.distance)\n          // The other is not in range and the pointer is closer to this target\n          : (!closest.inRange && distance < closest.distance))) {\n\n        closest.target = target;\n        closest.distance = distance;\n        closest.range = range;\n        closest.inRange = inRange;\n        closest.dx = dx;\n        closest.dy = dy;\n\n        status.range = range;\n      }\n    }\n\n    let snapChanged;\n\n    if (closest.target) {\n      snapChanged = (status.snappedX !== closest.target.x || status.snappedY !== closest.target.y);\n\n      status.snappedX = closest.target.x;\n      status.snappedY = closest.target.y;\n    }\n    else {\n      snapChanged = true;\n\n      status.snappedX = NaN;\n      status.snappedY = NaN;\n    }\n\n    status.dx = closest.dx;\n    status.dy = closest.dy;\n\n    status.changed = (snapChanged || (closest.inRange && !status.locked));\n    status.locked = closest.inRange;\n\n    return status;\n  },\n\n  reset: function (status) {\n    status.dx = status.dy = 0;\n    status.snappedX = status.snappedY = NaN;\n    status.locked = false;\n    status.changed = true;\n\n    return status;\n  },\n\n  modifyCoords: function (page, client, interactable, status, actionName, phase) {\n    const snapOptions = interactable.options[actionName].snap;\n    const relativePoints = snapOptions && snapOptions.relativePoints;\n\n    if (snapOptions && snapOptions.enabled\n        && !(phase === 'start' && relativePoints && relativePoints.length)) {\n\n      if (status.locked) {\n        page.x += status.dx;\n        page.y += status.dy;\n        client.x += status.dx;\n        client.y += status.dy;\n      }\n\n      return {\n        range  : status.range,\n        locked : status.locked,\n        x      : status.snappedX,\n        y      : status.snappedY,\n        realX  : status.realX,\n        realY  : status.realY,\n        dx     : status.dx,\n        dy     : status.dy,\n      };\n    }\n  },\n};\n\ninteract.createSnapGrid = function (grid) {\n  return function (x, y) {\n    const limits = grid.limits || {\n      left  : -Infinity,\n      right :  Infinity,\n      top   : -Infinity,\n      bottom:  Infinity,\n    };\n    let offsetX = 0;\n    let offsetY = 0;\n\n    if (utils.isObject(grid.offset)) {\n      offsetX = grid.offset.x;\n      offsetY = grid.offset.y;\n    }\n\n    const gridx = Math.round((x - offsetX) / grid.x);\n    const gridy = Math.round((y - offsetY) / grid.y);\n\n    const newX = Math.max(limits.left, Math.min(limits.right , gridx * grid.x + offsetX));\n    const newY = Math.max(limits.top , Math.min(limits.bottom, gridy * grid.y + offsetY));\n\n    return {\n      x: newX,\n      y: newY,\n      range: grid.range,\n    };\n  };\n};\n\nmodifiers.snap = snap;\nmodifiers.names.push('snap');\n\ndefaultOptions.perAction.snap = snap.defaults;\n\nmodule.exports = snap;\n","const pointerEvents = require('./index.js');\nconst Interaction   = require('../Interaction');\n\npointerEvents.signals.on('new', function ({ pointerEvent }) {\n  pointerEvent.count = (pointerEvent.count || 0) + 1;\n});\n\npointerEvents.signals.on('fired', function ({ interaction, pointerEvent, eventTarget, targets }) {\n  if (pointerEvent.type !== 'hold') { return; }\n\n  // get the repeat interval from the first eventable\n  const interval = targets[0].eventable.options.holdRepeatInterval;\n\n  // don't repeat if the interval is 0 or less\n  if (interval <= 0) { return; }\n\n  // set a timeout to fire the holdrepeat event\n  interaction.holdIntervalHandle = setTimeout(function () {\n    pointerEvents.collectEventTargets(interaction, pointerEvent, pointerEvent, eventTarget, 'hold');\n  }, interval);\n});\n\nfunction endHoldRepeat ({ interaction }) {\n  // set the interaction's holdStopTime property\n  // to stop further holdRepeat events\n  if (interaction.holdIntervalHandle) {\n    clearInterval(interaction.holdIntervalHandle);\n    interaction.holdIntervalHandle = null;\n  }\n}\n\nfor (const signal of ['move', 'up', 'cancel', 'endall']) {\n  Interaction.signals.on(signal, endHoldRepeat);\n}\n\n// don't repeat by default\npointerEvents.defaults.holdRepeatInterval = 0;\npointerEvents.types.push('holdrepeat');\n","const scope       = require('../scope');\nconst Interaction = require('../Interaction');\nconst utils       = require('../utils');\nconst browser     = require('../utils/browser');\nconst defaults    = require('../defaultOptions');\nconst signals     = require('../utils/Signals').new();\nconst { filter }  = require('../utils/arr');\n\nconst simpleSignals = [ 'down', 'up', 'up', 'cancel' ];\nconst simpleEvents = [ 'down', 'up', 'tap', 'cancel' ];\n\nfunction preventOriginalDefault () {\n  this.originalEvent.preventDefault();\n}\n\nfunction stopImmediatePropagation () {\n  this.immediatePropagationStopped = this.propagationStopped = true;\n}\n\nfunction stopPropagation () {\n  this.propagationStopped = true;\n}\n\nfunction firePointers (interaction, pointer, event, eventTarget, targets, eventType) {\n  const pointerIndex = interaction.getPointerIndex(pointer);\n  let pointerEvent = {};\n  let i;\n  // for tap events\n  let interval;\n  let createNewDoubleTap;\n\n  // if it's a doubletap then the event properties would have been\n  // copied from the tap event and provided as the pointer argument\n  if (eventType === 'doubletap') {\n    pointerEvent = pointer;\n  }\n  else {\n    utils.pointerExtend(pointerEvent, event);\n    if (event !== pointer) {\n      utils.pointerExtend(pointerEvent, pointer);\n    }\n\n    pointerEvent.preventDefault           = preventOriginalDefault;\n    pointerEvent.stopPropagation          = stopPropagation;\n    pointerEvent.stopImmediatePropagation = stopImmediatePropagation;\n    pointerEvent.interaction              = interaction;\n\n    pointerEvent.timeStamp     = new Date().getTime();\n    pointerEvent.originalEvent = event;\n    pointerEvent.type          = eventType;\n    pointerEvent.pointerId     = utils.getPointerId(pointer);\n    pointerEvent.pointerType   = interaction.mouse? 'mouse' : !browser.supportsPointerEvent? 'touch'\n      : utils.isString(pointer.pointerType)\n        ? pointer.pointerType\n        : [undefined, undefined,'touch', 'pen', 'mouse'][pointer.pointerType];\n  }\n\n  if (eventType === 'tap') {\n    pointerEvent.dt = pointerEvent.timeStamp - interaction.downTimes[pointerIndex];\n\n    interval = pointerEvent.timeStamp - interaction.tapTime;\n    createNewDoubleTap = !!(interaction.prevTap && interaction.prevTap.type !== 'doubletap'\n                            && interaction.prevTap.target === pointerEvent.target\n                            && interval < 500);\n\n    pointerEvent.double = createNewDoubleTap;\n\n    interaction.tapTime = pointerEvent.timeStamp;\n  }\n\n  const signalArg = {\n    interaction,\n    pointerEvent,\n    pointer,\n    event,\n    eventTarget,\n    targets,\n  };\n\n  signals.fire('new', signalArg);\n\n  for (i = 0; i < targets.length; i++) {\n    const target = targets[i];\n\n    pointerEvent.currentTarget = target.element;\n\n    for (const prop in target.props || {}) {\n      pointerEvent[prop] = target.props[prop];\n    }\n\n    const { x: originX, y: originY } = utils.getOriginXY(target.eventable, target.element);\n\n    pointerEvent.pageX   -= originX;\n    pointerEvent.pageY   -= originY;\n    pointerEvent.clientX -= originX;\n    pointerEvent.clientY -= originY;\n\n    pointerEvent.eventable = target.eventable;\n\n    target.eventable.fire(pointerEvent);\n\n    pointerEvent.pageX   += originX;\n    pointerEvent.pageY   += originY;\n    pointerEvent.clientX += originX;\n    pointerEvent.clientY += originY;\n\n    if (pointerEvent.immediatePropagationStopped\n        || (pointerEvent.propagationStopped\n            && (i + 1) < targets.length && targets[i + 1].element !== pointerEvent.currentTarget)) {\n      break;\n    }\n  }\n\n  signals.fire('fired', signalArg);\n\n  if (createNewDoubleTap) {\n    const doubleTap = {};\n\n    utils.extend(doubleTap, pointerEvent);\n\n    doubleTap.dt   = interval;\n    doubleTap.type = 'doubletap';\n\n    collectEventTargets(interaction, doubleTap, event, eventTarget, 'doubletap');\n\n    interaction.prevTap = doubleTap;\n  }\n  else if (eventType === 'tap') {\n    interaction.prevTap = pointerEvent;\n  }\n}\n\nfunction collectEventTargets (interaction, pointer, event, eventTarget, eventType) {\n  const pointerIndex = interaction.getPointerIndex(pointer);\n\n  // do not fire a tap event if the pointer was moved before being lifted\n  if (eventType === 'tap' && (interaction.pointerWasMoved\n      // or if the pointerup target is different to the pointerdown target\n      || !(interaction.downTargets[pointerIndex] && interaction.downTargets[pointerIndex] === eventTarget))) {\n    return;\n  }\n\n  let targets = [];\n  const path = utils.getPath(eventTarget);\n  const signalArg = {\n    targets,\n    interaction,\n    pointer,\n    event,\n    eventTarget,\n    eventType,\n    path,\n    element: null,\n  };\n\n  for (const element of path) {\n    signalArg.element = element;\n\n    signals.fire('collect-targets', signalArg);\n  }\n\n  if (eventType === 'hold') {\n    targets = filter(targets, function (target) {\n      return (target.eventable.options.holdDuration\n              === interaction.holdTimers[pointerIndex].duration);\n    });\n  }\n\n  // create the tap event even if there are no listeners so that\n  // doubletap can still be created and fired\n  if (targets.length || eventType === 'tap') {\n    firePointers(interaction, pointer, event, eventTarget, targets, eventType);\n  }\n}\n\nInteraction.signals.on('move', function ({ interaction, pointer, event, eventTarget, duplicateMove }) {\n  const pointerIndex = interaction.getPointerIndex(pointer);\n\n  if (!duplicateMove && (!interaction.pointerIsDown || interaction.pointerWasMoved)) {\n    if (interaction.pointerIsDown) {\n      clearTimeout(interaction.holdTimers[pointerIndex].timeout);\n    }\n\n    collectEventTargets(interaction, pointer, event, eventTarget, 'move');\n  }\n});\n\nInteraction.signals.on('down', function ({ interaction, pointer, event, eventTarget, pointerIndex }) {\n  // copy event to be used in timeout for IE8\n  const eventCopy = browser.isIE8? utils.extend({}, event) : event;\n  const timers = interaction.holdTimers;\n\n  if (!timers[pointerIndex]) {\n    timers[pointerIndex] = { duration: Infinity, timeout: null };\n  }\n\n  const timer = timers[pointerIndex];\n  const path = utils.getPath(eventTarget);\n  const signalArg = {\n    interaction,\n    pointer,\n    event,\n    eventTarget,\n    eventType: 'hold',\n    targets: [],\n    path,\n    element: null,\n  };\n\n  for (const element of path) {\n    signalArg.element = element;\n\n    signals.fire('collect-targets', signalArg);\n  }\n\n  if (!signalArg.targets.length) { return; }\n\n  let minDuration = Infinity;\n\n  for (let i = 0; i < signalArg.targets.length; i++) {\n    const target = signalArg.targets[i];\n    const holdDuration = target.eventable.options.holdDuration;\n\n    if (holdDuration < minDuration) {\n      minDuration = holdDuration;\n    }\n  }\n\n  timer.duration = minDuration;\n  timer.timeout = setTimeout(function () {\n\n    collectEventTargets(interaction,\n                        browser.isIE8? eventCopy : pointer,\n                        eventCopy,\n                        eventTarget,\n                        'hold');\n  }, minDuration);\n});\n\n['up', 'cancel'].forEach(function (signalName) {\n  Interaction.signals.on(signalName, function ({ interaction, pointerIndex }) {\n    if (interaction.holdTimers[pointerIndex]) {\n      clearTimeout(interaction.holdTimers[pointerIndex].timeout);\n    }\n  });\n});\n\nfunction createSignalListener (event) {\n  return function (arg) {\n    collectEventTargets(arg.interaction,\n                        arg.pointer,\n                        arg.event,\n                        arg.eventTarget,\n                        event);\n  };\n}\n\nfor (let i = 0; i < simpleSignals.length; i++) {\n  Interaction.signals.on(simpleSignals[i], createSignalListener(simpleEvents[i]));\n}\n\nInteraction.signals.on('new', function (interaction) {\n  interaction.prevTap = null;  // the most recent tap event on this interaction\n  interaction.tapTime = 0;     // time of the most recent tap event\n});\n\ndefaults.pointerEvents = {\n  holdDuration: 600,\n  ignoreFrom  : null,\n  allowFrom   : null,\n  origin      : { x: 0, y: 0 },\n};\n\nmodule.exports = scope.pointerEvents = {\n  firePointers,\n  collectEventTargets,\n  preventOriginalDefault,\n  signals,\n  defaults: defaults.pointerEvents,\n  types: [\n    'down',\n    'move',\n    'up',\n    'cancel',\n    'tap',\n    'doubletap',\n    'hold',\n  ],\n};\n","const pointerEvents = require('./index');\nconst Interactable  = require('../Interactable');\nconst browser       = require('../utils/browser');\nconst isType        = require('../utils/isType');\nconst domUtils      = require('../utils/domUtils');\nconst scope         = require('../scope');\nconst extend        = require('../utils/extend');\nconst { merge }     = require('../utils/arr');\n\npointerEvents.signals.on('collect-targets', function ({ targets, element, eventType, eventTarget }) {\n  function collectSelectors (interactable, selector, context) {\n    const els = browser.useMatchesSelectorPolyfill\n        ? context.querySelectorAll(selector)\n        : undefined;\n\n    const eventable = interactable.events;\n    const options = eventable.options;\n\n    if (eventable[eventType]\n        && isType.isElement(element)\n        && domUtils.matchesSelector(element, selector, els)\n        && interactable.testIgnoreAllow(options, element, eventTarget)) {\n\n      targets.push({\n        element,\n        eventable,\n        props: { interactable },\n      });\n    }\n  }\n\n  const interactable = scope.interactables.get(element);\n\n  if (interactable) {\n    const eventable = interactable.events;\n    const options = eventable.options;\n\n    if (eventable[eventType]\n        && interactable.testIgnoreAllow(options, element, eventTarget)) {\n      targets.push({\n        element,\n        eventable,\n        props: { interactable },\n      });\n    }\n  }\n\n  scope.interactables.forEachSelector(collectSelectors, element);\n});\n\nInteractable.signals.on('new', function ({ interactable }) {\n  interactable.events.getRect = function (element) {\n    return interactable.getRect(element);\n  };\n});\n\nInteractable.signals.on('set', function ({ interactable, options }) {\n  extend(interactable.events.options, pointerEvents.defaults);\n  extend(interactable.events.options, options);\n});\n\nmerge(Interactable.eventTypes, pointerEvents.types);\n\nInteractable.prototype.pointerEvents = function (options) {\n  extend(this.events.options, options);\n\n  return this;\n};\n\nconst __backCompatOption = Interactable.prototype._backCompatOption;\n\nInteractable.prototype._backCompatOption = function (optionName, newValue) {\n  const ret = __backCompatOption.call(this, optionName, newValue);\n\n  if (ret === this) {\n    this.events.options[optionName] = newValue;\n  }\n\n  return ret;\n};\n\nInteractable.settingsMethods.push('pointerEvents');\n","const utils   = require('./utils');\nconst extend  = require('./utils/extend');\nconst events  = require('./utils/events');\nconst signals = require('./utils/Signals').new();\n\nconst scope = {\n  signals,\n  events,\n  utils,\n\n  documents: [],  // all documents being listened to\n\n  addDocument: function (doc, win) {\n    // do nothing if document is already known\n    if (utils.contains(scope.documents, doc)) { return false; }\n\n    win = win || scope.getWindow(doc);\n\n    scope.documents.push(doc);\n    events.documents.push(doc);\n\n    // don't add an unload event for the main document\n    // so that the page may be cached in browser history\n    if (doc !== scope.document) {\n      events.add(win, 'unload', scope.onWindowUnload);\n    }\n\n    signals.fire('add-document', { doc, win });\n  },\n\n  removeDocument: function (doc, win) {\n    const index = utils.indexOf(scope.documents, doc);\n\n    win = win || scope.getWindow(doc);\n\n    events.remove(win, 'unload', scope.onWindowUnload);\n\n    scope.documents.splice(index, 1);\n    events.documents.splice(index, 1);\n\n    signals.fire('remove-document', { win, doc });\n  },\n\n  onWindowUnload: function () {\n    scope.removeDocument(this.document, this);\n  },\n};\n\nextend(scope, require('./utils/window'));\nextend(scope, require('./utils/domObjects'));\n\nmodule.exports = scope;\n","const { indexOf } = require('./arr');\n\nclass Signals {\n  constructor () {\n    this.listeners = {\n      // signalName: [listeners],\n    };\n  }\n\n  on (name, listener) {\n    if (!this.listeners[name]) {\n      this.listeners[name] = [listener];\n      return;\n    }\n\n    this.listeners[name].push(listener);\n  }\n\n  off (name, listener) {\n    if (!this.listeners[name]) { return; }\n\n    const index = indexOf(this.listeners[name], listener);\n\n    if (index !== -1) {\n      this.listeners[name].splice(index, 1);\n    }\n  }\n\n  fire (name, arg) {\n    const targetListeners = this.listeners[name];\n\n    if (!targetListeners) { return; }\n\n    for (let i = 0; i < targetListeners.length; i++) {\n      if (targetListeners[i](arg, name) === false) {\n        return;\n      }\n    }\n  }\n}\n\nSignals.new = function () {\n  return new Signals();\n};\n\nmodule.exports = Signals;\n","function indexOf (array, target) {\n  for (let i = 0, len = array.length; i < len; i++) {\n    if (array[i] === target) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nfunction contains (array, target) {\n  return indexOf(array, target) !== -1;\n}\n\nfunction merge (target, source) {\n  for (let i = 0; i < source.length; i++) {\n    target.push(source[i]);\n  }\n\n  return target;\n}\n\nfunction filter (array, test) {\n  const result = [];\n\n  for (let i = 0; i < array.length; i++) {\n    if (test(array[i])) {\n      result.push(array[i]);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = {\n  indexOf,\n  contains,\n  merge,\n  filter,\n};\n","const win        = require('./window');\nconst isType     = require('./isType');\nconst domObjects = require('./domObjects');\n\nconst browser = {\n  // Does the browser support touch input?\n  supportsTouch: !!(('ontouchstart' in win.window) || isType.isFunction(win.window.DocumentTouch)\n                     && domObjects.document instanceof win.DocumentTouch),\n\n  // Does the browser support PointerEvents\n  supportsPointerEvent: !!domObjects.PointerEvent,\n\n  isIE8: ('attachEvent' in win.window) && !('addEventListener' in win.window),\n\n  // Opera Mobile must be handled differently\n  isOperaMobile: (navigator.appName === 'Opera'\n      && browser.supportsTouch\n      && navigator.userAgent.match('Presto')),\n\n  // scrolling doesn't change the result of getClientRects on iOS 7\n  isIOS7: (/iP(hone|od|ad)/.test(navigator.platform)\n           && /OS 7[^\\d]/.test(navigator.appVersion)),\n\n  isIe9OrOlder: /MSIE (8|9)/.test(navigator.userAgent),\n\n  // prefix matchesSelector\n  prefixedMatchesSelector: 'matches' in Element.prototype\n    ? 'matches': 'webkitMatchesSelector' in Element.prototype\n    ? 'webkitMatchesSelector': 'mozMatchesSelector' in Element.prototype\n    ? 'mozMatchesSelector': 'oMatchesSelector' in Element.prototype\n    ? 'oMatchesSelector': 'msMatchesSelector',\n\n  useMatchesSelectorPolyfill: false,\n\n  pEventTypes: (domObjects.PointerEvent\n    ? (domObjects.PointerEvent === win.window.MSPointerEvent\n      ? {\n        up:     'MSPointerUp',\n        down:   'MSPointerDown',\n        over:   'mouseover',\n        out:    'mouseout',\n        move:   'MSPointerMove',\n        cancel: 'MSPointerCancel',\n      }\n      : {\n        up:     'pointerup',\n        down:   'pointerdown',\n        over:   'pointerover',\n        out:    'pointerout',\n        move:   'pointermove',\n        cancel: 'pointercancel',\n      })\n    : null),\n\n  // because Webkit and Opera still use 'mousewheel' event type\n  wheelEvent: 'onmousewheel' in domObjects.document? 'mousewheel': 'wheel',\n\n};\n\nbrowser.useMatchesSelectorPolyfill = !isType.isFunction(Element.prototype[browser.prefixedMatchesSelector]);\n\nmodule.exports = browser;\n","const domObjects = {};\nconst win = require('./window').window;\n\nfunction blank () {}\n\ndomObjects.document           = win.document;\ndomObjects.DocumentFragment   = win.DocumentFragment   || blank;\ndomObjects.SVGElement         = win.SVGElement         || blank;\ndomObjects.SVGSVGElement      = win.SVGSVGElement      || blank;\ndomObjects.SVGElementInstance = win.SVGElementInstance || blank;\ndomObjects.HTMLElement        = win.HTMLElement        || win.Element;\n\ndomObjects.Event        = win.Event;\ndomObjects.Touch        = win.Touch || blank;\ndomObjects.PointerEvent = (win.PointerEvent || win.MSPointerEvent);\n\nmodule.exports = domObjects;\n","const win        = require('./window');\nconst browser    = require('./browser');\nconst isType     = require('./isType');\nconst domObjects = require('./domObjects');\n\nconst domUtils = {\n  nodeContains: function (parent, child) {\n    while (child) {\n      if (child === parent) {\n        return true;\n      }\n\n      child = child.parentNode;\n    }\n\n    return false;\n  },\n\n  closest: function (element, selector) {\n    while (isType.isElement(element)) {\n      if (domUtils.matchesSelector(element, selector)) { return element; }\n\n      element = domUtils.parentNode(element);\n    }\n\n    return null;\n  },\n\n  parentNode: function (node) {\n    let parent = node.parentNode;\n\n    if (isType.isDocFrag(parent)) {\n      // skip past #shado-root fragments\n      while ((parent = parent.host) && isType.isDocFrag(parent)) {\n        continue;\n      }\n\n      return parent;\n    }\n\n    return parent;\n  },\n\n  // taken from http://tanalin.com/en/blog/2012/12/matches-selector-ie8/ and modified\n  matchesSelectorPolyfill: browser.useMatchesSelectorPolyfill\n    ? function (element, selector, elems) {\n      elems = elems || element.parentNode.querySelectorAll(selector);\n\n      for (let i = 0, len = elems.length; i < len; i++) {\n        if (elems[i] === element) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n    : null,\n\n  matchesSelector: function (element, selector, nodeList) {\n    if (browser.useMatchesSelectorPolyfill) {\n      return domUtils.matchesSelectorPolyfill(element, selector, nodeList);\n    }\n\n    // remove /deep/ from selectors if shadowDOM polyfill is used\n    if (win.window !== win.realWindow) {\n      selector = selector.replace(/\\/deep\\//g, ' ');\n    }\n\n    return element[browser.prefixedMatchesSelector](selector);\n  },\n\n  // Test for the element that's \"above\" all other qualifiers\n  indexOfDeepestElement: function (elements) {\n    let deepestZoneParents = [];\n    let dropzoneParents = [];\n    let dropzone;\n    let deepestZone = elements[0];\n    let index = deepestZone? 0: -1;\n    let parent;\n    let child;\n    let i;\n    let n;\n\n    for (i = 1; i < elements.length; i++) {\n      dropzone = elements[i];\n\n      // an element might belong to multiple selector dropzones\n      if (!dropzone || dropzone === deepestZone) {\n        continue;\n      }\n\n      if (!deepestZone) {\n        deepestZone = dropzone;\n        index = i;\n        continue;\n      }\n\n      // check if the deepest or current are document.documentElement or document.rootElement\n      // - if the current dropzone is, do nothing and continue\n      if (dropzone.parentNode === dropzone.ownerDocument) {\n        continue;\n      }\n      // - if deepest is, update with the current dropzone and continue to next\n      else if (deepestZone.parentNode === dropzone.ownerDocument) {\n        deepestZone = dropzone;\n        index = i;\n        continue;\n      }\n\n      if (!deepestZoneParents.length) {\n        parent = deepestZone;\n        while (parent.parentNode && parent.parentNode !== parent.ownerDocument) {\n          deepestZoneParents.unshift(parent);\n          parent = parent.parentNode;\n        }\n      }\n\n      // if this element is an svg element and the current deepest is\n      // an HTMLElement\n      if (deepestZone instanceof domObjects.HTMLElement\n          && dropzone instanceof domObjects.SVGElement\n          && !(dropzone instanceof domObjects.SVGSVGElement)) {\n\n        if (dropzone === deepestZone.parentNode) {\n          continue;\n        }\n\n        parent = dropzone.ownerSVGElement;\n      }\n      else {\n        parent = dropzone;\n      }\n\n      dropzoneParents = [];\n\n      while (parent.parentNode !== parent.ownerDocument) {\n        dropzoneParents.unshift(parent);\n        parent = parent.parentNode;\n      }\n\n      n = 0;\n\n      // get (position of last common ancestor) + 1\n      while (dropzoneParents[n] && dropzoneParents[n] === deepestZoneParents[n]) {\n        n++;\n      }\n\n      const parents = [\n        dropzoneParents[n - 1],\n        dropzoneParents[n],\n        deepestZoneParents[n],\n      ];\n\n      child = parents[0].lastChild;\n\n      while (child) {\n        if (child === parents[1]) {\n          deepestZone = dropzone;\n          index = i;\n          deepestZoneParents = [];\n\n          break;\n        }\n        else if (child === parents[2]) {\n          break;\n        }\n\n        child = child.previousSibling;\n      }\n    }\n\n    return index;\n  },\n\n  matchesUpTo: function (element, selector, limit) {\n    while (isType.isElement(element)) {\n      if (domUtils.matchesSelector(element, selector)) {\n        return true;\n      }\n\n      element = domUtils.parentNode(element);\n\n      if (element === limit) {\n        return domUtils.matchesSelector(element, selector);\n      }\n    }\n\n    return false;\n  },\n\n  getActualElement: function (element) {\n    return (element instanceof domObjects.SVGElementInstance\n      ? element.correspondingUseElement\n      : element);\n  },\n\n  getScrollXY: function (relevantWindow) {\n    relevantWindow = relevantWindow || win.window;\n    return {\n      x: relevantWindow.scrollX || relevantWindow.document.documentElement.scrollLeft,\n      y: relevantWindow.scrollY || relevantWindow.document.documentElement.scrollTop,\n    };\n  },\n\n  getElementClientRect: function (element) {\n    const clientRect = (element instanceof domObjects.SVGElement\n      ? element.getBoundingClientRect()\n      : element.getClientRects()[0]);\n\n    return clientRect && {\n      left  : clientRect.left,\n      right : clientRect.right,\n      top   : clientRect.top,\n      bottom: clientRect.bottom,\n      width : clientRect.width  || clientRect.right  - clientRect.left,\n      height: clientRect.height || clientRect.bottom - clientRect.top,\n    };\n  },\n\n  getElementRect: function (element) {\n    const clientRect = domUtils.getElementClientRect(element);\n\n    if (!browser.isIOS7 && clientRect) {\n      const scroll = domUtils.getScrollXY(win.getWindow(element));\n\n      clientRect.left   += scroll.x;\n      clientRect.right  += scroll.x;\n      clientRect.top    += scroll.y;\n      clientRect.bottom += scroll.y;\n    }\n\n    return clientRect;\n  },\n\n  getPath: function (element) {\n    const path = [];\n\n    while (element) {\n      path.push(element);\n      element = domUtils.parentNode(element);\n    }\n\n    return path;\n  },\n};\n\nmodule.exports = domUtils;\n","const arr       = require('./arr');\nconst isType    = require('./isType');\nconst domUtils  = require('./domUtils');\nconst indexOf   = arr.indexOf;\nconst contains  = arr.contains;\nconst getWindow = require('./window').getWindow;\nconst pExtend   = require('./pointerExtend');\n\nconst useAttachEvent = ('attachEvent' in window) && !('addEventListener' in window);\nconst addEvent       = useAttachEvent?  'attachEvent': 'addEventListener';\nconst removeEvent    = useAttachEvent?  'detachEvent': 'removeEventListener';\nconst on             = useAttachEvent? 'on': '';\n\nconst elements          = [];\nconst targets           = [];\nconst attachedListeners = [];\n\n// {\n//   type: {\n//     selectors: ['selector', ...],\n//     contexts : [document, ...],\n//     listeners: [[listener, useCapture], ...]\n//   }\n//  }\nconst delegatedEvents = {};\n\nconst documents = [];\n\nfunction add (element, type, listener, useCapture) {\n  let elementIndex = indexOf(elements, element);\n  let target = targets[elementIndex];\n\n  if (!target) {\n    target = {\n      events: {},\n      typeCount: 0,\n    };\n\n    elementIndex = elements.push(element) - 1;\n    targets.push(target);\n\n    attachedListeners.push((useAttachEvent ? {\n      supplied: [],\n      wrapped : [],\n      useCount: [],\n    } : null));\n  }\n\n  if (!target.events[type]) {\n    target.events[type] = [];\n    target.typeCount++;\n  }\n\n  if (!contains(target.events[type], listener)) {\n    let ret;\n\n    if (useAttachEvent) {\n      const { supplied, wrapped, useCount } = attachedListeners[elementIndex];\n      const listenerIndex = indexOf(supplied, listener);\n\n      const wrappedListener = wrapped[listenerIndex] || function (event) {\n        if (!event.immediatePropagationStopped) {\n          event.target = event.srcElement;\n          event.currentTarget = element;\n\n          event.preventDefault           = event.preventDefault           || preventDef;\n          event.stopPropagation          = event.stopPropagation          || stopProp;\n          event.stopImmediatePropagation = event.stopImmediatePropagation || stopImmProp;\n\n          if (/mouse|click/.test(event.type)) {\n            event.pageX = event.clientX + getWindow(element).document.documentElement.scrollLeft;\n            event.pageY = event.clientY + getWindow(element).document.documentElement.scrollTop;\n          }\n\n          listener(event);\n        }\n      };\n\n      ret = element[addEvent](on + type, wrappedListener, !!useCapture);\n\n      if (listenerIndex === -1) {\n        supplied.push(listener);\n        wrapped.push(wrappedListener);\n        useCount.push(1);\n      }\n      else {\n        useCount[listenerIndex]++;\n      }\n    }\n    else {\n      ret = element[addEvent](type, listener, !!useCapture);\n    }\n    target.events[type].push(listener);\n\n    return ret;\n  }\n}\n\nfunction remove (element, type, listener, useCapture) {\n  const elementIndex = indexOf(elements, element);\n  const target = targets[elementIndex];\n\n  if (!target || !target.events) {\n    return;\n  }\n\n  let wrappedListener = listener;\n  let listeners;\n  let listenerIndex;\n\n  if (useAttachEvent) {\n    listeners = attachedListeners[elementIndex];\n    listenerIndex = indexOf(listeners.supplied, listener);\n    wrappedListener = listeners.wrapped[listenerIndex];\n  }\n\n  if (type === 'all') {\n    for (type in target.events) {\n      if (target.events.hasOwnProperty(type)) {\n        remove(element, type, 'all');\n      }\n    }\n    return;\n  }\n\n  if (target.events[type]) {\n    const len = target.events[type].length;\n\n    if (listener === 'all') {\n      for (let i = 0; i < len; i++) {\n        remove(element, type, target.events[type][i], !!useCapture);\n      }\n      return;\n    }\n    else {\n      for (let i = 0; i < len; i++) {\n        if (target.events[type][i] === listener) {\n          element[removeEvent](on + type, wrappedListener, !!useCapture);\n          target.events[type].splice(i, 1);\n\n          if (useAttachEvent && listeners) {\n            listeners.useCount[listenerIndex]--;\n            if (listeners.useCount[listenerIndex] === 0) {\n              listeners.supplied.splice(listenerIndex, 1);\n              listeners.wrapped.splice(listenerIndex, 1);\n              listeners.useCount.splice(listenerIndex, 1);\n            }\n          }\n\n          break;\n        }\n      }\n    }\n\n    if (target.events[type] && target.events[type].length === 0) {\n      target.events[type] = null;\n      target.typeCount--;\n    }\n  }\n\n  if (!target.typeCount) {\n    targets.splice(elementIndex, 1);\n    elements.splice(elementIndex, 1);\n    attachedListeners.splice(elementIndex, 1);\n  }\n}\n\nfunction addDelegate (selector, context, type, listener, useCapture) {\n  if (!delegatedEvents[type]) {\n    delegatedEvents[type] = {\n      selectors: [],\n      contexts : [],\n      listeners: [],\n    };\n\n    // add delegate listener functions\n    for (let i = 0; i < documents.length; i++) {\n      add(documents[i], type, delegateListener);\n      add(documents[i], type, delegateUseCapture, true);\n    }\n  }\n\n  const delegated = delegatedEvents[type];\n  let index;\n\n  for (index = delegated.selectors.length - 1; index >= 0; index--) {\n    if (delegated.selectors[index] === selector\n        && delegated.contexts[index] === context) {\n      break;\n    }\n  }\n\n  if (index === -1) {\n    index = delegated.selectors.length;\n\n    delegated.selectors.push(selector);\n    delegated.contexts .push(context);\n    delegated.listeners.push([]);\n  }\n\n  // keep listener and useCapture flag\n  delegated.listeners[index].push([listener, useCapture]);\n}\n\nfunction removeDelegate (selector, context, type, listener, useCapture) {\n  const delegated = delegatedEvents[type];\n  let matchFound = false;\n  let index;\n\n  if (!delegated) { return; }\n\n  // count from last index of delegated to 0\n  for (index = delegated.selectors.length - 1; index >= 0; index--) {\n    // look for matching selector and context Node\n    if (delegated.selectors[index] === selector\n        && delegated.contexts[index] === context) {\n\n      const listeners = delegated.listeners[index];\n\n      // each item of the listeners array is an array: [function, useCaptureFlag]\n      for (let i = listeners.length - 1; i >= 0; i--) {\n        const fn = listeners[i][0];\n        const useCap = listeners[i][1];\n\n        // check if the listener functions and useCapture flags match\n        if (fn === listener && useCap === useCapture) {\n          // remove the listener from the array of listeners\n          listeners.splice(i, 1);\n\n          // if all listeners for this interactable have been removed\n          // remove the interactable from the delegated arrays\n          if (!listeners.length) {\n            delegated.selectors.splice(index, 1);\n            delegated.contexts .splice(index, 1);\n            delegated.listeners.splice(index, 1);\n\n            // remove delegate function from context\n            remove(context, type, delegateListener);\n            remove(context, type, delegateUseCapture, true);\n\n            // remove the arrays if they are empty\n            if (!delegated.selectors.length) {\n              delegatedEvents[type] = null;\n            }\n          }\n\n          // only remove one listener\n          matchFound = true;\n          break;\n        }\n      }\n\n      if (matchFound) { break; }\n    }\n  }\n}\n\n// bound to the interactable context when a DOM event\n// listener is added to a selector interactable\nfunction delegateListener (event, useCapture) {\n  const fakeEvent = {};\n  const delegated = delegatedEvents[event.type];\n  const eventTarget = (domUtils.getActualElement(event.path\n    ? event.path[0]\n    : event.target));\n  let element = eventTarget;\n\n  useCapture = useCapture? true: false;\n\n  // duplicate the event so that currentTarget can be changed\n  pExtend(fakeEvent, event);\n\n  fakeEvent.originalEvent = event;\n  fakeEvent.preventDefault = preventOriginalDefault;\n\n  // climb up document tree looking for selector matches\n  while (isType.isElement(element)) {\n    for (let i = 0; i < delegated.selectors.length; i++) {\n      const selector = delegated.selectors[i];\n      const context = delegated.contexts[i];\n\n      if (domUtils.matchesSelector(element, selector)\n          && domUtils.nodeContains(context, eventTarget)\n          && domUtils.nodeContains(context, element)) {\n\n        const listeners = delegated.listeners[i];\n\n        fakeEvent.currentTarget = element;\n\n        for (let j = 0; j < listeners.length; j++) {\n          if (listeners[j][1] === useCapture) {\n            listeners[j][0](fakeEvent);\n          }\n        }\n      }\n    }\n\n    element = domUtils.parentNode(element);\n  }\n}\n\nfunction delegateUseCapture (event) {\n  return delegateListener.call(this, event, true);\n}\n\nfunction preventDef () {\n  this.returnValue = false;\n}\n\nfunction preventOriginalDefault () {\n  this.originalEvent.preventDefault();\n}\n\nfunction stopProp () {\n  this.cancelBubble = true;\n}\n\nfunction stopImmProp () {\n  this.cancelBubble = true;\n  this.immediatePropagationStopped = true;\n}\n\nmodule.exports = {\n  add,\n  remove,\n\n  addDelegate,\n  removeDelegate,\n\n  delegateListener,\n  delegateUseCapture,\n  delegatedEvents,\n  documents,\n\n  useAttachEvent,\n\n  _elements: elements,\n  _targets: targets,\n  _attachedListeners: attachedListeners,\n};\n","module.exports = function extend (dest, source) {\n  for (const prop in source) {\n    dest[prop] = source[prop];\n  }\n  return dest;\n};\n","const { closest, parentNode, getElementRect } = require('./domUtils');\nconst { isElement, isFunction, trySelector }  = require('./isType');\n\nmodule.exports = function (target, element, action) {\n  let origin = (action\n                ? target.options[action].origin\n                : target.options.origin);\n\n  if (origin === 'parent') {\n    origin = parentNode(element);\n  }\n  else if (origin === 'self') {\n    origin = target.getRect(element);\n  }\n  else if (trySelector(origin)) {\n    origin = closest(element, origin) || { x: 0, y: 0 };\n  }\n\n  if (isFunction(origin)) {\n    origin = origin(target && element);\n  }\n\n  if (isElement(origin))  {\n    origin = getElementRect(origin);\n  }\n\n  origin.x = ('x' in origin)? origin.x : origin.left;\n  origin.y = ('y' in origin)? origin.y : origin.top;\n\n  return origin;\n};\n","module.exports = (x, y) =>  Math.sqrt(x * x + y * y);\n","const extend = require('./extend');\nconst win    = require('./window');\n\nconst utils = {\n  warnOnce: function (method, message) {\n    let warned = false;\n\n    return function () {\n      if (!warned) {\n        win.window.console.warn(message);\n        warned = true;\n      }\n\n      return method.apply(this, arguments);\n    };\n  },\n\n  // http://stackoverflow.com/a/5634528/2280888\n  _getQBezierValue: function (t, p1, p2, p3) {\n    const iT = 1 - t;\n    return iT * iT * p1 + 2 * iT * t * p2 + t * t * p3;\n  },\n\n  getQuadraticCurvePoint: function (startX, startY, cpX, cpY, endX, endY, position) {\n    return {\n      x:  utils._getQBezierValue(position, startX, cpX, endX),\n      y:  utils._getQBezierValue(position, startY, cpY, endY),\n    };\n  },\n\n  // http://gizma.com/easing/\n  easeOutQuad: function (t, b, c, d) {\n    t /= d;\n    return -c * t*(t-2) + b;\n  },\n\n  copyAction: function (dest, src) {\n    dest.name  = src.name;\n    dest.axis  = src.axis;\n    dest.edges = src.edges;\n\n    return dest;\n  },\n\n  getStringOptionResult: function (value, interactable, element) {\n    if (!utils.isString(value)) {\n      return null;\n    }\n\n    if (value === 'parent') {\n      value = utils.parentNode(element);\n    }\n    else if (value === 'self') {\n      value = interactable.getRect(element);\n    }\n    else {\n      value = utils.closest(element, value);\n    }\n\n    return value;\n  },\n\n  extend     : extend,\n  hypot      : require('./hypot'),\n  getOriginXY: require('./getOriginXY'),\n};\n\nextend(utils, require('./arr'));\nextend(utils, require('./isType'));\nextend(utils, require('./domUtils'));\nextend(utils, require('./pointerUtils'));\n\nmodule.exports = utils;\n","const scope   = require('../scope');\nconst utils   = require('./index');\nconst browser = require('./browser');\n\nconst finder = {\n  methodOrder: [ 'simulationResume', 'mouse', 'hasPointer', 'idle' ],\n\n  search: function (pointer, eventType, eventTarget) {\n    const mouseEvent = (/mouse/i.test(pointer.pointerType || eventType)\n                        // MSPointerEvent.MSPOINTER_TYPE_MOUSE\n                        || pointer.pointerType === 4);\n    const pointerId = utils.getPointerId(pointer);\n    const details = { pointer, pointerId, mouseEvent, eventType, eventTarget };\n\n    for (const method of finder.methodOrder) {\n      const interaction = finder[method](details);\n\n      if (interaction) {\n        return interaction;\n      }\n    }\n  },\n\n  // try to resume simulation with a new pointer\n  simulationResume: function ({ mouseEvent, eventType, eventTarget }) {\n    if (!/down|start/i.test(eventType)) {\n      return null;\n    }\n\n    for (const interaction of scope.interactions) {\n      let element = eventTarget;\n\n      if (interaction.simulation && interaction.simulation.allowResume\n          && (interaction.mouse === mouseEvent)) {\n        while (element) {\n          // if the element is the interaction element\n          if (element === interaction.element) {\n            return interaction;\n          }\n          element = utils.parentNode(element);\n        }\n      }\n    }\n\n    return null;\n  },\n\n  // if it's a mouse interaction\n  mouse: function ({ pointerId, mouseEvent, eventType }) {\n    if (!mouseEvent && (browser.supportsTouch || browser.supportsPointerEvent)) {\n      return null;\n    }\n\n    let firstNonActive;\n\n    for (const interaction of scope.interactions) {\n      if (interaction.mouse) {\n        // if it's a down event, skip interactions with running simulations\n        if (interaction.simulation && !utils.contains(interaction.pointerIds, pointerId)) { continue; }\n\n        // if the interaction is active, return it immediately\n        if (interaction.interacting()) {\n          return interaction;\n        }\n        // otherwise save it and look for another active interaction\n        else if (!firstNonActive) {\n          firstNonActive = interaction;\n        }\n      }\n    }\n\n    // if no active mouse interaction was found use the first inactive mouse\n    // interaction\n    if (firstNonActive) {\n      return firstNonActive;\n    }\n\n    // Find any interaction specifically for mouse.\n    // ignore the interaction if the eventType is a mousedown, and a simulation\n    // is active\n    for (const interaction of scope.interactions) {\n      if (interaction.mouse && !(/down/.test(eventType) && interaction.simulation)) {\n        return interaction;\n      }\n    }\n\n    return null;\n  },\n\n  // get interaction that has this pointer\n  hasPointer: function ({ pointerId }) {\n    for (const interaction of scope.interactions) {\n      if (utils.contains(interaction.pointerIds, pointerId)) {\n        return interaction;\n      }\n    }\n  },\n\n  // get first idle interaction\n  idle: function ({ mouseEvent }) {\n    for (const interaction of scope.interactions) {\n      // if there's already a pointer held down\n      if (interaction.pointerIds.length === 1) {\n        const target = interaction.target;\n        // don't add this pointer if there is a target interactable and it\n        // isn't gesturable\n        if (target && !target.options.gesture.enabled) {\n          continue;\n        }\n      }\n      // maximum of 2 pointers per interaction\n      else if (interaction.pointerIds.length >= 2) {\n        continue;\n      }\n\n      if (!interaction.interacting() && !(!mouseEvent && interaction.mouse)) {\n        return interaction;\n      }\n    }\n\n    return null;\n  },\n};\n\nmodule.exports = finder;\n","const win        = require('./window');\nconst isWindow   = require('./isWindow');\nconst domObjects = require('./domObjects');\n\nconst isType = {\n  isElement  : function (o) {\n    if (!o || (typeof o !== 'object')) { return false; }\n\n    const _window = win.getWindow(o) || win.window;\n\n    return (/object|function/.test(typeof _window.Element)\n      ? o instanceof _window.Element //DOM2\n      : o.nodeType === 1 && typeof o.nodeName === 'string');\n  },\n\n  isArray    : null,\n\n  isWindow   : function (thing) { return thing === win.window || isWindow(thing); },\n\n  isDocFrag  : function (thing) { return isType.isObject(thing) && thing.nodeType === 11; },\n\n  isObject   : function (thing) { return !!thing && (typeof thing === 'object'); },\n\n  isFunction : function (thing) { return typeof thing === 'function'; },\n\n  isNumber   : function (thing) { return typeof thing === 'number'  ; },\n\n  isBool     : function (thing) { return typeof thing === 'boolean' ; },\n\n  isString   : function (thing) { return typeof thing === 'string'  ; },\n\n  trySelector: function (value) {\n    if (!isType.isString(value)) { return false; }\n\n    // an exception will be raised if it is invalid\n    domObjects.document.querySelector(value);\n    return true;\n  },\n};\n\nisType.isArray = function (thing) {\n  return (isType.isObject(thing)\n      && (typeof thing.length !== 'undefined')\n      && isType.isFunction(thing.splice));\n};\n\nmodule.exports = isType;\n","module.exports = (thing) => !!(thing && thing.Window) && (thing instanceof thing.Window);\n","function pointerExtend (dest, source) {\n  for (const prop in source) {\n    const prefixedPropREs = module.exports.prefixedPropREs;\n    let deprecated = false;\n\n    // skip deprecated prefixed properties\n    for (const vendor in prefixedPropREs) {\n      if (prop.indexOf(vendor) === 0 && prefixedPropREs[vendor].test(prop)) {\n        deprecated = true;\n        break;\n      }\n    }\n\n    if (!deprecated) {\n      dest[prop] = source[prop];\n    }\n  }\n  return dest;\n}\n\npointerExtend.prefixedPropREs = {\n  webkit: /(Movement[XY]|Radius[XY]|RotationAngle|Force)$/,\n};\n\nmodule.exports = pointerExtend;\n","const hypot         = require('./hypot');\nconst browser       = require('./browser');\nconst dom           = require('./domObjects');\nconst isType        = require('./isType');\nconst pointerExtend = require('./pointerExtend');\n\nconst pointerUtils = {\n  copyCoords: function (dest, src) {\n    dest.page = dest.page || {};\n    dest.page.x = src.page.x;\n    dest.page.y = src.page.y;\n\n    dest.client = dest.client || {};\n    dest.client.x = src.client.x;\n    dest.client.y = src.client.y;\n\n    dest.timeStamp = src.timeStamp;\n  },\n\n  setCoordDeltas: function (targetObj, prev, cur) {\n    targetObj.page.x    = cur.page.x    - prev.page.x;\n    targetObj.page.y    = cur.page.y    - prev.page.y;\n    targetObj.client.x  = cur.client.x  - prev.client.x;\n    targetObj.client.y  = cur.client.y  - prev.client.y;\n    targetObj.timeStamp = cur.timeStamp - prev.timeStamp;\n\n    // set pointer velocity\n    const dt = Math.max(targetObj.timeStamp / 1000, 0.001);\n\n    targetObj.page.speed   = hypot(targetObj.page.x, targetObj.page.y) / dt;\n    targetObj.page.vx      = targetObj.page.x / dt;\n    targetObj.page.vy      = targetObj.page.y / dt;\n\n    targetObj.client.speed = hypot(targetObj.client.x, targetObj.page.y) / dt;\n    targetObj.client.vx    = targetObj.client.x / dt;\n    targetObj.client.vy    = targetObj.client.y / dt;\n  },\n\n  isNativePointer: function  (pointer) {\n    return (pointer instanceof dom.Event || pointer instanceof dom.Touch);\n  },\n\n  // Get specified X/Y coords for mouse or event.touches[0]\n  getXY: function (type, pointer, xy) {\n    xy = xy || {};\n    type = type || 'page';\n\n    xy.x = pointer[type + 'X'];\n    xy.y = pointer[type + 'Y'];\n\n    return xy;\n  },\n\n  getPageXY: function (pointer, page) {\n    page = page || {};\n\n    // Opera Mobile handles the viewport and scrolling oddly\n    if (browser.isOperaMobile && pointerUtils.isNativePointer(pointer)) {\n      pointerUtils.getXY('screen', pointer, page);\n\n      page.x += window.scrollX;\n      page.y += window.scrollY;\n    }\n    else {\n      pointerUtils.getXY('page', pointer, page);\n    }\n\n    return page;\n  },\n\n  getClientXY: function (pointer, client) {\n    client = client || {};\n\n    if (browser.isOperaMobile && pointerUtils.isNativePointer(pointer)) {\n      // Opera Mobile handles the viewport and scrolling oddly\n      pointerUtils.getXY('screen', pointer, client);\n    }\n    else {\n      pointerUtils.getXY('client', pointer, client);\n    }\n\n    return client;\n  },\n\n  getPointerId: function (pointer) {\n    return isType.isNumber(pointer.pointerId)? pointer.pointerId : pointer.identifier;\n  },\n\n  setCoords: function (targetObj, pointers, timeStamp) {\n    const pointer = (pointers.length > 1\n                     ? pointerUtils.pointerAverage(pointers)\n                     : pointers[0]);\n\n    const tmpXY = {};\n\n    pointerUtils.getPageXY(pointer, tmpXY);\n    targetObj.page.x = tmpXY.x;\n    targetObj.page.y = tmpXY.y;\n\n    pointerUtils.getClientXY(pointer, tmpXY);\n    targetObj.client.x = tmpXY.x;\n    targetObj.client.y = tmpXY.y;\n\n    targetObj.timeStamp = isType.isNumber(timeStamp) ? timeStamp :new Date().getTime();\n  },\n\n  pointerExtend: pointerExtend,\n\n  getTouchPair: function (event) {\n    const touches = [];\n\n    // array of touches is supplied\n    if (isType.isArray(event)) {\n      touches[0] = event[0];\n      touches[1] = event[1];\n    }\n    // an event\n    else {\n      if (event.type === 'touchend') {\n        if (event.touches.length === 1) {\n          touches[0] = event.touches[0];\n          touches[1] = event.changedTouches[0];\n        }\n        else if (event.touches.length === 0) {\n          touches[0] = event.changedTouches[0];\n          touches[1] = event.changedTouches[1];\n        }\n      }\n      else {\n        touches[0] = event.touches[0];\n        touches[1] = event.touches[1];\n      }\n    }\n\n    return touches;\n  },\n\n  pointerAverage: function (pointers) {\n    const average = {\n      pageX  : 0,\n      pageY  : 0,\n      clientX: 0,\n      clientY: 0,\n      screenX: 0,\n      screenY: 0,\n    };\n\n    for (const pointer of pointers) {\n      for (const prop in average) {\n        average[prop] += pointer[prop];\n      }\n    }\n    for (const prop in average) {\n      average[prop] /= pointers.length;\n    }\n\n    return average;\n  },\n\n  touchBBox: function (event) {\n    if (!event.length && !(event.touches && event.touches.length > 1)) {\n      return;\n    }\n\n    const touches = pointerUtils.getTouchPair(event);\n    const minX = Math.min(touches[0].pageX, touches[1].pageX);\n    const minY = Math.min(touches[0].pageY, touches[1].pageY);\n    const maxX = Math.max(touches[0].pageX, touches[1].pageX);\n    const maxY = Math.max(touches[0].pageY, touches[1].pageY);\n\n    return {\n      x: minX,\n      y: minY,\n      left: minX,\n      top: minY,\n      width: maxX - minX,\n      height: maxY - minY,\n    };\n  },\n\n  touchDistance: function (event, deltaSource) {\n    const sourceX = deltaSource + 'X';\n    const sourceY = deltaSource + 'Y';\n    const touches = pointerUtils.getTouchPair(event);\n\n\n    const dx = touches[0][sourceX] - touches[1][sourceX];\n    const dy = touches[0][sourceY] - touches[1][sourceY];\n\n    return hypot(dx, dy);\n  },\n\n  touchAngle: function (event, prevAngle, deltaSource) {\n    const sourceX = deltaSource + 'X';\n    const sourceY = deltaSource + 'Y';\n    const touches = pointerUtils.getTouchPair(event);\n    const dx = touches[1][sourceX] - touches[0][sourceX];\n    const dy = touches[1][sourceY] - touches[0][sourceY];\n    const angle = 180 * Math.atan2(dy , dx) / Math.PI;\n\n    return  angle;\n  },\n};\n\nmodule.exports = pointerUtils;\n","const vendors = ['ms', 'moz', 'webkit', 'o'];\nlet lastTime = 0;\nlet request;\nlet cancel;\n\nfor (let x = 0; x < vendors.length && !window.requestAnimationFrame; x++) {\n  request = window[vendors[x] + 'RequestAnimationFrame'];\n  cancel = window[vendors[x] +'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];\n}\n\nif (!request) {\n  request = function (callback) {\n    const currTime = new Date().getTime();\n    const timeToCall = Math.max(0, 16 - (currTime - lastTime));\n    const id = setTimeout(function () { callback(currTime + timeToCall); },\n                          timeToCall);\n\n    lastTime = currTime + timeToCall;\n    return id;\n  };\n}\n\nif (!cancel) {\n  cancel = function (id) {\n    clearTimeout(id);\n  };\n}\n\nmodule.exports = {\n  request,\n  cancel,\n};\n","const extend = require('./extend');\n\nmodule.exports = {\n  xywhToTlbr: function (rect) {\n    if (rect && !('left' in rect && 'top' in rect)) {\n      rect = extend({}, rect);\n\n      rect.left   = rect.x || 0;\n      rect.top    = rect.y || 0;\n      rect.right  = rect.right   || (rect.left + rect.width);\n      rect.bottom = rect.bottom  || (rect.top + rect.height);\n    }\n\n    return rect;\n  },\n\n  tlbrToXywh: function (rect) {\n    if (rect && !('x' in rect && 'y' in rect)) {\n      rect = extend({}, rect);\n\n      rect.x      = rect.left || 0;\n      rect.top    = rect.top  || 0;\n      rect.width  = rect.width  || (rect.right  - rect.x);\n      rect.height = rect.height || (rect.bottom - rect.y);\n    }\n\n    return rect;\n  },\n};\n","const win = module.exports;\nconst isWindow = require('./isWindow');\n\nfunction init (window) {\n  // get wrapped window if using Shadow DOM polyfill\n\n  win.realWindow = window;\n\n  // create a TextNode\n  const el = window.document.createTextNode('');\n\n  // check if it's wrapped by a polyfill\n  if (el.ownerDocument !== window.document\n      && typeof window.wrap === 'function'\n    && window.wrap(el) === el) {\n    // return wrapped window\n    win.window = window.wrap(window);\n  }\n\n  // no Shadow DOM polyfil or native implementation\n  win.window = window;\n}\n\nif (typeof window === 'undefined') {\n  win.window     = undefined;\n  win.realWindow = undefined;\n}\nelse {\n  init(window);\n}\n\nwin.getWindow = function getWindow (node) {\n  if (isWindow(node)) {\n    return node;\n  }\n\n  const rootNode = (node.ownerDocument || node);\n\n  return rootNode.defaultView || rootNode.parentWindow || win.window;\n};\n\nwin.init = init;\n"]}